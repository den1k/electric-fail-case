{
"version":3,
"file":"module$node_modules$vega_label$build$vega_label.js",
"lineCount":31,
"mappings":"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",
"sources":["node_modules/vega-label/build/vega-label.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_label$build$vega_label\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-scenegraph'), require('vega-canvas'), require('vega-dataflow'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-scenegraph', 'vega-canvas', 'vega-dataflow', 'vega-util'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.vega));\n})(this, (function (exports, vegaScenegraph, vegaCanvas, vegaDataflow, vegaUtil) { 'use strict';\n\n  const ALPHA_MASK = 0xff000000;\n  function baseBitmaps($, data) {\n    const bitmap = $.bitmap(); // when there is no base mark but data points are to be avoided\n\n    (data || []).forEach(d => bitmap.set($(d.boundary[0]), $(d.boundary[3])));\n    return [bitmap, undefined];\n  }\n  function markBitmaps($, baseMark, avoidMarks, labelInside, isGroupArea) {\n    // create canvas\n    const width = $.width,\n          height = $.height,\n          border = labelInside || isGroupArea,\n          context = vegaCanvas.canvas(width, height).getContext('2d'),\n          baseMarkContext = vegaCanvas.canvas(width, height).getContext('2d'),\n          strokeContext = border && vegaCanvas.canvas(width, height).getContext('2d'); // render all marks to be avoided into canvas\n\n    avoidMarks.forEach(items => draw(context, items, false));\n    draw(baseMarkContext, baseMark, false);\n\n    if (border) {\n      draw(strokeContext, baseMark, true);\n    } // get canvas buffer, create bitmaps\n\n\n    const buffer = getBuffer(context, width, height),\n          baseMarkBuffer = getBuffer(baseMarkContext, width, height),\n          strokeBuffer = border && getBuffer(strokeContext, width, height),\n          layer1 = $.bitmap(),\n          layer2 = border && $.bitmap(); // populate bitmap layers\n\n    let x, y, u, v, index, alpha, strokeAlpha, baseMarkAlpha;\n\n    for (y = 0; y < height; ++y) {\n      for (x = 0; x < width; ++x) {\n        index = y * width + x;\n        alpha = buffer[index] & ALPHA_MASK;\n        baseMarkAlpha = baseMarkBuffer[index] & ALPHA_MASK;\n        strokeAlpha = border && strokeBuffer[index] & ALPHA_MASK;\n\n        if (alpha || strokeAlpha || baseMarkAlpha) {\n          u = $(x);\n          v = $(y);\n          if (!isGroupArea && (alpha || baseMarkAlpha)) layer1.set(u, v); // update interior bitmap\n\n          if (border && (alpha || strokeAlpha)) layer2.set(u, v); // update border bitmap\n        }\n      }\n    }\n\n    return [layer1, layer2];\n  }\n\n  function getBuffer(context, width, height) {\n    return new Uint32Array(context.getImageData(0, 0, width, height).data.buffer);\n  }\n\n  function draw(context, items, interior) {\n    if (!items.length) return;\n    const type = items[0].mark.marktype;\n\n    if (type === 'group') {\n      items.forEach(group => {\n        group.items.forEach(mark => draw(context, mark.items, interior));\n      });\n    } else {\n      vegaScenegraph.Marks[type].draw(context, {\n        items: interior ? items.map(prepare) : items\n      });\n    }\n  }\n  /**\n   * Prepare item before drawing into canvas (setting stroke and opacity)\n   * @param {object} source item to be prepared\n   * @returns prepared item\n   */\n\n\n  function prepare(source) {\n    const item = vegaDataflow.rederive(source, {});\n\n    if (item.stroke && item.strokeOpacity !== 0 || item.fill && item.fillOpacity !== 0) {\n      return { ...item,\n        strokeOpacity: 1,\n        stroke: '#000',\n        fillOpacity: 0\n      };\n    }\n\n    return item;\n  }\n\n  const DIV = 5,\n        // bit shift from x, y index to bit vector array index\n  MOD = 31,\n        // bit mask for index lookup within a bit vector\n  SIZE = 32,\n        // individual bit vector size\n  RIGHT0 = new Uint32Array(SIZE + 1),\n        // left-anchored bit vectors, full -> 0\n  RIGHT1 = new Uint32Array(SIZE + 1); // right-anchored bit vectors, 0 -> full\n\n  RIGHT1[0] = 0;\n  RIGHT0[0] = ~RIGHT1[0];\n\n  for (let i = 1; i <= SIZE; ++i) {\n    RIGHT1[i] = RIGHT1[i - 1] << 1 | 1;\n    RIGHT0[i] = ~RIGHT1[i];\n  }\n\n  function Bitmap (w, h) {\n    const array = new Uint32Array(~~((w * h + SIZE) / SIZE));\n\n    function _set(index, mask) {\n      array[index] |= mask;\n    }\n\n    function _clear(index, mask) {\n      array[index] &= mask;\n    }\n\n    return {\n      array: array,\n      get: (x, y) => {\n        const index = y * w + x;\n        return array[index >>> DIV] & 1 << (index & MOD);\n      },\n      set: (x, y) => {\n        const index = y * w + x;\n\n        _set(index >>> DIV, 1 << (index & MOD));\n      },\n      clear: (x, y) => {\n        const index = y * w + x;\n\n        _clear(index >>> DIV, ~(1 << (index & MOD)));\n      },\n      getRange: (x, y, x2, y2) => {\n        let r = y2,\n            start,\n            end,\n            indexStart,\n            indexEnd;\n\n        for (; r >= y; --r) {\n          start = r * w + x;\n          end = r * w + x2;\n          indexStart = start >>> DIV;\n          indexEnd = end >>> DIV;\n\n          if (indexStart === indexEnd) {\n            if (array[indexStart] & RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]) {\n              return true;\n            }\n          } else {\n            if (array[indexStart] & RIGHT0[start & MOD]) return true;\n            if (array[indexEnd] & RIGHT1[(end & MOD) + 1]) return true;\n\n            for (let i = indexStart + 1; i < indexEnd; ++i) {\n              if (array[i]) return true;\n            }\n          }\n        }\n\n        return false;\n      },\n      setRange: (x, y, x2, y2) => {\n        let start, end, indexStart, indexEnd, i;\n\n        for (; y <= y2; ++y) {\n          start = y * w + x;\n          end = y * w + x2;\n          indexStart = start >>> DIV;\n          indexEnd = end >>> DIV;\n\n          if (indexStart === indexEnd) {\n            _set(indexStart, RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]);\n          } else {\n            _set(indexStart, RIGHT0[start & MOD]);\n\n            _set(indexEnd, RIGHT1[(end & MOD) + 1]);\n\n            for (i = indexStart + 1; i < indexEnd; ++i) _set(i, 0xffffffff);\n          }\n        }\n      },\n      clearRange: (x, y, x2, y2) => {\n        let start, end, indexStart, indexEnd, i;\n\n        for (; y <= y2; ++y) {\n          start = y * w + x;\n          end = y * w + x2;\n          indexStart = start >>> DIV;\n          indexEnd = end >>> DIV;\n\n          if (indexStart === indexEnd) {\n            _clear(indexStart, RIGHT1[start & MOD] | RIGHT0[(end & MOD) + 1]);\n          } else {\n            _clear(indexStart, RIGHT1[start & MOD]);\n\n            _clear(indexEnd, RIGHT0[(end & MOD) + 1]);\n\n            for (i = indexStart + 1; i < indexEnd; ++i) _clear(i, 0);\n          }\n        }\n      },\n      outOfBounds: (x, y, x2, y2) => x < 0 || y < 0 || y2 >= h || x2 >= w\n    };\n  }\n\n  function scaler (width, height, padding) {\n    const ratio = Math.max(1, Math.sqrt(width * height / 1e6)),\n          w = ~~((width + 2 * padding + ratio) / ratio),\n          h = ~~((height + 2 * padding + ratio) / ratio),\n          scale = _ => ~~((_ + padding) / ratio);\n\n    scale.invert = _ => _ * ratio - padding;\n\n    scale.bitmap = () => Bitmap(w, h);\n\n    scale.ratio = ratio;\n    scale.padding = padding;\n    scale.width = width;\n    scale.height = height;\n    return scale;\n  }\n\n  function placeAreaLabelNaive ($, bitmaps, avoidBaseMark, markIndex) {\n    const width = $.width,\n          height = $.height; // try to place a label within an input area mark\n\n    return function (d) {\n      const items = d.datum.datum.items[markIndex].items,\n            // area points\n      n = items.length,\n            // number of points\n      textHeight = d.datum.fontSize,\n            // label width\n      textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text); // label height\n\n      let maxAreaWidth = 0,\n          x1,\n          x2,\n          y1,\n          y2,\n          x,\n          y,\n          areaWidth; // for each area sample point\n\n      for (let i = 0; i < n; ++i) {\n        x1 = items[i].x;\n        y1 = items[i].y;\n        x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n        y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n        x = (x1 + x2) / 2;\n        y = (y1 + y2) / 2;\n        areaWidth = Math.abs(x2 - x1 + y2 - y1);\n\n        if (areaWidth >= maxAreaWidth) {\n          maxAreaWidth = areaWidth;\n          d.x = x;\n          d.y = y;\n        }\n      }\n\n      x = textWidth / 2;\n      y = textHeight / 2;\n      x1 = d.x - x;\n      x2 = d.x + x;\n      y1 = d.y - y;\n      y2 = d.y + y;\n      d.align = 'center';\n\n      if (x1 < 0 && x2 <= width) {\n        d.align = 'left';\n      } else if (0 <= x1 && width < x2) {\n        d.align = 'right';\n      }\n\n      d.baseline = 'middle';\n\n      if (y1 < 0 && y2 <= height) {\n        d.baseline = 'top';\n      } else if (0 <= y1 && height < y2) {\n        d.baseline = 'bottom';\n      }\n\n      return true;\n    };\n  }\n\n  function outOfBounds(x, y, textWidth, textHeight, width, height) {\n    let r = textWidth / 2;\n    return x - r < 0 || x + r > width || y - (r = textHeight / 2) < 0 || y + r > height;\n  }\n  function collision($, x, y, textHeight, textWidth, h, bm0, bm1) {\n    const w = textWidth * h / (textHeight * 2),\n          x1 = $(x - w),\n          x2 = $(x + w),\n          y1 = $(y - (h = h / 2)),\n          y2 = $(y + h);\n    return bm0.outOfBounds(x1, y1, x2, y2) || bm0.getRange(x1, y1, x2, y2) || bm1 && bm1.getRange(x1, y1, x2, y2);\n  }\n\n  function placeAreaLabelReducedSearch ($, bitmaps, avoidBaseMark, markIndex) {\n    const width = $.width,\n          height = $.height,\n          bm0 = bitmaps[0],\n          // where labels have been placed\n    bm1 = bitmaps[1]; // area outlines\n\n    function tryLabel(_x, _y, maxSize, textWidth, textHeight) {\n      const x = $.invert(_x),\n            y = $.invert(_y);\n      let lo = maxSize,\n          hi = height,\n          mid;\n\n      if (!outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n        // if the label fits at the current sample point,\n        // perform binary search to find the largest font size that fits\n        while (hi - lo >= 1) {\n          mid = (lo + hi) / 2;\n\n          if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n            hi = mid;\n          } else {\n            lo = mid;\n          }\n        } // place label if current lower bound exceeds prior max font size\n\n\n        if (lo > maxSize) {\n          return [x, y, lo, true];\n        }\n      }\n    } // try to place a label within an input area mark\n\n\n    return function (d) {\n      const items = d.datum.datum.items[markIndex].items,\n            // area points\n      n = items.length,\n            // number of points\n      textHeight = d.datum.fontSize,\n            // label width\n      textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text); // label height\n\n      let maxSize = avoidBaseMark ? textHeight : 0,\n          labelPlaced = false,\n          labelPlaced2 = false,\n          maxAreaWidth = 0,\n          x1,\n          x2,\n          y1,\n          y2,\n          x,\n          y,\n          _x,\n          _y,\n          _x1,\n          _xMid,\n          _x2,\n          _y1,\n          _yMid,\n          _y2,\n          areaWidth,\n          result,\n          swapTmp; // for each area sample point\n\n\n      for (let i = 0; i < n; ++i) {\n        x1 = items[i].x;\n        y1 = items[i].y;\n        x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n        y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n\n        if (x1 > x2) {\n          swapTmp = x1;\n          x1 = x2;\n          x2 = swapTmp;\n        }\n\n        if (y1 > y2) {\n          swapTmp = y1;\n          y1 = y2;\n          y2 = swapTmp;\n        }\n\n        _x1 = $(x1);\n        _x2 = $(x2);\n        _xMid = ~~((_x1 + _x2) / 2);\n        _y1 = $(y1);\n        _y2 = $(y2);\n        _yMid = ~~((_y1 + _y2) / 2); // search along the line from mid point between the 2 border to lower border\n\n        for (_x = _xMid; _x >= _x1; --_x) {\n          for (_y = _yMid; _y >= _y1; --_y) {\n            result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n\n            if (result) {\n              [d.x, d.y, maxSize, labelPlaced] = result;\n            }\n          }\n        } // search along the line from mid point between the 2 border to upper border\n\n\n        for (_x = _xMid; _x <= _x2; ++_x) {\n          for (_y = _yMid; _y <= _y2; ++_y) {\n            result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n\n            if (result) {\n              [d.x, d.y, maxSize, labelPlaced] = result;\n            }\n          }\n        } // place label at slice center if not placed through other means\n        // and if we're not avoiding overlap with other areas\n\n\n        if (!labelPlaced && !avoidBaseMark) {\n          // one span is zero, hence we can add\n          areaWidth = Math.abs(x2 - x1 + y2 - y1);\n          x = (x1 + x2) / 2;\n          y = (y1 + y2) / 2; // place label if it fits and improves the max area width\n\n          if (areaWidth >= maxAreaWidth && !outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n            maxAreaWidth = areaWidth;\n            d.x = x;\n            d.y = y;\n            labelPlaced2 = true;\n          }\n        }\n      } // record current label placement information, update label bitmap\n\n\n      if (labelPlaced || labelPlaced2) {\n        x = textWidth / 2;\n        y = textHeight / 2;\n        bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n        d.align = 'center';\n        d.baseline = 'middle';\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  const X_DIR = [-1, -1, 1, 1];\n  const Y_DIR = [-1, 1, -1, 1];\n  function placeAreaLabelFloodFill ($, bitmaps, avoidBaseMark, markIndex) {\n    const width = $.width,\n          height = $.height,\n          bm0 = bitmaps[0],\n          // where labels have been placed\n    bm1 = bitmaps[1],\n          // area outlines\n    bm2 = $.bitmap(); // flood-fill visitations\n    // try to place a label within an input area mark\n\n    return function (d) {\n      const items = d.datum.datum.items[markIndex].items,\n            // area points\n      n = items.length,\n            // number of points\n      textHeight = d.datum.fontSize,\n            // label width\n      textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text),\n            // label height\n      stack = []; // flood fill stack\n\n      let maxSize = avoidBaseMark ? textHeight : 0,\n          labelPlaced = false,\n          labelPlaced2 = false,\n          maxAreaWidth = 0,\n          x1,\n          x2,\n          y1,\n          y2,\n          x,\n          y,\n          _x,\n          _y,\n          lo,\n          hi,\n          mid,\n          areaWidth; // for each area sample point\n\n\n      for (let i = 0; i < n; ++i) {\n        x1 = items[i].x;\n        y1 = items[i].y;\n        x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n        y2 = items[i].y2 === undefined ? y1 : items[i].y2; // add scaled center point to stack\n\n        stack.push([$((x1 + x2) / 2), $((y1 + y2) / 2)]); // perform flood fill, visit points\n\n        while (stack.length) {\n          [_x, _y] = stack.pop(); // exit if point already marked\n\n          if (bm0.get(_x, _y) || bm1.get(_x, _y) || bm2.get(_x, _y)) continue; // mark point in flood fill bitmap\n          // add search points for all (in bound) directions\n\n          bm2.set(_x, _y);\n\n          for (let j = 0; j < 4; ++j) {\n            x = _x + X_DIR[j];\n            y = _y + Y_DIR[j];\n            if (!bm2.outOfBounds(x, y, x, y)) stack.push([x, y]);\n          } // unscale point back to x, y space\n\n\n          x = $.invert(_x);\n          y = $.invert(_y);\n          lo = maxSize;\n          hi = height; // TODO: make this bound smaller\n\n          if (!outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n            // if the label fits at the current sample point,\n            // perform binary search to find the largest font size that fits\n            while (hi - lo >= 1) {\n              mid = (lo + hi) / 2;\n\n              if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n                hi = mid;\n              } else {\n                lo = mid;\n              }\n            } // place label if current lower bound exceeds prior max font size\n\n\n            if (lo > maxSize) {\n              d.x = x;\n              d.y = y;\n              maxSize = lo;\n              labelPlaced = true;\n            }\n          }\n        } // place label at slice center if not placed through other means\n        // and if we're not avoiding overlap with other areas\n\n\n        if (!labelPlaced && !avoidBaseMark) {\n          // one span is zero, hence we can add\n          areaWidth = Math.abs(x2 - x1 + y2 - y1);\n          x = (x1 + x2) / 2;\n          y = (y1 + y2) / 2; // place label if it fits and improves the max area width\n\n          if (areaWidth >= maxAreaWidth && !outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n            maxAreaWidth = areaWidth;\n            d.x = x;\n            d.y = y;\n            labelPlaced2 = true;\n          }\n        }\n      } // record current label placement information, update label bitmap\n\n\n      if (labelPlaced || labelPlaced2) {\n        x = textWidth / 2;\n        y = textHeight / 2;\n        bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n        d.align = 'center';\n        d.baseline = 'middle';\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  const Aligns = ['right', 'center', 'left'],\n        Baselines = ['bottom', 'middle', 'top'];\n  function placeMarkLabel ($, bitmaps, anchors, offsets) {\n    const width = $.width,\n          height = $.height,\n          bm0 = bitmaps[0],\n          bm1 = bitmaps[1],\n          n = offsets.length;\n    return function (d) {\n      const boundary = d.boundary,\n            textHeight = d.datum.fontSize; // can not be placed if the mark is not visible in the graph bound\n\n      if (boundary[2] < 0 || boundary[5] < 0 || boundary[0] > width || boundary[3] > height) {\n        return false;\n      }\n\n      let textWidth = d.textWidth ?? 0,\n          dx,\n          dy,\n          isInside,\n          sizeFactor,\n          insideFactor,\n          x1,\n          x2,\n          y1,\n          y2,\n          xc,\n          yc,\n          _x1,\n          _x2,\n          _y1,\n          _y2; // for each anchor and offset\n\n\n      for (let i = 0; i < n; ++i) {\n        dx = (anchors[i] & 0x3) - 1;\n        dy = (anchors[i] >>> 0x2 & 0x3) - 1;\n        isInside = dx === 0 && dy === 0 || offsets[i] < 0;\n        sizeFactor = dx && dy ? Math.SQRT1_2 : 1;\n        insideFactor = offsets[i] < 0 ? -1 : 1;\n        x1 = boundary[1 + dx] + offsets[i] * dx * sizeFactor;\n        yc = boundary[4 + dy] + insideFactor * textHeight * dy / 2 + offsets[i] * dy * sizeFactor;\n        y1 = yc - textHeight / 2;\n        y2 = yc + textHeight / 2;\n        _x1 = $(x1);\n        _y1 = $(y1);\n        _y2 = $(y2);\n\n        if (!textWidth) {\n          // to avoid finding width of text label,\n          if (!test(_x1, _x1, _y1, _y2, bm0, bm1, x1, x1, y1, y2, boundary, isInside)) {\n            // skip this anchor/offset option if we fail to place a label with 1px width\n            continue;\n          } else {\n            // Otherwise, find the label width\n            textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text);\n          }\n        }\n\n        xc = x1 + insideFactor * textWidth * dx / 2;\n        x1 = xc - textWidth / 2;\n        x2 = xc + textWidth / 2;\n        _x1 = $(x1);\n        _x2 = $(x2);\n\n        if (test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside)) {\n          // place label if the position is placeable\n          d.x = !dx ? xc : dx * insideFactor < 0 ? x2 : x1;\n          d.y = !dy ? yc : dy * insideFactor < 0 ? y2 : y1;\n          d.align = Aligns[dx * insideFactor + 1];\n          d.baseline = Baselines[dy * insideFactor + 1];\n          bm0.setRange(_x1, _y1, _x2, _y2);\n          return true;\n        }\n      }\n\n      return false;\n    };\n  } // Test if a label with the given dimensions can be added without overlap\n\n  function test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside) {\n    return !(bm0.outOfBounds(_x1, _y1, _x2, _y2) || (isInside && bm1 || bm0).getRange(_x1, _y1, _x2, _y2));\n  }\n\n  const TOP = 0x0,\n        MIDDLE = 0x4,\n        BOTTOM = 0x8,\n        LEFT = 0x0,\n        CENTER = 0x1,\n        RIGHT = 0x2; // Mapping from text anchor to number representation\n\n  const anchorCode = {\n    'top-left': TOP + LEFT,\n    'top': TOP + CENTER,\n    'top-right': TOP + RIGHT,\n    'left': MIDDLE + LEFT,\n    'middle': MIDDLE + CENTER,\n    'right': MIDDLE + RIGHT,\n    'bottom-left': BOTTOM + LEFT,\n    'bottom': BOTTOM + CENTER,\n    'bottom-right': BOTTOM + RIGHT\n  };\n  const placeAreaLabel = {\n    'naive': placeAreaLabelNaive,\n    'reduced-search': placeAreaLabelReducedSearch,\n    'floodfill': placeAreaLabelFloodFill\n  };\n  function labelLayout (texts, size, compare, offset, anchor, avoidMarks, avoidBaseMark, lineAnchor, markIndex, padding, method) {\n    // early exit for empty data\n    if (!texts.length) return texts;\n    const positions = Math.max(offset.length, anchor.length),\n          offsets = getOffsets(offset, positions),\n          anchors = getAnchors(anchor, positions),\n          marktype = markType(texts[0].datum),\n          grouptype = marktype === 'group' && texts[0].datum.items[markIndex].marktype,\n          isGroupArea = grouptype === 'area',\n          boundary = markBoundary(marktype, grouptype, lineAnchor, markIndex),\n          infPadding = padding === null || padding === Infinity,\n          isNaiveGroupArea = isGroupArea && method === 'naive';\n    let maxTextWidth = -1,\n        maxTextHeight = -1; // prepare text mark data for placing\n\n    const data = texts.map(d => {\n      const textWidth = infPadding ? vegaScenegraph.textMetrics.width(d, d.text) : undefined;\n      maxTextWidth = Math.max(maxTextWidth, textWidth);\n      maxTextHeight = Math.max(maxTextHeight, d.fontSize);\n      return {\n        datum: d,\n        opacity: 0,\n        x: undefined,\n        y: undefined,\n        align: undefined,\n        baseline: undefined,\n        boundary: boundary(d),\n        textWidth\n      };\n    });\n    padding = padding === null || padding === Infinity ? Math.max(maxTextWidth, maxTextHeight) + Math.max(...offset) : padding;\n    const $ = scaler(size[0], size[1], padding);\n    let bitmaps;\n\n    if (!isNaiveGroupArea) {\n      // sort labels in priority order, if comparator is provided\n      if (compare) {\n        data.sort((a, b) => compare(a.datum, b.datum));\n      } // flag indicating if label can be placed inside its base mark\n\n\n      let labelInside = false;\n\n      for (let i = 0; i < anchors.length && !labelInside; ++i) {\n        // label inside if anchor is at center\n        // label inside if offset to be inside the mark bound\n        labelInside = anchors[i] === 0x5 || offsets[i] < 0;\n      } // extract data information from base mark when base mark is to be avoided\n      // base mark is implicitly avoided if it is a group area\n\n\n      const baseMark = (marktype && avoidBaseMark || isGroupArea) && texts.map(d => d.datum); // generate bitmaps for layout calculation\n\n      bitmaps = avoidMarks.length || baseMark ? markBitmaps($, baseMark || [], avoidMarks, labelInside, isGroupArea) : baseBitmaps($, avoidBaseMark && data);\n    } // generate label placement function\n\n\n    const place = isGroupArea ? placeAreaLabel[method]($, bitmaps, avoidBaseMark, markIndex) : placeMarkLabel($, bitmaps, anchors, offsets); // place all labels\n\n    data.forEach(d => d.opacity = +place(d));\n    return data;\n  }\n\n  function getOffsets(_, count) {\n    const offsets = new Float64Array(count),\n          n = _.length;\n\n    for (let i = 0; i < n; ++i) offsets[i] = _[i] || 0;\n\n    for (let i = n; i < count; ++i) offsets[i] = offsets[n - 1];\n\n    return offsets;\n  }\n\n  function getAnchors(_, count) {\n    const anchors = new Int8Array(count),\n          n = _.length;\n\n    for (let i = 0; i < n; ++i) anchors[i] |= anchorCode[_[i]];\n\n    for (let i = n; i < count; ++i) anchors[i] = anchors[n - 1];\n\n    return anchors;\n  }\n\n  function markType(item) {\n    return item && item.mark && item.mark.marktype;\n  }\n  /**\n   * Factory function for function for getting base mark boundary, depending\n   * on mark and group type. When mark type is undefined, line or area: boundary\n   * is the coordinate of each data point. When base mark is grouped line,\n   * boundary is either at the start or end of the line depending on the\n   * value of lineAnchor. Otherwise, use bounds of base mark.\n   */\n\n\n  function markBoundary(marktype, grouptype, lineAnchor, markIndex) {\n    const xy = d => [d.x, d.x, d.x, d.y, d.y, d.y];\n\n    if (!marktype) {\n      return xy; // no reactive geometry\n    } else if (marktype === 'line' || marktype === 'area') {\n      return d => xy(d.datum);\n    } else if (grouptype === 'line') {\n      return d => {\n        const items = d.datum.items[markIndex].items;\n        return xy(items.length ? items[lineAnchor === 'start' ? 0 : items.length - 1] : {\n          x: NaN,\n          y: NaN\n        });\n      };\n    } else {\n      return d => {\n        const b = d.datum.bounds;\n        return [b.x1, (b.x1 + b.x2) / 2, b.x2, b.y1, (b.y1 + b.y2) / 2, b.y2];\n      };\n    }\n  }\n\n  const Output = ['x', 'y', 'opacity', 'align', 'baseline'];\n  const Anchors = ['top-left', 'left', 'bottom-left', 'top', 'bottom', 'top-right', 'right', 'bottom-right'];\n  /**\n   * Compute text label layout to annotate marks.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The size of the layout, provided as a [width, height] array.\n   * @param {function(*,*): number} [params.sort] - An optional\n   *   comparator function for sorting label data in priority order.\n   * @param {Array<string>} [params.anchor] - Label anchor points relative to the base mark bounding box.\n   *   The available options are 'top-left', 'left', 'bottom-left', 'top',\n   *   'bottom', 'top-right', 'right', 'bottom-right', 'middle'.\n   * @param {Array<number>} [params.offset] - Label offsets (in pixels) from the base mark bounding box.\n   *   This parameter is parallel to the list of anchor points.\n   * @param {number | null} [params.padding=0] - The amount (in pixels) that a label may exceed the layout size.\n   *   If this parameter is null, a label may exceed the layout size without any boundary.\n   * @param {string} [params.lineAnchor='end'] - For group line mark labels only, indicates the anchor\n   *   position for labels. One of 'start' or 'end'.\n   * @param {string} [params.markIndex=0] - For group mark labels only, an index indicating\n   *   which mark within the group should be labeled.\n   * @param {Array<number>} [params.avoidMarks] - A list of additional mark names for which the label\n   *   layout should avoid overlap.\n   * @param {boolean} [params.avoidBaseMark=true] - Boolean flag indicating if labels should avoid\n   *   overlap with the underlying base mark being labeled.\n   * @param {string} [params.method='naive'] - For area make labels only, a method for\n   *   place labels. One of 'naive', 'reduced-search', or 'floodfill'.\n   * @param {Array<string>} [params.as] - The output fields written by the transform.\n   *   The default is ['x', 'y', 'opacity', 'align', 'baseline'].\n   */\n\n  function Label(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Label.Definition = {\n    type: 'Label',\n    metadata: {\n      modifies: true\n    },\n    params: [{\n      name: 'size',\n      type: 'number',\n      array: true,\n      length: 2,\n      required: true\n    }, {\n      name: 'sort',\n      type: 'compare'\n    }, {\n      name: 'anchor',\n      type: 'string',\n      array: true,\n      default: Anchors\n    }, {\n      name: 'offset',\n      type: 'number',\n      array: true,\n      default: [1]\n    }, {\n      name: 'padding',\n      type: 'number',\n      default: 0,\n      null: true\n    }, {\n      name: 'lineAnchor',\n      type: 'string',\n      values: ['start', 'end'],\n      default: 'end'\n    }, {\n      name: 'markIndex',\n      type: 'number',\n      default: 0\n    }, {\n      name: 'avoidBaseMark',\n      type: 'boolean',\n      default: true\n    }, {\n      name: 'avoidMarks',\n      type: 'data',\n      array: true\n    }, {\n      name: 'method',\n      type: 'string',\n      default: 'naive'\n    }, {\n      name: 'as',\n      type: 'string',\n      array: true,\n      length: Output.length,\n      default: Output\n    }]\n  };\n  vegaUtil.inherits(Label, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      function modp(param) {\n        const p = _[param];\n        return vegaUtil.isFunction(p) && pulse.modified(p.fields);\n      }\n\n      const mod = _.modified();\n\n      if (!(mod || pulse.changed(pulse.ADD_REM) || modp('sort'))) return;\n\n      if (!_.size || _.size.length !== 2) {\n        vegaUtil.error('Size parameter should be specified as a [width, height] array.');\n      }\n\n      const as = _.as || Output; // run label layout\n\n      labelLayout(pulse.materialize(pulse.SOURCE).source || [], _.size, _.sort, vegaUtil.array(_.offset == null ? 1 : _.offset), vegaUtil.array(_.anchor || Anchors), _.avoidMarks || [], _.avoidBaseMark !== false, _.lineAnchor || 'end', _.markIndex || 0, _.padding === undefined ? 0 : _.padding, _.method || 'naive').forEach(l => {\n        // write layout results to data stream\n        const t = l.datum;\n        t[as[0]] = l.x;\n        t[as[1]] = l.y;\n        t[as[2]] = l.opacity;\n        t[as[3]] = l.align;\n        t[as[4]] = l.baseline;\n      });\n      return pulse.reflow(mod).modifies(as);\n    }\n\n  });\n\n  exports.label = Label;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaScenegraph","vegaCanvas","vegaDataflow","vegaUtil","baseBitmaps","$","data","bitmap","forEach","d","set","boundary","undefined","markBitmaps","baseMark","avoidMarks","labelInside","isGroupArea","width","height","border","context","canvas","getContext","baseMarkContext","strokeContext","items","draw","buffer","Uint32Array","getImageData","baseMarkBuffer","strokeBuffer","layer1","layer2","x","y","v","alpha","strokeAlpha","baseMarkAlpha","index","ALPHA_MASK","u","interior","length","type","mark","marktype","group","Marks","map","prepare","source","item","rederive","stroke","strokeOpacity","fill","fillOpacity","Bitmap","w","h","array","SIZE","get","DIV","MOD","clear","mask","getRange","x2","y2","end","indexStart","indexEnd","r","start","RIGHT0","RIGHT1","i","setRange","clearRange","outOfBounds","scaler","padding","ratio","Math","max","sqrt","scale","_","invert","scale.invert","scale.bitmap","textWidth","textHeight","collision","bm0","bm1","x1","y1","placeMarkLabel","bitmaps","anchors","offsets","n","datum","fontSize","dx","dy","insideFactor","yc","_y1","_y2","isInside","sizeFactor","SQRT1_2","_x1","_x2","textMetrics","text","xc","align","Aligns","baseline","Baselines","labelLayout","texts","size","compare","offset","anchor","avoidBaseMark","lineAnchor","markIndex","method","positions","getOffsets","getAnchors","markType","grouptype","markBoundary","infPadding","Infinity","isNaiveGroupArea","maxTextWidth","maxTextHeight","opacity","sort","a","b","place","placeAreaLabel","count","Float64Array","Int8Array","anchorCode","xy","NaN","bounds","Label","params","Transform","call","X_DIR","Y_DIR","placeAreaLabelNaive","maxAreaWidth","areaWidth","abs","placeAreaLabelReducedSearch","tryLabel","_x","_y","maxSize","lo","hi","mid","labelPlaced","labelPlaced2","_xMid","_yMid","result","swapTmp","placeAreaLabelFloodFill","bm2","stack","push","pop","j","Output","Anchors","Definition","metadata","modifies","name","required","default","null","values","inherits","transform","pulse","modp","param","p","isFunction","modified","fields","mod","changed","ADD_REM","error","as","materialize","SOURCE","l","t","reflow","label","Object","defineProperty","value"]
}
