shadow$provide.module$node_modules$vega_force$build$vega_force=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$vega_dataflow$build$vega_dataflow"),require("module$node_modules$vega_util$build$vega_util")):"function"===typeof define&&define.amd?define(["exports","vega-dataflow","vega-util"],factory):(global="undefined"!==typeof globalThis?globalThis:
global||self,factory((global.vega=global.vega||{},global.vega.transforms={}),global.vega,global.vega))})(this,function(exports,vegaDataflow,vegaUtil){function add(tree,x,y,d){if(isNaN(x)||isNaN(y))return tree;var parent,node=tree._root;d={data:d};var x0=tree._x0,y0=tree._y0,x1=tree._x1,y1=tree._y1,xm,ym,right,bottom,i;if(!node)return tree._root=d,tree;for(;node.length;)if((right=x>=(xm=(x0+x1)/2))?x0=xm:x1=xm,(bottom=y>=(ym=(y0+y1)/2))?y0=ym:y1=ym,parent=node,!(node=node[i=bottom<<1|right]))return parent[i]=
d,tree;var xp=+tree._x.call(null,node.data);var yp=+tree._y.call(null,node.data);if(x===xp&&y===yp)return d.next=node,parent?parent[i]=d:tree._root=d,tree;do parent=parent?parent[i]=Array(4):tree._root=Array(4),(right=x>=(xm=(x0+x1)/2))?x0=xm:x1=xm,(bottom=y>=(ym=(y0+y1)/2))?y0=ym:y1=ym;while((i=bottom<<1|right)===(right=(yp>=ym)<<1|xp>=xm));return parent[right]=node,parent[i]=d,tree}function Quad(node,x0,y0,x1,y1){this.node=node;this.x0=x0;this.y0=y0;this.x1=x1;this.y1=y1}function defaultX(d){return d[0]}
function defaultY(d){return d[1]}function quadtree(nodes,x,y){x=new Quadtree(null==x?defaultX:x,null==y?defaultY:y,NaN,NaN,NaN,NaN);return null==nodes?x:x.addAll(nodes)}function Quadtree(x,y,x0,y0,x1,y1){this._x=x;this._y=y;this._x0=x0;this._y0=y0;this._x1=x1;this._y1=y1;this._root=void 0}function leaf_copy(leaf){for(var copy={data:leaf.data},next=copy;leaf=leaf.next;)next=next.next={data:leaf.data};return copy}function constant(x){return function(){return x}}function x$1(d){return d.x+d.vx}function y$1(d){return d.y+
d.vy}function index(d){return d.index}function find(nodeById,nodeId){nodeById=nodeById.get(nodeId);if(!nodeById)throw Error("node not found: "+nodeId);return nodeById}function dispatch(){for(var i=0,n=arguments.length,_={},t;i<n;++i){if(!(t=arguments[i]+"")||t in _||/[\s.]/.test(t))throw Error("illegal type: "+t);_[t]=[]}return new Dispatch(_)}function Dispatch(_){this._=_}function parseTypenames(typenames,types){return typenames.trim().split(/^|\s+/).map(function(t){var name="",i=t.indexOf(".");
0<=i&&(name=t.slice(i+1),t=t.slice(0,i));if(t&&!types.hasOwnProperty(t))throw Error("unknown type: "+t);return{type:t,name}})}function set(type,name,callback){for(var i=0,n=type.length;i<n;++i)if(type[i].name===name){type[i]=noop;type=type.slice(0,i).concat(type.slice(i+1));break}null!=callback&&type.push({name,value:callback});return type}function clearNow(){clockNow=0}function Timer(){this._call=this._time=this._next=null}function timer(callback,delay,time){var t=new Timer;t.restart(callback,delay,
time);return t}function wake(){clockNow=(clockLast=clock.now())+clockSkew;frame=timeout=0;try{clockNow||(setFrame(clearNow),clockNow=clock.now()+clockSkew);++frame;for(var t=taskHead,e;t;)0<=(e=clockNow-t._time)&&t._call.call(void 0,e),t=t._next;--frame}finally{frame=0;t=taskHead;for(var time=Infinity;t;)if(t._call){time>t._time&&(time=t._time);var t0=t;t=t._next}else e=t._next,t._next=null,t=t0?t0._next=e:taskHead=e;taskTail=t0;sleep(time);clockNow=0}}function poke(){var now=clock.now(),delay=now-
clockLast;1E3<delay&&(clockSkew-=delay,clockLast=now)}function sleep(time){frame||(timeout&&(timeout=clearTimeout(timeout)),24<time-clockNow?(Infinity>time&&(timeout=setTimeout(wake,time-clock.now()-clockSkew)),interval&&(interval=clearInterval(interval))):(interval||(clockLast=clock.now(),interval=setInterval(poke,1E3)),frame=1,setFrame(wake)))}function lcg(){let s=1;return()=>(s=(1664525*s+1013904223)%4294967296)/4294967296}function x$jscomp$0(d){return d.x}function y$jscomp$0(d){return d.y}function forceSimulation(nodes){function step(){tick();
event.call("tick",simulation);alpha<alphaMin&&(stepper.stop(),event.call("end",simulation))}function tick(iterations){var i,n=nodes.length;void 0===iterations&&(iterations=1);for(var k=0;k<iterations;++k)for(alpha+=(alphaTarget-alpha)*alphaDecay,forces.forEach(function(force){force(alpha)}),i=0;i<n;++i){var node=nodes[i];null==node.fx?node.x+=node.vx*=velocityDecay:(node.x=node.fx,node.vx=0);null==node.fy?node.y+=node.vy*=velocityDecay:(node.y=node.fy,node.vy=0)}return simulation}function initializeNodes(){for(var i=
0,n=nodes.length,node;i<n;++i){node=nodes[i];node.index=i;null!=node.fx&&(node.x=node.fx);null!=node.fy&&(node.y=node.fy);if(isNaN(node.x)||isNaN(node.y)){var radius=10*Math.sqrt(.5+i),angle=i*initialAngle;node.x=radius*Math.cos(angle);node.y=radius*Math.sin(angle)}if(isNaN(node.vx)||isNaN(node.vy))node.vx=node.vy=0}}function initializeForce(force){force.initialize&&force.initialize(nodes,random);return force}var simulation,alpha=1,alphaMin=.001,alphaDecay=1-Math.pow(alphaMin,1/300),alphaTarget=0,
velocityDecay=.6,forces=new Map,stepper=timer(step),event=dispatch("tick","end"),random=lcg();null==nodes&&(nodes=[]);initializeNodes();return simulation={tick,restart:function(){return stepper.restart(step),simulation},stop:function(){return stepper.stop(),simulation},nodes:function(_){return arguments.length?(nodes=_,initializeNodes(),forces.forEach(initializeForce),simulation):nodes},alpha:function(_){return arguments.length?(alpha=+_,simulation):alpha},alphaMin:function(_){return arguments.length?
(alphaMin=+_,simulation):alphaMin},alphaDecay:function(_){return arguments.length?(alphaDecay=+_,simulation):+alphaDecay},alphaTarget:function(_){return arguments.length?(alphaTarget=+_,simulation):alphaTarget},velocityDecay:function(_){return arguments.length?(velocityDecay=1-_,simulation):1-velocityDecay},randomSource:function(_){return arguments.length?(random=_,forces.forEach(initializeForce),simulation):random},force:function(name,_){return 1<arguments.length?(null==_?forces.delete(name):forces.set(name,
initializeForce(_)),simulation):forces.get(name)},find:function(x,y,radius){var i,n=nodes.length;radius=null==radius?Infinity:radius*radius;for(i=0;i<n;++i){var node=nodes[i];var dx=x-node.x;var dy=y-node.y;dx=dx*dx+dy*dy;if(dx<radius){var closest=node;radius=dx}}return closest},on:function(name,_){return 1<arguments.length?(event.on(name,_),simulation):event.on(name)}}}function Force(params){vegaDataflow.Transform.call(this,null,params)}function rerun(df,op){return()=>df.touch(op).run()}function simulation(nodes,
_){nodes=forceSimulation(nodes);const stop=nodes.stop,restart=nodes.restart;let stopped=!1;nodes.stopped=()=>stopped;nodes.restart=()=>(stopped=!1,restart());nodes.stop=()=>(stopped=!0,stop());return setup(nodes,_,!0).on("end",()=>stopped=!0)}function setup(sim,_$jscomp$0,init,pulse$jscomp$0){var f=vegaUtil.array(_$jscomp$0.forces),n;var i=0;for(n=ForceParams.length;i<n;++i){var p=ForceParams[i];if("forces"!==p&&_$jscomp$0.modified(p))sim[p](_$jscomp$0[p])}i=0;for(n=f.length;i<n;++i){var name="forces"+
i;if(init||_$jscomp$0.modified("forces",i)){p=void 0;var _=f[i];vegaUtil.hasOwnProperty(ForceMap,_.force)||vegaUtil.error("Unrecognized force: "+_.force);var f$jscomp$0=ForceMap[_.force]();for(p in _)vegaUtil.isFunction(f$jscomp$0[p])&&setForceParam(f$jscomp$0[p],_[p],_);p=f$jscomp$0}else{if(p=pulse$jscomp$0)a:{f$jscomp$0=p=void 0;_=f[i];var pulse=pulse$jscomp$0;for(f$jscomp$0 in _)if(vegaUtil.isFunction(p=_[f$jscomp$0])&&pulse.modified(vegaUtil.accessorFields(p))){p=1;break a}p=0}p=p?sim.force(name):
null}p&&sim.force(name,p)}for(n=sim.numForces||0;i<n;++i)sim.force("forces"+i,null);sim.numForces=f.length;return sim}function setForceParam(f,v,_){f(vegaUtil.isFunction(v)?d=>v(d,_):v)}var treeProto=quadtree.prototype=Quadtree.prototype;treeProto.copy=function(){var copy=new Quadtree(this._x,this._y,this._x0,this._y0,this._x1,this._y1),node=this._root,nodes,child;if(!node)return copy;if(!node.length)return copy._root=leaf_copy(node),copy;for(nodes=[{source:node,target:copy._root=Array(4)}];node=
nodes.pop();)for(var i=0;4>i;++i)if(child=node.source[i])child.length?nodes.push({source:child,target:node.target[i]=Array(4)}):node.target[i]=leaf_copy(child);return copy};treeProto.add=function(d){const x=+this._x.call(null,d),y=+this._y.call(null,d);return add(this.cover(x,y),x,y,d)};treeProto.addAll=function(data){var d,i,n=data.length,x,y,xz=Array(n),yz=Array(n),x0=Infinity,y0=Infinity,x1=-Infinity,y1=-Infinity;for(i=0;i<n;++i)isNaN(x=+this._x.call(null,d=data[i]))||isNaN(y=+this._y.call(null,
d))||(xz[i]=x,yz[i]=y,x<x0&&(x0=x),x>x1&&(x1=x),y<y0&&(y0=y),y>y1&&(y1=y));if(x0>x1||y0>y1)return this;this.cover(x0,y0).cover(x1,y1);for(i=0;i<n;++i)add(this,xz[i],yz[i],data[i]);return this};treeProto.cover=function(x,y){if(isNaN(x=+x)||isNaN(y=+y))return this;var x0=this._x0,y0=this._y0,x1=this._x1,y1=this._y1;if(isNaN(x0))x1=(x0=Math.floor(x))+1,y1=(y0=Math.floor(y))+1;else{for(var z=x1-x0||1,node=this._root,parent,i;x0>x||x>=x1||y0>y||y>=y1;)switch(i=(y<y0)<<1|x<x0,parent=Array(4),parent[i]=
node,node=parent,z*=2,i){case 0:x1=x0+z;y1=y0+z;break;case 1:x0=x1-z;y1=y0+z;break;case 2:x1=x0+z;y0=y1-z;break;case 3:x0=x1-z,y0=y1-z}this._root&&this._root.length&&(this._root=node)}this._x0=x0;this._y0=y0;this._x1=x1;this._y1=y1;return this};treeProto.data=function(){var data=[];this.visit(function(node){if(!node.length){do data.push(node.data);while(node=node.next)}});return data};treeProto.extent=function(_){return arguments.length?this.cover(+_[0][0],+_[0][1]).cover(+_[1][0],+_[1][1]):isNaN(this._x0)?
void 0:[[this._x0,this._y0],[this._x1,this._y1]]};treeProto.find=function(x,y,radius){var x0=this._x0,y0=this._y0,x1,y1,x2,y2,x3=this._x1,y3=this._y1,quads=[],node=this._root,q;node&&quads.push(new Quad(node,x0,y0,x3,y3));null==radius?radius=Infinity:(x0=x-radius,y0=y-radius,x3=x+radius,y3=y+radius,radius*=radius);for(;q=quads.pop();)if(!(!(node=q.node)||(x1=q.x0)>x3||(y1=q.y0)>y3||(x2=q.x1)<x0||(y2=q.y1)<y0))if(node.length){q=(x1+x2)/2;var ym=(y1+y2)/2;quads.push(new Quad(node[3],q,ym,x2,y2),new Quad(node[2],
x1,ym,q,y2),new Quad(node[1],q,y1,x2,ym),new Quad(node[0],x1,y1,q,ym));if(node=(y>=ym)<<1|x>=q)q=quads[quads.length-1],quads[quads.length-1]=quads[quads.length-1-node],quads[quads.length-1-node]=q}else if(q=x-+this._x.call(null,node.data),ym=y-+this._y.call(null,node.data),q=q*q+ym*ym,q<radius){var data=Math.sqrt(radius=q);x0=x-data;y0=y-data;x3=x+data;y3=y+data;data=node.data}return data};treeProto.remove=function(d){if(isNaN(x=+this._x.call(null,d))||isNaN(y=+this._y.call(null,d)))return this;var parent,
node=this._root,previous,x0=this._x0,y0=this._y0,x1=this._x1,y1=this._y1,x,y,xm,ym,right,bottom,i;if(!node)return this;if(node.length)for(;;){(right=x>=(xm=(x0+x1)/2))?x0=xm:x1=xm;(bottom=y>=(ym=(y0+y1)/2))?y0=ym:y1=ym;if(!(parent=node,node=node[i=bottom<<1|right]))return this;if(!node.length)break;if(parent[i+1&3]||parent[i+2&3]||parent[i+3&3]){var retainer=parent;var j=i}}for(;node.data!==d;)if(!(previous=node,node=node.next))return this;(d=node.next)&&delete node.next;if(previous)return d?previous.next=
d:delete previous.next,this;if(!parent)return this._root=d,this;d?parent[i]=d:delete parent[i];(node=parent[0]||parent[1]||parent[2]||parent[3])&&node===(parent[3]||parent[2]||parent[1]||parent[0])&&!node.length&&(retainer?retainer[j]=node:this._root=node);return this};treeProto.removeAll=function(data){for(var i=0,n=data.length;i<n;++i)this.remove(data[i]);return this};treeProto.root=function(){return this._root};treeProto.size=function(){var size=0;this.visit(function(node){if(!node.length){do++size;
while(node=node.next)}});return size};treeProto.visit=function(callback){var quads=[],q,node=this._root,child,x0,y0,x1,y1;for(node&&quads.push(new Quad(node,this._x0,this._y0,this._x1,this._y1));q=quads.pop();)if(!callback(node=q.node,x0=q.x0,y0=q.y0,x1=q.x1,y1=q.y1)&&node.length){q=(x0+x1)/2;var ym=(y0+y1)/2;(child=node[3])&&quads.push(new Quad(child,q,ym,x1,y1));(child=node[2])&&quads.push(new Quad(child,x0,ym,q,y1));(child=node[1])&&quads.push(new Quad(child,q,y0,x1,ym));(child=node[0])&&quads.push(new Quad(child,
x0,y0,q,ym))}return this};treeProto.visitAfter=function(callback){var quads=[],next=[],q;for(this._root&&quads.push(new Quad(this._root,this._x0,this._y0,this._x1,this._y1));q=quads.pop();){var node=q.node;if(node.length){var child,x0=q.x0,y0=q.y0,x1=q.x1,y1=q.y1,xm=(x0+x1)/2,ym=(y0+y1)/2;(child=node[0])&&quads.push(new Quad(child,x0,y0,xm,ym));(child=node[1])&&quads.push(new Quad(child,xm,y0,x1,ym));(child=node[2])&&quads.push(new Quad(child,x0,ym,xm,y1));(child=node[3])&&quads.push(new Quad(child,
xm,ym,x1,y1))}next.push(q)}for(;q=next.pop();)callback(q.node,q.x0,q.y0,q.x1,q.y1);return this};treeProto.x=function(_){return arguments.length?(this._x=_,this):this._x};treeProto.y=function(_){return arguments.length?(this._y=_,this):this._y};var noop={value:()=>{}};Dispatch.prototype=dispatch.prototype={constructor:Dispatch,on:function(typename,callback){var _=this._,T=parseTypenames(typename+"",_),t,i=-1,n=T.length;if(2>arguments.length)for(;++i<n;){var JSCompiler_temp;if(JSCompiler_temp=t=(typename=
T[i]).type){a:{JSCompiler_temp=_[t];for(var i$jscomp$0=0,n$jscomp$0=JSCompiler_temp.length;i$jscomp$0<n$jscomp$0;++i$jscomp$0)if((t=JSCompiler_temp[i$jscomp$0]).name===typename.name){t=t.value;break a}t=void 0}JSCompiler_temp=t}if(JSCompiler_temp)return t}else{if(null!=callback&&"function"!==typeof callback)throw Error("invalid callback: "+callback);for(;++i<n;)if(t=(typename=T[i]).type)_[t]=set(_[t],typename.name,callback);else if(null==callback)for(t in _)_[t]=set(_[t],typename.name,null);return this}},
copy:function(){var copy={},_=this._,t;for(t in _)copy[t]=_[t].slice();return new Dispatch(copy)},call:function(type,that){if(0<(n=arguments.length-2))for(var args=Array(n),i=0,n,t;i<n;++i)args[i]=arguments[i+2];if(!this._.hasOwnProperty(type))throw Error("unknown type: "+type);t=this._[type];i=0;for(n=t.length;i<n;++i)t[i].value.apply(that,args)},apply:function(type,that,args){if(!this._.hasOwnProperty(type))throw Error("unknown type: "+type);type=this._[type];for(var i=0,n=type.length;i<n;++i)type[i].value.apply(that,
args)}};var frame=0,timeout=0,interval=0,taskHead,taskTail,clockLast=0,clockNow=0,clockSkew=0,clock="object"===typeof performance&&performance.now?performance:Date,setFrame="object"===typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(f){setTimeout(f,17)};Timer.prototype=timer.prototype={constructor:Timer,restart:function(callback,delay,time){if("function"!==typeof callback)throw new TypeError("callback is not a function");time=(null==time?clockNow||(setFrame(clearNow),
clockNow=clock.now()+clockSkew):+time)+(null==delay?0:+delay);this._next||taskTail===this||(taskTail?taskTail._next=this:taskHead=this,taskTail=this);this._call=callback;this._time=time;sleep()},stop:function(){this._call&&(this._call=null,this._time=Infinity,sleep())}};var initialAngle=Math.PI*(3-Math.sqrt(5));const ForceMap={center:function(x,y){function force(){var i,n=nodes.length,sx=0,sy=0;for(i=0;i<n;++i){var node=nodes[i];sx+=node.x;sy+=node.y}sx=(sx/n-x)*strength;sy=(sy/n-y)*strength;for(i=
0;i<n;++i)node=nodes[i],node.x-=sx,node.y-=sy}var nodes,strength=1;null==x&&(x=0);null==y&&(y=0);force.initialize=function(_){nodes=_};force.x=function(_){return arguments.length?(x=+_,force):x};force.y=function(_){return arguments.length?(y=+_,force):y};force.strength=function(_){return arguments.length?(strength=+_,force):strength};return force},collide:function(radius){function force(){function apply(quad,x0,y0,x1,y1){var data=quad.data;quad=quad.r;var r=ri+quad;if(data)data.index>node.index&&
(x0=xi-data.x-data.vx,y0=yi-data.y-data.vy,x1=x0*x0+y0*y0,x1<r*r&&(0===x0&&(x0=1E-6*(random()-.5),x1+=x0*x0),0===y0&&(y0=1E-6*(random()-.5),x1+=y0*y0),x1=(r-(x1=Math.sqrt(x1)))/x1*strength,node.vx+=(x0*=x1)*(r=(quad*=quad)/(ri2+quad)),node.vy+=(y0*=x1)*r,data.vx-=x0*(r=1-r),data.vy-=y0*r));else return x0>xi+r||x1<xi-r||y0>yi+r||y1<yi-r}for(var i,n=nodes.length,tree,node,xi,yi,ri,ri2,k=0;k<iterations;++k)for(tree=quadtree(nodes,x$1,y$1).visitAfter(prepare),i=0;i<n;++i)node=nodes[i],ri=radii[node.index],
ri2=ri*ri,xi=node.x+node.vx,yi=node.y+node.vy,tree.visit(apply)}function prepare(quad){if(quad.data)return quad.r=radii[quad.data.index];for(var i=quad.r=0;4>i;++i)quad[i]&&quad[i].r>quad.r&&(quad.r=quad[i].r)}function initialize(){if(nodes){var i,n=nodes.length;radii=Array(n);for(i=0;i<n;++i){var node=nodes[i];radii[node.index]=+radius(node,i,nodes)}}}var nodes,radii,random,strength=1,iterations=1;"function"!==typeof radius&&(radius=constant(null==radius?1:+radius));force.initialize=function(_nodes,
_random){nodes=_nodes;random=_random;initialize()};force.iterations=function(_){return arguments.length?(iterations=+_,force):iterations};force.strength=function(_){return arguments.length?(strength=+_,force):strength};force.radius=function(_){return arguments.length?(radius="function"===typeof _?_:constant(+_),initialize(),force):radius};return force},nbody:function(){function force(_){var n=nodes.length,tree=quadtree(nodes,x$jscomp$0,y$jscomp$0).visitAfter(accumulate);alpha=_;for(_=0;_<n;++_)node$jscomp$0=
nodes[_],tree.visit(apply)}function initialize(){if(nodes){var i,n=nodes.length;strengths=Array(n);for(i=0;i<n;++i){var node=nodes[i];strengths[node.index]=+strength$jscomp$0(node,i,nodes)}}}function accumulate(quad){var strength=0,q,c,weight=0,x,y,i;if(quad.length){for(x=y=i=0;4>i;++i)(q=quad[i])&&(c=Math.abs(q.value))&&(strength+=q.value,weight+=c,x+=c*q.x,y+=c*q.y);quad.x=x/weight;quad.y=y/weight}else{q=quad;q.x=q.data.x;q.y=q.data.y;do strength+=strengths[q.data.index];while(q=q.next)}quad.value=
strength}function apply(quad,x1,_,x2){if(!quad.value)return!0;_=quad.x-node$jscomp$0.x;var y=quad.y-node$jscomp$0.y;x1=x2-x1;x2=_*_+y*y;if(x1*x1/theta2<x2)return x2<distanceMax2&&(0===_&&(_=1E-6*(random()-.5),x2+=_*_),0===y&&(y=1E-6*(random()-.5),x2+=y*y),x2<distanceMin2&&(x2=Math.sqrt(distanceMin2*x2)),node$jscomp$0.vx+=_*quad.value*alpha/x2,node$jscomp$0.vy+=y*quad.value*alpha/x2),!0;if(!(quad.length||x2>=distanceMax2)){if(quad.data!==node$jscomp$0||quad.next)0===_&&(_=1E-6*(random()-.5),x2+=_*
_),0===y&&(y=1E-6*(random()-.5),x2+=y*y),x2<distanceMin2&&(x2=Math.sqrt(distanceMin2*x2));do quad.data!==node$jscomp$0&&(x1=strengths[quad.data.index]*alpha/x2,node$jscomp$0.vx+=_*x1,node$jscomp$0.vy+=y*x1);while(quad=quad.next)}}var nodes,node$jscomp$0,random,alpha,strength$jscomp$0=constant(-30),strengths,distanceMin2=1,distanceMax2=Infinity,theta2=.81;force.initialize=function(_nodes,_random){nodes=_nodes;random=_random;initialize()};force.strength=function(_){return arguments.length?(strength$jscomp$0=
"function"===typeof _?_:constant(+_),initialize(),force):strength$jscomp$0};force.distanceMin=function(_){return arguments.length?(distanceMin2=_*_,force):Math.sqrt(distanceMin2)};force.distanceMax=function(_){return arguments.length?(distanceMax2=_*_,force):Math.sqrt(distanceMax2)};force.theta=function(_){return arguments.length?(theta2=_*_,force):Math.sqrt(theta2)};return force},link:function(links){function force(alpha){for(var k=0,n=links.length;k<iterations;++k)for(var i=0,link,source,x,y,l;i<
n;++i)link=links[i],source=link.source,link=link.target,x=link.x+link.vx-source.x-source.vx||1E-6*(random()-.5),y=link.y+link.vy-source.y-source.vy||1E-6*(random()-.5),l=Math.sqrt(x*x+y*y),l=(l-distances[i])/l*alpha*strengths[i],x*=l,y*=l,link.vx-=x*(l=bias[i]),link.vy-=y*l,source.vx+=x*(l=1-l),source.vy+=y*l}function initialize(){if(nodes){var n=nodes.length,m=links.length,nodeById=new Map(nodes.map((d,i)=>[id(d,i,nodes),d]));var i$jscomp$0=0;for(count=Array(n);i$jscomp$0<m;++i$jscomp$0)n=links[i$jscomp$0],
n.index=i$jscomp$0,"object"!==typeof n.source&&(n.source=find(nodeById,n.source)),"object"!==typeof n.target&&(n.target=find(nodeById,n.target)),count[n.source.index]=(count[n.source.index]||0)+1,count[n.target.index]=(count[n.target.index]||0)+1;i$jscomp$0=0;for(bias=Array(m);i$jscomp$0<m;++i$jscomp$0)n=links[i$jscomp$0],bias[i$jscomp$0]=count[n.source.index]/(count[n.source.index]+count[n.target.index]);strengths=Array(m);initializeStrength();distances=Array(m);initializeDistance()}}function initializeStrength(){if(nodes)for(var i=
0,n=links.length;i<n;++i)strengths[i]=+strength(links[i],i,links)}function initializeDistance(){if(nodes)for(var i=0,n=links.length;i<n;++i)distances[i]=+distance(links[i],i,links)}var id=index,strength=function(link){return 1/Math.min(count[link.source.index],count[link.target.index])},strengths,distance=constant(30),distances,nodes,count,bias,random,iterations=1;null==links&&(links=[]);force.initialize=function(_nodes,_random){nodes=_nodes;random=_random;initialize()};force.links=function(_){return arguments.length?
(links=_,initialize(),force):links};force.id=function(_){return arguments.length?(id=_,force):id};force.iterations=function(_){return arguments.length?(iterations=+_,force):iterations};force.strength=function(_){return arguments.length?(strength="function"===typeof _?_:constant(+_),initializeStrength(),force):strength};force.distance=function(_){return arguments.length?(distance="function"===typeof _?_:constant(+_),initializeDistance(),force):distance};return force},x:function(x){function force(alpha){for(var i=
0,n=nodes.length,node;i<n;++i)node=nodes[i],node.vx+=(xz[i]-node.x)*strengths[i]*alpha}function initialize(){if(nodes){var i,n=nodes.length;strengths=Array(n);xz=Array(n);for(i=0;i<n;++i)strengths[i]=isNaN(xz[i]=+x(nodes[i],i,nodes))?0:+strength(nodes[i],i,nodes)}}var strength=constant(.1),nodes,strengths,xz;"function"!==typeof x&&(x=constant(null==x?0:+x));force.initialize=function(_){nodes=_;initialize()};force.strength=function(_){return arguments.length?(strength="function"===typeof _?_:constant(+_),
initialize(),force):strength};force.x=function(_){return arguments.length?(x="function"===typeof _?_:constant(+_),initialize(),force):x};return force},y:function(y){function force(alpha){for(var i=0,n=nodes.length,node;i<n;++i)node=nodes[i],node.vy+=(yz[i]-node.y)*strengths[i]*alpha}function initialize(){if(nodes){var i,n=nodes.length;strengths=Array(n);yz=Array(n);for(i=0;i<n;++i)strengths[i]=isNaN(yz[i]=+y(nodes[i],i,nodes))?0:+strength(nodes[i],i,nodes)}}var strength=constant(.1),nodes,strengths,
yz;"function"!==typeof y&&(y=constant(null==y?0:+y));force.initialize=function(_){nodes=_;initialize()};force.strength=function(_){return arguments.length?(strength="function"===typeof _?_:constant(+_),initialize(),force):strength};force.y=function(_){return arguments.length?(y="function"===typeof _?_:constant(+_),initialize(),force):y};return force}},ForceParams=["alpha","alphaMin","alphaTarget","velocityDecay","forces"],ForceConfig=["static","iterations"],ForceOutput=["x","y","vx","vy"];Force.Definition=
{type:"Force",metadata:{modifies:!0},params:[{name:"static",type:"boolean","default":!1},{name:"restart",type:"boolean","default":!1},{name:"iterations",type:"number","default":300},{name:"alpha",type:"number","default":1},{name:"alphaMin",type:"number","default":.001},{name:"alphaTarget",type:"number","default":0},{name:"velocityDecay",type:"number","default":.4},{name:"forces",type:"param",array:!0,params:[{key:{force:"center"},params:[{name:"x",type:"number","default":0},{name:"y",type:"number",
"default":0}]},{key:{force:"collide"},params:[{name:"radius",type:"number",expr:!0},{name:"strength",type:"number","default":.7},{name:"iterations",type:"number","default":1}]},{key:{force:"nbody"},params:[{name:"strength",type:"number","default":-30},{name:"theta",type:"number","default":.9},{name:"distanceMin",type:"number","default":1},{name:"distanceMax",type:"number"}]},{key:{force:"link"},params:[{name:"links",type:"data"},{name:"id",type:"field"},{name:"distance",type:"number","default":30,
expr:!0},{name:"strength",type:"number",expr:!0},{name:"iterations",type:"number","default":1}]},{key:{force:"x"},params:[{name:"strength",type:"number","default":.1},{name:"x",type:"field"}]},{key:{force:"y"},params:[{name:"strength",type:"number","default":.1},{name:"y",type:"field"}]}]},{name:"as",type:"string",array:!0,modify:!1,"default":ForceOutput}]};vegaUtil.inherits(Force,vegaDataflow.Transform,{transform(_,pulse){var sim=this.value,change=pulse.changed(pulse.ADD_REM),params=_.modified(ForceParams),
iters=_.iterations||300;sim?(change&&(pulse.modifies("index"),sim.nodes(pulse.source)),(params||pulse.changed(pulse.MOD))&&setup(sim,_,0,pulse)):(this.value=sim=simulation(pulse.source,_),sim.on("tick",rerun(pulse.dataflow,this)),_.static||(change=!0,sim.tick()),pulse.modifies("index"));if(params||change||_.modified(ForceConfig)||pulse.changed()&&_.restart)if(sim.alpha(Math.max(sim.alpha(),_.alpha||1)).alphaDecay(1-Math.pow(sim.alphaMin(),1/iters)),_.static)for(sim.stop();0<=--iters;)sim.tick();else if(sim.stopped()&&
sim.restart(),!change)return pulse.StopPropagation;return this.finish(_,pulse)},finish(_,pulse){const dataflow=pulse.dataflow;for(let args=this._argops,j=0,m=args.length,arg;j<m;++j)if(arg=args[j],"forces"===arg.name&&"link"===arg.op._argval.force)for(var ops=arg.op._argops,i=0,n=ops.length,op;i<n;++i)if("links"===ops[i].name&&(op=ops[i].op.source)){dataflow.pulse(op,dataflow.changeset().reflow());break}return pulse.reflow(_.modified()).modifies(ForceOutput)}});exports.force=Force;Object.defineProperty(exports,
"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$vega_force$build$vega_force.js.map
