{
"version":3,
"file":"module$node_modules$vega_geo$build$vega_geo.js",
"lineCount":66,
"mappings":"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",
"sources":["node_modules/vega-geo/build/vega-geo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_geo$build$vega_geo\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-util'), require('vega-statistics'), require('vega-projection'), require('vega-canvas')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-util', 'vega-statistics', 'vega-projection', 'vega-canvas'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.vega, global.vega));\n})(this, (function (exports, vegaDataflow, vegaUtil, vegaStatistics, vegaProjection, vegaCanvas) { 'use strict';\n\n  var e10 = Math.sqrt(50),\n      e5 = Math.sqrt(10),\n      e2 = Math.sqrt(2);\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function max(values, valueof) {\n    let max;\n\n    if (valueof === undefined) {\n      for (const value of values) {\n        if (value != null && (max < value || max === undefined && value >= value)) {\n          max = value;\n        }\n      }\n    } else {\n      let index = -1;\n\n      for (let value of values) {\n        if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) {\n          max = value;\n        }\n      }\n    }\n\n    return max;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  function sum(values, valueof) {\n    let sum = 0;\n\n    if (valueof === undefined) {\n      for (let value of values) {\n        if (value = +value) {\n          sum += value;\n        }\n      }\n    } else {\n      let index = -1;\n\n      for (let value of values) {\n        if (value = +valueof(value, ++index, values)) {\n          sum += value;\n        }\n      }\n    }\n\n    return sum;\n  }\n\n  function noop() {}\n\n  const cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []]; // Implementation adapted from d3/d3-contour. Thanks!\n\n  function contours () {\n    var dx = 1,\n        dy = 1,\n        smooth = smoothLinear;\n\n    function contours(values, tz) {\n      return tz.map(value => contour(values, value));\n    } // Accumulate, smooth contour rings, assign holes to exterior rings.\n    // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n\n\n    function contour(values, value) {\n      var polygons = [],\n          holes = [];\n      isorings(values, value, ring => {\n        smooth(ring, values, value);\n        if (area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n      });\n      holes.forEach(hole => {\n        for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n          if (contains((polygon = polygons[i])[0], hole) !== -1) {\n            polygon.push(hole);\n            return;\n          }\n        }\n      });\n      return {\n        type: 'MultiPolygon',\n        value: value,\n        coordinates: polygons\n      };\n    } // Marching squares with isolines stitched into rings.\n    // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n\n\n    function isorings(values, value, callback) {\n      var fragmentByStart = new Array(),\n          fragmentByEnd = new Array(),\n          x,\n          y,\n          t0,\n          t1,\n          t2,\n          t3; // Special case for the first row (y = -1, t2 = t3 = 0).\n\n      x = y = -1;\n      t1 = values[0] >= value;\n      cases[t1 << 1].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[x + 1] >= value;\n        cases[t0 | t1 << 1].forEach(stitch);\n      }\n\n      cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.\n\n      while (++y < dy - 1) {\n        x = -1;\n        t1 = values[y * dx + dx] >= value;\n        t2 = values[y * dx] >= value;\n        cases[t1 << 1 | t2 << 2].forEach(stitch);\n\n        while (++x < dx - 1) {\n          t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n          t3 = t2, t2 = values[y * dx + x + 1] >= value;\n          cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n        }\n\n        cases[t1 | t2 << 3].forEach(stitch);\n      } // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n\n\n      x = -1;\n      t2 = values[y * dx] >= value;\n      cases[t2 << 2].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t2 << 2 | t3 << 3].forEach(stitch);\n      }\n\n      cases[t2 << 3].forEach(stitch);\n\n      function stitch(line) {\n        var start = [line[0][0] + x, line[0][1] + y],\n            end = [line[1][0] + x, line[1][1] + y],\n            startIndex = index(start),\n            endIndex = index(end),\n            f,\n            g;\n\n        if (f = fragmentByEnd[startIndex]) {\n          if (g = fragmentByStart[endIndex]) {\n            delete fragmentByEnd[f.end];\n            delete fragmentByStart[g.start];\n\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n                start: f.start,\n                end: g.end,\n                ring: f.ring.concat(g.ring)\n              };\n            }\n          } else {\n            delete fragmentByEnd[f.end];\n            f.ring.push(end);\n            fragmentByEnd[f.end = endIndex] = f;\n          }\n        } else if (f = fragmentByStart[endIndex]) {\n          if (g = fragmentByEnd[startIndex]) {\n            delete fragmentByStart[f.start];\n            delete fragmentByEnd[g.end];\n\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n                start: g.start,\n                end: f.end,\n                ring: g.ring.concat(f.ring)\n              };\n            }\n          } else {\n            delete fragmentByStart[f.start];\n            f.ring.unshift(start);\n            fragmentByStart[f.start = startIndex] = f;\n          }\n        } else {\n          fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n            start: startIndex,\n            end: endIndex,\n            ring: [start, end]\n          };\n        }\n      }\n    }\n\n    function index(point) {\n      return point[0] * 2 + point[1] * (dx + 1) * 4;\n    }\n\n    function smoothLinear(ring, values, value) {\n      ring.forEach(point => {\n        var x = point[0],\n            y = point[1],\n            xt = x | 0,\n            yt = y | 0,\n            v0,\n            v1 = values[yt * dx + xt];\n\n        if (x > 0 && x < dx && xt === x) {\n          v0 = values[yt * dx + xt - 1];\n          point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n        }\n\n        if (y > 0 && y < dy && yt === y) {\n          v0 = values[(yt - 1) * dx + xt];\n          point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n        }\n      });\n    }\n\n    contours.contour = contour;\n\n    contours.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n\n      var _0 = Math.floor(_[0]),\n          _1 = Math.floor(_[1]);\n\n      if (!(_0 >= 0 && _1 >= 0)) vegaUtil.error('invalid size');\n      return dx = _0, dy = _1, contours;\n    };\n\n    contours.smooth = function (_) {\n      return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n    };\n\n    return contours;\n  }\n\n  function area(ring) {\n    var i = 0,\n        n = ring.length,\n        area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n    while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n\n    return area;\n  }\n\n  function contains(ring, hole) {\n    var i = -1,\n        n = hole.length,\n        c;\n\n    while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n\n    return 0;\n  }\n\n  function ringContains(ring, point) {\n    var x = point[0],\n        y = point[1],\n        contains = -1;\n\n    for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n      var pi = ring[i],\n          xi = pi[0],\n          yi = pi[1],\n          pj = ring[j],\n          xj = pj[0],\n          yj = pj[1];\n      if (segmentContains(pi, pj, point)) return 0;\n      if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n    }\n\n    return contains;\n  }\n\n  function segmentContains(a, b, c) {\n    var i;\n    return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n  }\n\n  function collinear(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n  }\n\n  function within(p, q, r) {\n    return p <= q && q <= r || r <= q && q <= p;\n  }\n\n  function quantize (k, nice, zero) {\n    return function (values) {\n      var ex = vegaUtil.extent(values),\n          start = zero ? Math.min(ex[0], 0) : ex[0],\n          stop = ex[1],\n          span = stop - start,\n          step = nice ? tickStep(start, stop, k) : span / (k + 1);\n      return range(start + step, stop, step);\n    };\n  }\n\n  /**\n   * Generate isocontours (level sets) based on input raster grid data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} [params.field] - The field with raster grid\n   *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n   * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n   *   specified, the levels, nice, resolve, and zero parameters are ignored.\n   * @param {number} [params.levels] - The desired number of contour levels.\n   * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n   *   threshold values should be automatically aligned to \"nice\"\n   *   human-friendly values. Setting this flag may cause the number of\n   *   thresholds to deviate from the specified levels.\n   * @param {string} [params.resolve] - The method for resolving thresholds\n   *   across multiple input grids. If 'independent' (the default), threshold\n   *   calculation will be performed separately for each grid. If 'shared', a\n   *   single set of threshold values will be used for all input grids.\n   * @param {boolean} [params.zero] - Boolean flag indicating if the contour\n   *   threshold values should include zero.\n   * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n   *   polygons should be smoothed using linear interpolation. The default is\n   *   true. The parameter is ignored when using density estimation.\n   * @param {boolean} [params.scale] - Optional numerical value by which to\n   *   scale the output isocontour coordinates. This parameter can be useful\n   *   to scale the contours to match a desired output resolution.\n   * @param {string} [params.as='contour'] - The output field in which to store\n   *   the generated isocontour data (default 'contour').\n   */\n\n  function Isocontour(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Isocontour.Definition = {\n    'type': 'Isocontour',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'thresholds',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'levels',\n      'type': 'number'\n    }, {\n      'name': 'nice',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'resolve',\n      'type': 'enum',\n      'values': ['shared', 'independent'],\n      'default': 'independent'\n    }, {\n      'name': 'zero',\n      'type': 'boolean',\n      'default': true\n    }, {\n      'name': 'smooth',\n      'type': 'boolean',\n      'default': true\n    }, {\n      'name': 'scale',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'translate',\n      'type': 'number',\n      'array': true,\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'null': true,\n      'default': 'contour'\n    }]\n  };\n  vegaUtil.inherits(Isocontour, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          source = pulse.materialize(pulse.SOURCE).source,\n          field = _.field || vegaUtil.identity,\n          contour = contours().smooth(_.smooth !== false),\n          tz = _.thresholds || levels(source, field, _),\n          as = _.as === null ? null : _.as || 'contour',\n          values = [];\n      source.forEach(t => {\n        const grid = field(t); // generate contour paths in GeoJSON format\n\n        const paths = contour.size([grid.width, grid.height])(grid.values, vegaUtil.isArray(tz) ? tz : tz(grid.values)); // adjust contour path coordinates as needed\n\n        transformPaths(paths, grid, t, _); // ingest; copy source data properties to output\n\n        paths.forEach(p => {\n          values.push(vegaDataflow.rederive(t, vegaDataflow.ingest(as != null ? {\n            [as]: p\n          } : p)));\n        });\n      });\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = values;\n      return out;\n    }\n\n  });\n\n  function levels(values, f, _) {\n    const q = quantize(_.levels || 10, _.nice, _.zero !== false);\n    return _.resolve !== 'shared' ? q : q(values.map(t => max(f(t).values)));\n  }\n\n  function transformPaths(paths, grid, datum, _) {\n    let s = _.scale || grid.scale,\n        t = _.translate || grid.translate;\n    if (vegaUtil.isFunction(s)) s = s(datum, _);\n    if (vegaUtil.isFunction(t)) t = t(datum, _);\n    if ((s === 1 || s == null) && !t) return;\n    const sx = (vegaUtil.isNumber(s) ? s : s[0]) || 1,\n          sy = (vegaUtil.isNumber(s) ? s : s[1]) || 1,\n          tx = t && t[0] || 0,\n          ty = t && t[1] || 0;\n    paths.forEach(transform(grid, sx, sy, tx, ty));\n  }\n\n  function transform(grid, sx, sy, tx, ty) {\n    const x1 = grid.x1 || 0,\n          y1 = grid.y1 || 0,\n          flip = sx * sy < 0;\n\n    function transformPolygon(coordinates) {\n      coordinates.forEach(transformRing);\n    }\n\n    function transformRing(coordinates) {\n      if (flip) coordinates.reverse(); // maintain winding order\n\n      coordinates.forEach(transformPoint);\n    }\n\n    function transformPoint(coordinates) {\n      coordinates[0] = (coordinates[0] - x1) * sx + tx;\n      coordinates[1] = (coordinates[1] - y1) * sy + ty;\n    }\n\n    return function (geometry) {\n      geometry.coordinates.forEach(transformPolygon);\n      return geometry;\n    };\n  }\n\n  function radius(bw, data, f) {\n    const v = bw >= 0 ? bw : vegaStatistics.bandwidthNRD(data, f);\n    return Math.round((Math.sqrt(4 * v * v + 1) - 1) / 2);\n  }\n\n  function number(_) {\n    return vegaUtil.isFunction(_) ? _ : vegaUtil.constant(+_);\n  } // Implementation adapted from d3/d3-contour. Thanks!\n\n\n  function density2D () {\n    var x = d => d[0],\n        y = d => d[1],\n        weight = vegaUtil.one,\n        bandwidth = [-1, -1],\n        dx = 960,\n        dy = 500,\n        k = 2; // log2(cellSize)\n\n\n    function density(data, counts) {\n      const rx = radius(bandwidth[0], data, x) >> k,\n            // blur x-radius\n      ry = radius(bandwidth[1], data, y) >> k,\n            // blur y-radius\n      ox = rx ? rx + 2 : 0,\n            // x-offset padding for blur\n      oy = ry ? ry + 2 : 0,\n            // y-offset padding for blur\n      n = 2 * ox + (dx >> k),\n            // grid width\n      m = 2 * oy + (dy >> k),\n            // grid height\n      values0 = new Float32Array(n * m),\n            values1 = new Float32Array(n * m);\n      let values = values0;\n      data.forEach(d => {\n        const xi = ox + (+x(d) >> k),\n              yi = oy + (+y(d) >> k);\n\n        if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n          values0[xi + yi * n] += +weight(d);\n        }\n      });\n\n      if (rx > 0 && ry > 0) {\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n      } else if (rx > 0) {\n        blurX(n, m, values0, values1, rx);\n        blurX(n, m, values1, values0, rx);\n        blurX(n, m, values0, values1, rx);\n        values = values1;\n      } else if (ry > 0) {\n        blurY(n, m, values0, values1, ry);\n        blurY(n, m, values1, values0, ry);\n        blurY(n, m, values0, values1, ry);\n        values = values1;\n      } // scale density estimates\n      // density in points per square pixel or probability density\n\n\n      const s = counts ? Math.pow(2, -2 * k) : 1 / sum(values);\n\n      for (let i = 0, sz = n * m; i < sz; ++i) values[i] *= s;\n\n      return {\n        values: values,\n        scale: 1 << k,\n        width: n,\n        height: m,\n        x1: ox,\n        y1: oy,\n        x2: ox + (dx >> k),\n        y2: oy + (dy >> k)\n      };\n    }\n\n    density.x = function (_) {\n      return arguments.length ? (x = number(_), density) : x;\n    };\n\n    density.y = function (_) {\n      return arguments.length ? (y = number(_), density) : y;\n    };\n\n    density.weight = function (_) {\n      return arguments.length ? (weight = number(_), density) : weight;\n    };\n\n    density.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n\n      var _0 = +_[0],\n          _1 = +_[1];\n\n      if (!(_0 >= 0 && _1 >= 0)) vegaUtil.error('invalid size');\n      return dx = _0, dy = _1, density;\n    };\n\n    density.cellSize = function (_) {\n      if (!arguments.length) return 1 << k;\n      if (!((_ = +_) >= 1)) vegaUtil.error('invalid cell size');\n      k = Math.floor(Math.log(_) / Math.LN2);\n      return density;\n    };\n\n    density.bandwidth = function (_) {\n      if (!arguments.length) return bandwidth;\n      _ = vegaUtil.array(_);\n      if (_.length === 1) _ = [+_[0], +_[0]];\n      if (_.length !== 2) vegaUtil.error('invalid bandwidth');\n      return bandwidth = _, density;\n    };\n\n    return density;\n  }\n\n  function blurX(n, m, source, target, r) {\n    const w = (r << 1) + 1;\n\n    for (let j = 0; j < m; ++j) {\n      for (let i = 0, sr = 0; i < n + r; ++i) {\n        if (i < n) {\n          sr += source[i + j * n];\n        }\n\n        if (i >= r) {\n          if (i >= w) {\n            sr -= source[i - w + j * n];\n          }\n\n          target[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n        }\n      }\n    }\n  }\n\n  function blurY(n, m, source, target, r) {\n    const w = (r << 1) + 1;\n\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0, sr = 0; j < m + r; ++j) {\n        if (j < m) {\n          sr += source[i + j * n];\n        }\n\n        if (j >= r) {\n          if (j >= w) {\n            sr -= source[i + (j - w) * n];\n          }\n\n          target[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n        }\n      }\n    }\n  }\n\n  /**\n   * Perform 2D kernel-density estimation of point data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The [width, height] extent (in\n   *   units of input pixels) over which to perform density estimation.\n   * @param {function(object): number} params.x - The x-coordinate accessor.\n   * @param {function(object): number} params.y - The y-coordinate accessor.\n   * @param {function(object): number} [params.weight] - The weight accessor.\n   * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n   *   to groupby.\n   * @param {number} [params.cellSize] - Contour density calculation cell size.\n   *   This parameter determines the level of spatial approximation. For example,\n   *   the default value of 4 maps to 2x reductions in both x- and y- dimensions.\n   *   A value of 1 will result in an output raster grid whose dimensions exactly\n   *   matches the size parameter.\n   * @param {Array<number>} [params.bandwidth] - The KDE kernel bandwidths,\n   *   in pixels. The input can be a two-element array specifying separate\n   *   x and y bandwidths, or a single-element array specifying both. If the\n   *   bandwidth is unspecified or less than zero, the bandwidth will be\n   *   automatically determined.\n   * @param {boolean} [params.counts=false] - A boolean flag indicating if the\n   *   output values should be probability estimates (false, default) or\n   *   smoothed counts (true).\n   * @param {string} [params.as='grid'] - The output field in which to store\n   *   the generated raster grid (default 'grid').\n   */\n\n  function KDE2D(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  KDE2D.Definition = {\n    'type': 'KDE2D',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'size',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'required': true\n    }, {\n      'name': 'x',\n      'type': 'field',\n      'required': true\n    }, {\n      'name': 'y',\n      'type': 'field',\n      'required': true\n    }, {\n      'name': 'weight',\n      'type': 'field'\n    }, {\n      'name': 'groupby',\n      'type': 'field',\n      'array': true\n    }, {\n      'name': 'cellSize',\n      'type': 'number'\n    }, {\n      'name': 'bandwidth',\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'counts',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'grid'\n    }]\n  };\n  const PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];\n  function params(obj, _) {\n    PARAMS.forEach(param => _[param] != null ? obj[param](_[param]) : 0);\n    return obj;\n  }\n  vegaUtil.inherits(KDE2D, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) return pulse.StopPropagation;\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          source = pulse.materialize(pulse.SOURCE).source,\n          groups = partition(source, _.groupby),\n          names = (_.groupby || []).map(vegaUtil.accessorName),\n          kde = params(density2D(), _),\n          as = _.as || 'grid',\n          values = [];\n\n      function set(t, vals) {\n        for (let i = 0; i < names.length; ++i) t[names[i]] = vals[i];\n\n        return t;\n      } // generate density raster grids\n\n\n      values = groups.map(g => vegaDataflow.ingest(set({\n        [as]: kde(g, _.counts)\n      }, g.dims)));\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = values;\n      return out;\n    }\n\n  });\n  function partition(data, groupby) {\n    var groups = [],\n        get = f => f(t),\n        map,\n        i,\n        n,\n        t,\n        k,\n        g; // partition data points into groups\n\n\n    if (groupby == null) {\n      groups.push(data);\n    } else {\n      for (map = {}, i = 0, n = data.length; i < n; ++i) {\n        t = data[i];\n        k = groupby.map(get);\n        g = map[k];\n\n        if (!g) {\n          map[k] = g = [];\n          g.dims = k;\n          groups.push(g);\n        }\n\n        g.push(t);\n      }\n    }\n\n    return groups;\n  }\n\n  /**\n   * Generate contours based on kernel-density estimation of point data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.\n   *  If the values parameter is provided, this must be the dimensions of the input data.\n   *  If density estimation is performed, this is the output view dimensions in pixels.\n   * @param {Array<number>} [params.values] - An array of numeric values representing an\n   *  width x height grid of values over which to compute contours. If unspecified, this\n   *  transform will instead attempt to compute contours for the kernel density estimate\n   *  using values drawn from data tuples in the input pulse.\n   * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.\n   * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.\n   * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.\n   * @param {number} [params.cellSize] - Contour density calculation cell size.\n   * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.\n   * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n   *   this parameter is set, the count and nice parameters will be ignored.\n   * @param {number} [params.count] - The desired number of contours.\n   * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n   *   threshold values should be automatically aligned to \"nice\"\n   *   human-friendly values. Setting this flag may cause the number of\n   *   thresholds to deviate from the specified count.\n   * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n   *   polygons should be smoothed using linear interpolation. The default is\n   *   true. The parameter is ignored when using density estimation.\n   */\n\n  function Contour(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Contour.Definition = {\n    'type': 'Contour',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'size',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'required': true\n    }, {\n      'name': 'values',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'x',\n      'type': 'field'\n    }, {\n      'name': 'y',\n      'type': 'field'\n    }, {\n      'name': 'weight',\n      'type': 'field'\n    }, {\n      'name': 'cellSize',\n      'type': 'number'\n    }, {\n      'name': 'bandwidth',\n      'type': 'number'\n    }, {\n      'name': 'count',\n      'type': 'number'\n    }, {\n      'name': 'nice',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'thresholds',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'smooth',\n      'type': 'boolean',\n      'default': true\n    }]\n  };\n  vegaUtil.inherits(Contour, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          contour = contours().smooth(_.smooth !== false),\n          values = _.values,\n          thresh = _.thresholds || quantize(_.count || 10, _.nice, !!values),\n          size = _.size,\n          grid,\n          post;\n\n      if (!values) {\n        values = pulse.materialize(pulse.SOURCE).source;\n        grid = params(density2D(), _)(values, true);\n        post = transform(grid, grid.scale || 1, grid.scale || 1, 0, 0);\n        size = [grid.width, grid.height];\n        values = grid.values;\n      }\n\n      thresh = vegaUtil.isArray(thresh) ? thresh : thresh(values);\n      values = contour.size(size)(values, thresh);\n      if (post) values.forEach(post);\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = (values || []).map(vegaDataflow.ingest);\n      return out;\n    }\n\n  });\n\n  const Feature = 'Feature';\n  const FeatureCollection = 'FeatureCollection';\n  const MultiPoint = 'MultiPoint';\n\n  /**\n   * Consolidate an array of [longitude, latitude] points or GeoJSON features\n   * into a combined GeoJSON object. This transform is particularly useful for\n   * combining geo data for a Projection's fit argument. The resulting GeoJSON\n   * data is available as this transform's value. Input pulses are unchanged.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<function(object): *>} [params.fields] - A two-element array\n   *   of field accessors for the longitude and latitude values.\n   * @param {function(object): *} params.geojson - A field accessor for\n   *   retrieving GeoJSON feature data.\n   */\n\n  function GeoJSON(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoJSON.Definition = {\n    'type': 'GeoJSON',\n    'metadata': {},\n    'params': [{\n      'name': 'fields',\n      'type': 'field',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'geojson',\n      'type': 'field'\n    }]\n  };\n  vegaUtil.inherits(GeoJSON, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var features = this._features,\n          points = this._points,\n          fields = _.fields,\n          lon = fields && fields[0],\n          lat = fields && fields[1],\n          geojson = _.geojson || !fields && vegaUtil.identity,\n          flag = pulse.ADD,\n          mod;\n      mod = _.modified() || pulse.changed(pulse.REM) || pulse.modified(vegaUtil.accessorFields(geojson)) || lon && pulse.modified(vegaUtil.accessorFields(lon)) || lat && pulse.modified(vegaUtil.accessorFields(lat));\n\n      if (!this.value || mod) {\n        flag = pulse.SOURCE;\n        this._features = features = [];\n        this._points = points = [];\n      }\n\n      if (geojson) {\n        pulse.visit(flag, t => features.push(geojson(t)));\n      }\n\n      if (lon && lat) {\n        pulse.visit(flag, t => {\n          var x = lon(t),\n              y = lat(t);\n\n          if (x != null && y != null && (x = +x) === x && (y = +y) === y) {\n            points.push([x, y]);\n          }\n        });\n        features = features.concat({\n          type: Feature,\n          geometry: {\n            type: MultiPoint,\n            coordinates: points\n          }\n        });\n      }\n\n      this.value = {\n        type: FeatureCollection,\n        features: features\n      };\n    }\n\n  });\n\n  /**\n   * Map GeoJSON data to an SVG path string.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {function(object): *} [params.field] - The field with GeoJSON data,\n   *   or null if the tuple itself is a GeoJSON feature.\n   * @param {string} [params.as='path'] - The output field in which to store\n   *   the generated path data (default 'path').\n   */\n\n  function GeoPath(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoPath.Definition = {\n    'type': 'GeoPath',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection'\n    }, {\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'pointRadius',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'path'\n    }]\n  };\n  vegaUtil.inherits(GeoPath, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var out = pulse.fork(pulse.ALL),\n          path = this.value,\n          field = _.field || vegaUtil.identity,\n          as = _.as || 'path',\n          flag = out.SOURCE;\n\n      if (!path || _.modified()) {\n        // parameters updated, reset and reflow\n        this.value = path = vegaProjection.getProjectionPath(_.projection);\n        out.materialize().reflow();\n      } else {\n        flag = field === vegaUtil.identity || pulse.modified(field.fields) ? out.ADD_MOD : out.ADD;\n      }\n\n      const prev = initPath(path, _.pointRadius);\n      out.visit(flag, t => t[as] = path(field(t)));\n      path.pointRadius(prev);\n      return out.modifies(as);\n    }\n\n  });\n\n  function initPath(path, pointRadius) {\n    const prev = path.pointRadius();\n    path.context(null);\n\n    if (pointRadius != null) {\n      path.pointRadius(pointRadius);\n    }\n\n    return prev;\n  }\n\n  /**\n   * Geo-code a longitude/latitude point to an x/y coordinate.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {Array<function(object): *>} params.fields - A two-element array of\n   *   field accessors for the longitude and latitude values.\n   * @param {Array<string>} [params.as] - A two-element array of field names\n   *   under which to store the result. Defaults to ['x','y'].\n   */\n\n  function GeoPoint(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoPoint.Definition = {\n    'type': 'GeoPoint',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection',\n      'required': true\n    }, {\n      'name': 'fields',\n      'type': 'field',\n      'array': true,\n      'required': true,\n      'length': 2\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'array': true,\n      'length': 2,\n      'default': ['x', 'y']\n    }]\n  };\n  vegaUtil.inherits(GeoPoint, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var proj = _.projection,\n          lon = _.fields[0],\n          lat = _.fields[1],\n          as = _.as || ['x', 'y'],\n          x = as[0],\n          y = as[1],\n          mod;\n\n      function set(t) {\n        const xy = proj([lon(t), lat(t)]);\n\n        if (xy) {\n          t[x] = xy[0];\n          t[y] = xy[1];\n        } else {\n          t[x] = undefined;\n          t[y] = undefined;\n        }\n      }\n\n      if (_.modified()) {\n        // parameters updated, reflow\n        pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);\n      } else {\n        mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);\n        pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);\n      }\n\n      return pulse.modifies(as);\n    }\n\n  });\n\n  /**\n   * Annotate items with a geopath shape generator.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {function(object): *} [params.field] - The field with GeoJSON data,\n   *   or null if the tuple itself is a GeoJSON feature.\n   * @param {string} [params.as='shape'] - The output field in which to store\n   *   the generated path data (default 'shape').\n   */\n\n  function GeoShape(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoShape.Definition = {\n    'type': 'GeoShape',\n    'metadata': {\n      'modifies': true,\n      'nomod': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection'\n    }, {\n      'name': 'field',\n      'type': 'field',\n      'default': 'datum'\n    }, {\n      'name': 'pointRadius',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'shape'\n    }]\n  };\n  vegaUtil.inherits(GeoShape, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var out = pulse.fork(pulse.ALL),\n          shape = this.value,\n          as = _.as || 'shape',\n          flag = out.ADD;\n\n      if (!shape || _.modified()) {\n        // parameters updated, reset and reflow\n        this.value = shape = shapeGenerator(vegaProjection.getProjectionPath(_.projection), _.field || vegaUtil.field('datum'), _.pointRadius);\n        out.materialize().reflow();\n        flag = out.SOURCE;\n      }\n\n      out.visit(flag, t => t[as] = shape);\n      return out.modifies(as);\n    }\n\n  });\n\n  function shapeGenerator(path, field, pointRadius) {\n    const shape = pointRadius == null ? _ => path(field(_)) : _ => {\n      var prev = path.pointRadius(),\n          value = path.pointRadius(pointRadius)(field(_));\n      path.pointRadius(prev);\n      return value;\n    };\n\n    shape.context = _ => {\n      path.context(_);\n      return shape;\n    };\n\n    return shape;\n  }\n\n  var epsilon = 1e-6;\n  var abs = Math.abs;\n  var ceil = Math.ceil;\n\n  function graticuleX(y0, y1, dy) {\n    var y = range(y0, y1 - epsilon, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function graticuleY(x0, x1, dx) {\n    var x = range(x0, x1 - epsilon, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function graticule() {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > epsilon;\n      }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > epsilon;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.extentMinor();\n      return graticule.extentMajor(_).extentMinor(_);\n    };\n\n    graticule.extentMajor = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.extentMinor = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.stepMinor();\n      return graticule.stepMajor(_).stepMinor(_);\n    };\n\n    graticule.stepMajor = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.stepMinor = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = graticuleX(y0, y1, 90);\n      y = graticuleY(x0, x1, precision);\n      X = graticuleX(Y0, Y1, 90);\n      Y = graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n  }\n\n  /**\n   * GeoJSON feature generator for creating graticules.\n   * @constructor\n   */\n\n  function Graticule(params) {\n    vegaDataflow.Transform.call(this, [], params);\n    this.generator = graticule();\n  }\n  Graticule.Definition = {\n    'type': 'Graticule',\n    'metadata': {\n      'changes': true,\n      'generates': true\n    },\n    'params': [{\n      'name': 'extent',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'extentMajor',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'extentMinor',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'step',\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'stepMajor',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'default': [90, 360]\n    }, {\n      'name': 'stepMinor',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'default': [10, 10]\n    }, {\n      'name': 'precision',\n      'type': 'number',\n      'default': 2.5\n    }]\n  };\n  vegaUtil.inherits(Graticule, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var src = this.value,\n          gen = this.generator,\n          t;\n\n      if (!src.length || _.modified()) {\n        for (const prop in _) {\n          if (vegaUtil.isFunction(gen[prop])) {\n            gen[prop](_[prop]);\n          }\n        }\n      }\n\n      t = gen();\n\n      if (src.length) {\n        pulse.mod.push(vegaDataflow.replace(src[0], t));\n      } else {\n        pulse.add.push(vegaDataflow.ingest(t));\n      }\n\n      src[0] = t;\n      return pulse;\n    }\n\n  });\n\n  function define (constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n\n    for (var key in definition) prototype[key] = definition[key];\n\n    return prototype;\n  }\n\n  function Color() {}\n  var darker = 0.7;\n  var brighter = 1 / darker;\n  var reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n      reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n      reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n      reHex = /^#([0-9a-f]{3,8})$/,\n      reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n      reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n      reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n      reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n      reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n      reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n  define(Color, color, {\n    copy: function (channels) {\n      return Object.assign(new this.constructor(), this, channels);\n    },\n    displayable: function () {\n      return this.rgb().displayable();\n    },\n    hex: color_formatHex,\n    // Deprecated! Use color.formatHex.\n    formatHex: color_formatHex,\n    formatHsl: color_formatHsl,\n    formatRgb: color_formatRgb,\n    toString: color_formatRgb\n  });\n\n  function color_formatHex() {\n    return this.rgb().formatHex();\n  }\n\n  function color_formatHsl() {\n    return hslConvert(this).formatHsl();\n  }\n\n  function color_formatRgb() {\n    return this.rgb().formatRgb();\n  }\n\n  function color(format) {\n    var m, l;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n    : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n    : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n    : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n    : null // invalid hex\n    ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n    : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n    : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n    : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n    : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n    : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n    : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n    : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb();\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n  define(Rgb, rgb, extend(Color, {\n    brighter: function (k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function (k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function () {\n      return this;\n    },\n    displayable: function () {\n      return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    hex: rgb_formatHex,\n    // Deprecated! Use color.formatHex.\n    formatHex: rgb_formatHex,\n    formatRgb: rgb_formatRgb,\n    toString: rgb_formatRgb\n  }));\n\n  function rgb_formatHex() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  }\n\n  function rgb_formatRgb() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n\n  function hex(value) {\n    value = Math.max(0, Math.min(255, Math.round(value) || 0));\n    return (value < 16 ? \"0\" : \"\") + value.toString(16);\n  }\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl();\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new Hsl(h, s, l, o.opacity);\n  }\n  function hsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, hsl, extend(Color, {\n    brighter: function (k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function (k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function () {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n    },\n    displayable: function () {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    formatHsl: function () {\n      var a = this.opacity;\n      a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"hsl(\" : \"hsla(\") + (this.h || 0) + \", \" + (this.s || 0) * 100 + \"%, \" + (this.l || 0) * 100 + \"%\" + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n  /* From FvD 13.37, CSS Color Module Level 3 */\n\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n  }\n\n  /**\n   * Render a heatmap image for input raster grid data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} [params.field] - The field with raster grid\n   *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n   * @param {string} [params.color] - A constant color value or function for\n   *   individual pixel color. If a function, it will be invoked with an input\n   *   object that includes $x, $y, $value, and $max fields for the grid.\n   * @param {number} [params.opacity] - A constant opacity value or function for\n   *   individual pixel opacity. If a function, it will be invoked with an input\n   *   object that includes $x, $y, $value, and $max fields for the grid.\n   * @param {string} [params.resolve] - The method for resolving maximum values\n   *   across multiple input grids. If 'independent' (the default), maximum\n   *   calculation will be performed separately for each grid. If 'shared',\n   *   a single global maximum will be used for all input grids.\n   * @param {string} [params.as='image'] - The output field in which to store\n   *   the generated bitmap canvas images (default 'image').\n   */\n\n  function Heatmap(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Heatmap.Definition = {\n    'type': 'heatmap',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'color',\n      'type': 'string',\n      'expr': true\n    }, {\n      'name': 'opacity',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'resolve',\n      'type': 'enum',\n      'values': ['shared', 'independent'],\n      'default': 'independent'\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'image'\n    }]\n  };\n  vegaUtil.inherits(Heatmap, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (!pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var source = pulse.materialize(pulse.SOURCE).source,\n          shared = _.resolve === 'shared',\n          field = _.field || vegaUtil.identity,\n          opacity = opacity_(_.opacity, _),\n          color = color_(_.color, _),\n          as = _.as || 'image',\n          obj = {\n        $x: 0,\n        $y: 0,\n        $value: 0,\n        $max: shared ? max(source.map(t => max(field(t).values))) : 0\n      };\n      source.forEach(t => {\n        const v = field(t); // build proxy data object\n\n        const o = vegaUtil.extend({}, t, obj); // set maximum value if not globally shared\n\n        if (!shared) o.$max = max(v.values || []); // generate canvas image\n        // optimize color/opacity if not pixel-dependent\n\n        t[as] = toCanvas(v, o, color.dep ? color : vegaUtil.constant(color(o)), opacity.dep ? opacity : vegaUtil.constant(opacity(o)));\n      });\n      return pulse.reflow(true).modifies(as);\n    }\n\n  }); // get image color function\n\n  function color_(color, _) {\n    let f;\n\n    if (vegaUtil.isFunction(color)) {\n      f = obj => rgb(color(obj, _));\n\n      f.dep = dependency(color);\n    } else {\n      // default to mid-grey\n      f = vegaUtil.constant(rgb(color || '#888'));\n    }\n\n    return f;\n  } // get image opacity function\n\n\n  function opacity_(opacity, _) {\n    let f;\n\n    if (vegaUtil.isFunction(opacity)) {\n      f = obj => opacity(obj, _);\n\n      f.dep = dependency(opacity);\n    } else if (opacity) {\n      f = vegaUtil.constant(opacity);\n    } else {\n      // default to [0, max] opacity gradient\n      f = obj => obj.$value / obj.$max || 0;\n\n      f.dep = true;\n    }\n\n    return f;\n  } // check if function depends on individual pixel data\n\n\n  function dependency(f) {\n    if (!vegaUtil.isFunction(f)) return false;\n    const set = vegaUtil.toSet(vegaUtil.accessorFields(f));\n    return set.$x || set.$y || set.$value || set.$max;\n  } // render raster grid to canvas\n\n\n  function toCanvas(grid, obj, color, opacity) {\n    const n = grid.width,\n          m = grid.height,\n          x1 = grid.x1 || 0,\n          y1 = grid.y1 || 0,\n          x2 = grid.x2 || n,\n          y2 = grid.y2 || m,\n          val = grid.values,\n          value = val ? i => val[i] : vegaUtil.zero,\n          can = vegaCanvas.canvas(x2 - x1, y2 - y1),\n          ctx = can.getContext('2d'),\n          img = ctx.getImageData(0, 0, x2 - x1, y2 - y1),\n          pix = img.data;\n\n    for (let j = y1, k = 0; j < y2; ++j) {\n      obj.$y = j - y1;\n\n      for (let i = x1, r = j * n; i < x2; ++i, k += 4) {\n        obj.$x = i - x1;\n        obj.$value = value(i + r);\n        const v = color(obj);\n        pix[k + 0] = v.r;\n        pix[k + 1] = v.g;\n        pix[k + 2] = v.b;\n        pix[k + 3] = ~~(255 * opacity(obj));\n      }\n    }\n\n    ctx.putImageData(img, 0, 0);\n    return can;\n  }\n\n  /**\n   * Maintains a cartographic projection.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   */\n\n  function Projection(params) {\n    vegaDataflow.Transform.call(this, null, params);\n    this.modified(true); // always treat as modified\n  }\n  vegaUtil.inherits(Projection, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      let proj = this.value;\n\n      if (!proj || _.modified('type')) {\n        this.value = proj = create(_.type);\n        vegaProjection.projectionProperties.forEach(prop => {\n          if (_[prop] != null) set(proj, prop, _[prop]);\n        });\n      } else {\n        vegaProjection.projectionProperties.forEach(prop => {\n          if (_.modified(prop)) set(proj, prop, _[prop]);\n        });\n      }\n\n      if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);\n      if (_.fit) fit(proj, _);\n      return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n    }\n\n  });\n\n  function fit(proj, _) {\n    const data = collectGeoJSON(_.fit);\n    _.extent ? proj.fitExtent(_.extent, data) : _.size ? proj.fitSize(_.size, data) : 0;\n  }\n\n  function create(type) {\n    const constructor = vegaProjection.projection((type || 'mercator').toLowerCase());\n    if (!constructor) vegaUtil.error('Unrecognized projection type: ' + type);\n    return constructor();\n  }\n\n  function set(proj, key, value) {\n    if (vegaUtil.isFunction(proj[key])) proj[key](value);\n  }\n\n  function collectGeoJSON(data) {\n    data = vegaUtil.array(data);\n    return data.length === 1 ? data[0] : {\n      type: FeatureCollection,\n      features: data.reduce((a, f) => a.concat(featurize(f)), [])\n    };\n  }\n\n  function featurize(f) {\n    return f.type === FeatureCollection ? f.features : vegaUtil.array(f).filter(d => d != null).map(d => d.type === Feature ? d : {\n      type: Feature,\n      geometry: d\n    });\n  }\n\n  exports.contour = Contour;\n  exports.geojson = GeoJSON;\n  exports.geopath = GeoPath;\n  exports.geopoint = GeoPoint;\n  exports.geoshape = GeoShape;\n  exports.graticule = Graticule;\n  exports.heatmap = Heatmap;\n  exports.isocontour = Isocontour;\n  exports.kde2d = KDE2D;\n  exports.projection = Projection;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaDataflow","vegaUtil","vegaStatistics","vegaProjection","vegaCanvas","max","values","valueof","undefined","value","index","range","start","stop","step","n","arguments","length","i","Math","ceil","Array","sum","noop","contours","tz","map","contour","polygons","holes","isorings","ring","smooth","area","push","forEach","hole","polygon","x","point","y","contains","j","pi","xi","yi","pj","xj","yj","b","a","c","p","q","r","type","coordinates","callback","stitch","line","end","startIndex","dx","endIndex","f","g","fragmentByEnd","fragmentByStart","concat","unshift","t1","cases","t0","dy","t2","t3","smoothLinear","xt","yt","v1","v0","size","contours.size","_","_0","floor","_1","error","contours.smooth","quantize","k","nice","zero","ex","extent","min","span","step0","abs","count","step1","pow","log","LN10","e10","e5","e2","Isocontour","params","Transform","call","levels","resolve","t","transformPaths","paths","grid","datum","s","scale","translate","isFunction","sx","isNumber","sy","transform","tx","ty","transformPolygon","transformRing","flip","reverse","transformPoint","x1","y1","geometry","radius","bw","data","v","bandwidthNRD","round","sqrt","number","constant","density2D","density","counts","rx","bandwidth","ry","ox","oy","m","values0","Float32Array","values1","d","weight","blurX","blurY","sz","width","height","x2","y2","one","density.x","density.y","density.weight","density.size","cellSize","density.cellSize","LN2","density.bandwidth","array","source","target","w","sr","KDE2D","obj","PARAMS","param","partition","groupby","groups","get","dims","Contour","GeoJSON","GeoPath","initPath","path","pointRadius","prev","context","GeoPoint","GeoShape","shapeGenerator","field","shape","shape.context","graticuleX","y0","epsilon","graticuleY","x0","graticule","lines","X0","DX","X1","X","Y0","DY","Y1","Y","filter","precision","graticule.lines","outline","graticule.outline","slice","graticule.extent","extentMajor","extentMinor","graticule.extentMajor","graticule.extentMinor","graticule.step","stepMajor","stepMinor","graticule.stepMajor","graticule.stepMinor","graticule.precision","Graticule","generator","constructor","prototype","extend","parent","definition","Object","create","key","Color","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","l","trim","toLowerCase","reHex","exec","parseInt","rgbn","Rgb","rgba","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","NaN","opacity","o","rgb_formatHex","hex","rgb_formatRgb","isNaN","toString","h","Hsl","hslConvert","hsl2rgb","m1","m2","Heatmap","color_","dep","dependency","opacity_","$value","$max","set","toSet","accessorFields","$x","$y","toCanvas","val","can","canvas","ctx","getContext","img","getImageData","pix","putImageData","Projection","modified","fit","proj","collectGeoJSON","fitExtent","fitSize","projection","FeatureCollection","features","reduce","featurize","Feature","Definition","inherits","pulse","changed","StopPropagation","out","fork","NO_SOURCE","NO_FIELDS","materialize","SOURCE","identity","thresholds","as","isArray","rederive","ingest","rem","add","names","accessorName","kde","vals","thresh","post","_features","points","_points","fields","lon","lat","geojson","flag","ADD","mod","REM","visit","MultiPoint","ALL","getProjectionPath","reflow","ADD_MOD","modifies","xy","src","gen","prop","replace","brighter","darker","RegExp","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","copy","channels","assign","displayable","formatHsl","color_formatHsl","hsl","shared","projectionProperties","geopath","geopoint","geoshape","heatmap","isocontour","kde2d","defineProperty"]
}
