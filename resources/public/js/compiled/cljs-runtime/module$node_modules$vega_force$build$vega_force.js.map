{
"version":3,
"file":"module$node_modules$vega_force$build$vega_force.js",
"lineCount":51,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,gBAAvB,CAAgC,CAC3G,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACP,QAAnB,GAAA,MAAOD,iBAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DE,OAAA,CAAQD,gBAAR,CAAiBF,OAAA,CAAQ,uDAAR,CAAjB,CAA2CA,OAAA,CAAQ,+CAAR,CAA3C,CAA/D,CACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAOC,CAAAA,GAAvC,CAA6CD,MAAA,CAAO,CAAC,SAAD,CAAY,eAAZ,CAA6B,WAA7B,CAAP,CAAkDD,OAAlD,CAA7C,EACCJ,MAAA,CAA+B,WAAtB,GAAA,MAAOO,WAAP,CAAoCA,UAApC;AAAiDP,MAAjD,EAA2DQ,IAApE,CAA0EJ,OAAA,EAASJ,MAAOS,CAAAA,IAAP,CAAcT,MAAOS,CAAAA,IAArB,EAA6B,EAA7B,CAAiCT,MAAOS,CAAAA,IAAKC,CAAAA,UAA7C,CAA0D,EAAnE,EAAwEV,MAAOS,CAAAA,IAA/E,CAAqFT,MAAOS,CAAAA,IAA5F,CAD3E,CAF0B,CAA3B,CAAD,CAIG,IAJH,CAIU,QAAS,CAACN,OAAD,CAAUQ,YAAV,CAAwBC,QAAxB,CAAkC,CAiDnDC,QAASA,IAAG,CAACC,IAAD,CAAOC,CAAP,CAAUC,CAAV,CAAaC,CAAb,CAAgB,CAC1B,GAAIC,KAAA,CAAMH,CAAN,CAAJ,EAAgBG,KAAA,CAAMF,CAAN,CAAhB,CAA0B,MAAOF,KADP,KAGtBK,MAHsB,CAItBC,KAAON,IAAKO,CAAAA,KACZC,EAAAA,CAAO,CACTC,KAAMN,CADG,CALe,KAQtBO,GAAKV,IAAKW,CAAAA,GARY,CAStBC,GAAKZ,IAAKa,CAAAA,GATY,CAUtBC,GAAKd,IAAKe,CAAAA,GAVY,CAWtBC,GAAKhB,IAAKiB,CAAAA,GAXY,CAYtBC,EAZsB,CAatBC,EAbsB,CAgBtBC,KAhBsB,CAiBtBC,MAjBsB,CAkBtBC,CAGJ,IAAI,CAAChB,IAAL,CAAW,MAAON,KAAKO,CAAAA,KAAL,CAAaC,CAAb,CAAmBR,IAErC,KAAA,CAAOM,IAAKiB,CAAAA,MAAZ,CAAA,CAGE,GAFA,CAAIH,KAAJ,CAAYnB,CAAZ,GAAkBiB,EAAlB,EAAwBR,EAAxB,CAA6BI,EAA7B,EAAmC,CAAnC,GAAuCJ,EAAvC,CAA4CQ,EAA5C,CAAoDJ,EAApD,CAAyDI,EAErD,CADJ,CAAIG,MAAJ,CAAanB,CAAb,GAAmBiB,EAAnB,EAAyBP,EAAzB,CAA8BI,EAA9B,EAAoC,CAApC,GAAwCJ,EAAxC,CAA6CO,EAA7C,CAAqDH,EAArD,CAA0DG,EACtD,CAAAd,MAAA,CAASC,IAAT,CAAe,EAAEA,IAAF,CAASA,IAAA,CAAKgB,CAAL,CAASD,MAAT,EAAmB,CAAnB,CAAuBD,KAAvB,CAAT,CAAnB,CAA4D,MAAOf,OAAA,CAAOiB,CAAP,CAAA;AAAYd,CAAZ,CAAkBR,IAIvF,KAAAwB,GAAK,CAACxB,IAAKyB,CAAAA,EAAGC,CAAAA,IAAR,CAAa,IAAb,CAAmBpB,IAAKG,CAAAA,IAAxB,CACN,KAAAkB,GAAK,CAAC3B,IAAK4B,CAAAA,EAAGF,CAAAA,IAAR,CAAa,IAAb,CAAmBpB,IAAKG,CAAAA,IAAxB,CACN,IAAIR,CAAJ,GAAUuB,EAAV,EAAgBtB,CAAhB,GAAsByB,EAAtB,CAA0B,MAAOnB,EAAKqB,CAAAA,IAAL,CAAYvB,IAAZ,CAAkBD,MAAA,CAASA,MAAA,CAAOiB,CAAP,CAAT,CAAqBd,CAArB,CAA4BR,IAAKO,CAAAA,KAAjC,CAAyCC,CAA3D,CAAiER,IAElG,GACEK,OAEA,CAFSA,MAAA,CAASA,MAAA,CAAOiB,CAAP,CAAT,CAAyBQ,KAAJ,CAAU,CAAV,CAArB,CAAoC9B,IAAKO,CAAAA,KAAzC,CAAqDuB,KAAJ,CAAU,CAAV,CAE1D,CADA,CAAIV,KAAJ,CAAYnB,CAAZ,GAAkBiB,EAAlB,EAAwBR,EAAxB,CAA6BI,EAA7B,EAAmC,CAAnC,GAAuCJ,EAAvC,CAA4CQ,EAA5C,CAAoDJ,EAApD,CAAyDI,EACzD,CAAA,CAAIG,MAAJ,CAAanB,CAAb,GAAmBiB,EAAnB,EAAyBP,EAAzB,CAA8BI,EAA9B,EAAoC,CAApC,GAAwCJ,EAAxC,CAA6CO,EAA7C,CAAqDH,EAArD,CAA0DG,EAH5D,QAIUG,CAJV,CAIcD,MAJd,EAIwB,CAJxB,CAI4BD,KAJ5B,KAIwCW,KAJxC,EAI6CJ,EAJ7C,EAImDR,EAJnD,GAI0D,CAJ1D,CAI8DK,EAJ9D,EAIoEN,EAJpE,EAMA,OAAOb,OAAA,CAAO0B,KAAP,CAAA,CAAYzB,IAAZ,CAAkBD,MAAA,CAAOiB,CAAP,CAAlB,CAA8Bd,CAA9B,CAAoCR,IAxCjB,CA+I5BgC,QAASA,KAAK,CAAC1B,IAAD,CAAOI,EAAP,CAAWE,EAAX,CAAeE,EAAf,CAAmBE,EAAnB,CAAuB,CACnC,IAAKV,CAAAA,IAAL,CAAYA,IACZ,KAAKI,CAAAA,EAAL,CAAUA,EACV,KAAKE,CAAAA,EAAL,CAAUA,EACV,KAAKE,CAAAA,EAAL,CAAUA,EACV,KAAKE,CAAAA,EAAL,CAAUA,EALyB,CAyLrCiB,QAASA,SAAQ,CAAC9B,CAAD,CAAI,CACnB,MAAOA,EAAA,CAAE,CAAF,CADY;AAOrB+B,QAASA,SAAQ,CAAC/B,CAAD,CAAI,CACnB,MAAOA,EAAA,CAAE,CAAF,CADY,CAOrBgC,QAASA,SAAQ,CAACC,KAAD,CAAQnC,CAAR,CAAWC,CAAX,CAAc,CACzBF,CAAAA,CAAO,IAAIqC,QAAJ,CAAkB,IAAL,EAAApC,CAAA,CAAYgC,QAAZ,CAAuBhC,CAApC,CAA4C,IAAL,EAAAC,CAAA,CAAYgC,QAAZ,CAAuBhC,CAA9D,CAAiEoC,GAAjE,CAAsEA,GAAtE,CAA2EA,GAA3E,CAAgFA,GAAhF,CACX,OAAgB,KAAT,EAAAF,KAAA,CAAgBpC,CAAhB,CAAuBA,CAAKuC,CAAAA,MAAL,CAAYH,KAAZ,CAFD,CAK/BC,QAASA,SAAQ,CAACpC,CAAD,CAAIC,CAAJ,CAAOQ,EAAP,CAAWE,EAAX,CAAeE,EAAf,CAAmBE,EAAnB,CAAuB,CACtC,IAAKS,CAAAA,EAAL,CAAUxB,CACV,KAAK2B,CAAAA,EAAL,CAAU1B,CACV,KAAKS,CAAAA,GAAL,CAAWD,EACX,KAAKG,CAAAA,GAAL,CAAWD,EACX,KAAKG,CAAAA,GAAL,CAAWD,EACX,KAAKG,CAAAA,GAAL,CAAWD,EACX,KAAKT,CAAAA,KAAL,CAAaiC,IAAAA,EAPyB,CAUxCC,QAASA,UAAS,CAACjC,IAAD,CAAO,CAMvB,IANuB,IACnBkC,KAAO,CACTjC,KAAMD,IAAKC,CAAAA,IADF,CADY,CAInBoB,KAAOa,IAEX,CAAOlC,IAAP,CAAcA,IAAKqB,CAAAA,IAAnB,CAAA,CAAyBA,IAAA,CAAOA,IAAKA,CAAAA,IAAZ,CAAmB,CAC1CpB,KAAMD,IAAKC,CAAAA,IAD+B,CAI5C,OAAOiC,KAVgB,CAwDzBC,QAASA,SAAS,CAAC1C,CAAD,CAAI,CACpB,MAAO,SAAS,EAAG,CACjB,MAAOA,EADU,CADC,CAUtB2C,QAASA,IAAG,CAACzC,CAAD,CAAI,CACd,MAAOA,EAAEF,CAAAA,CAAT,CAAaE,CAAE0C,CAAAA,EADD,CAIhBC,QAASA,IAAG,CAAC3C,CAAD,CAAI,CACd,MAAOA,EAAED,CAAAA,CAAT;AAAaC,CAAE4C,CAAAA,EADD,CAwGhBC,QAASA,MAAK,CAAC7C,CAAD,CAAI,CAChB,MAAOA,EAAE6C,CAAAA,KADO,CAIlBC,QAASA,KAAI,CAACC,QAAD,CAAWC,MAAX,CAAmB,CAC1B7C,QAAAA,CAAO4C,QAASE,CAAAA,GAAT,CAAaD,MAAb,CACX,IAAI,CAAC7C,QAAL,CAAW,KAAU+C,MAAJ,CAAU,kBAAV,CAA+BF,MAA/B,CAAN,CACX,MAAO7C,SAHuB,CAiHhCgD,QAASA,SAAQ,EAAG,CAClB,IADkB,IACThC,EAAI,CADK,CACFiC,EAAIC,SAAUjC,CAAAA,MADZ,CACoBkC,EAAI,EADxB,CAC4BC,CAA9C,CAAiDpC,CAAjD,CAAqDiC,CAArD,CAAwD,EAAEjC,CAA1D,CAA6D,CAC3D,GAAI,EAAEoC,CAAF,CAAMF,SAAA,CAAUlC,CAAV,CAAN,CAAqB,EAArB,CAAJ,EAAgCoC,CAAhC,GAAqCD,EAArC,EAA0C,OAAQE,CAAAA,IAAR,CAAaD,CAAb,CAA1C,CAA2D,KAAUL,MAAJ,CAAU,gBAAV,CAA6BK,CAA7B,CAAN,CAC3DD,CAAA,CAAEC,CAAF,CAAA,CAAO,EAFoD,CAK7D,MAAO,KAAIE,QAAJ,CAAaH,CAAb,CANW,CASpBG,QAASA,SAAQ,CAACH,CAAD,CAAI,CACnB,IAAKA,CAAAA,CAAL,CAASA,CADU,CAIrBI,QAASA,eAAc,CAACC,SAAD,CAAYC,KAAZ,CAAmB,CACxC,MAAOD,UAAUE,CAAAA,IAAV,EAAiBC,CAAAA,KAAjB,CAAuB,OAAvB,CAAgCC,CAAAA,GAAhC,CAAoC,QAAS,CAACR,CAAD,CAAI,CAAA,IAClDS,KAAO,EAD2C,CAElD7C,EAAIoC,CAAEU,CAAAA,OAAF,CAAU,GAAV,CACC;CAAT,EAAI9C,CAAJ,GAAY6C,IAAuB,CAAhBT,CAAEW,CAAAA,KAAF,CAAQ/C,CAAR,CAAY,CAAZ,CAAgB,CAAAoC,CAAA,CAAIA,CAAEW,CAAAA,KAAF,CAAQ,CAAR,CAAW/C,CAAX,CAAvC,CACA,IAAIoC,CAAJ,EAAS,CAACK,KAAMO,CAAAA,cAAN,CAAqBZ,CAArB,CAAV,CAAmC,KAAUL,MAAJ,CAAU,gBAAV,CAA6BK,CAA7B,CAAN,CACnC,MAAO,CACLa,KAAMb,CADD,CAECS,IAFD,CAL+C,CAAjD,CADiC,CAmE1CK,QAASA,IAAG,CAACD,IAAD,CAAOJ,IAAP,CAAaM,QAAb,CAAuB,CACjC,IADiC,IACxBnD,EAAI,CADoB,CACjBiC,EAAIgB,IAAKhD,CAAAA,MAAzB,CAAiCD,CAAjC,CAAqCiC,CAArC,CAAwC,EAAEjC,CAA1C,CACE,GAAIiD,IAAA,CAAKjD,CAAL,CAAQ6C,CAAAA,IAAZ,GAAqBA,IAArB,CAA2B,CACzBI,IAAA,CAAKjD,CAAL,CAAA,CAAUoD,IAAMH,KAAA,CAAOA,IAAKF,CAAAA,KAAL,CAAW,CAAX,CAAc/C,CAAd,CAAiBqD,CAAAA,MAAjB,CAAwBJ,IAAKF,CAAAA,KAAL,CAAW/C,CAAX,CAAe,CAAf,CAAxB,CACvB,MAFyB,CAMb,IAAhB,EAAImD,QAAJ,EAAsBF,IAAKK,CAAAA,IAAL,CAAU,CACxBT,IADwB,CAE9BU,MAAOJ,QAFuB,CAAV,CAItB,OAAOF,KAZ0B,CAoCnCO,QAASA,SAAQ,EAAG,CAClBC,QAAA,CAAW,CADO,CAIpBC,QAASA,MAAK,EAAG,CACf,IAAKC,CAAAA,KAAL,CAAa,IAAKC,CAAAA,KAAlB,CAA0B,IAAKC,CAAAA,KAA/B,CAAuC,IADxB,CA0BjBC,QAASA,MAAK,CAACX,QAAD,CAAWY,KAAX,CAAkBC,IAAlB,CAAwB,CACpC,IAAI5B,EAAI,IAAIsB,KACZtB,EAAE6B,CAAAA,OAAF,CAAUd,QAAV,CAAoBY,KAApB;AAA2BC,IAA3B,CACA,OAAO5B,EAH6B,CAqBtC8B,QAASA,KAAI,EAAG,CACdT,QAAA,EAAYU,SAAZ,CAAwBC,KAAMC,CAAAA,GAAN,EAAxB,EAAuCC,SACvCC,MAAA,CAAQC,OAAR,CAAkB,CAElB,IAAI,CA1DGf,QAuCP,GAvCoBgB,QAAA,CAASjB,QAAT,CAAA,CAAoBC,QAApB,CAA+BW,KAAMC,CAAAA,GAAN,EAA/B,CAA6CC,SAuCjE,CAEA,GAAEC,KAKF,KARoB,IAKhBnC,EAAIsC,QALY,CAMhBC,CAEJ,CAAOvC,CAAP,CAAA,CACkC,CAChC,GADKuC,CACL,CADSlB,QACT,CADoBrB,CAAEwB,CAAAA,KACtB,GADmCxB,CAAEuB,CAAAA,KAAMvD,CAAAA,IAAR,CAAac,IAAAA,EAAb,CAAwByD,CAAxB,CACnC,CAAAvC,CAAA,CAAIA,CAAEyB,CAAAA,KAGR,GAAEU,KAOE,CAAJ,OAEU,CACRA,KAAA,CAAQ,CAcNK,EAAAA,CAAKF,QAIT,KALA,IAGIV,KAAOa,QAEX,CAAOD,CAAP,CAAA,CACE,GAAIA,CAAGjB,CAAAA,KAAP,CAAc,CACRK,IAAJ,CAAWY,CAAGhB,CAAAA,KAAd,GAAqBI,IAArB,CAA4BY,CAAGhB,CAAAA,KAA/B,CACA,KAAAkB,GAAKF,CAAIA,EAAA,CAAKA,CAAGf,CAAAA,KAFL,CAAd,IAIEkB,EACA,CADKH,CAAGf,CAAAA,KACR,CADee,CAAGf,CAAAA,KAClB,CAD0B,IAC1B,CAAAe,CAAA,CAAKE,EAAA,CAAKA,EAAGjB,CAAAA,KAAR,CAAgBkB,CAAhB,CAAqBL,QAArB,CAAgCK,CAIzCC,SAAA,CAAWF,EACXG,MAAA,CAAMjB,IAAN,CA3BEP,SAAA,CAAW,CAHH,CANI,CAahByB,QAASA,KAAI,EAAG,CAAA,IACVb,IAAMD,KAAMC,CAAAA,GAAN,EADI,CAEVN,MAAQM,GAARN;AAAcI,SAjFRgB,IAkFV,CAAIpB,KAAJ,GAAuBO,SAAoB,EAAPP,KAAO,CAAAI,SAAA,CAAYE,GAAvD,CAHc,CA0BhBY,QAASA,MAAK,CAACjB,IAAD,CAAO,CACfO,KAAJ,GAEIC,OAGJ,GAHaA,OAGb,CAHuBY,YAAA,CAAaZ,OAAb,CAGvB,EAAY,EAAZ,CAFYR,IAEZ,CAFmBP,QAEnB,EACaoB,QACX,CADIb,IACJ,GADqBQ,OACrB,CAD+Ba,UAAA,CAAWnB,IAAX,CAAiBF,IAAjB,CAAwBI,KAAMC,CAAAA,GAAN,EAAxB,CAAsCC,SAAtC,CAC/B,EAAIgB,QAAJ,GAAcA,QAAd,CAAyBC,aAAA,CAAcD,QAAd,CAAzB,CAFF,GAIOA,QACM,GADInB,SAAyB,CAAbC,KAAMC,CAAAA,GAAN,EAAa,CAAAiB,QAAA,CAAWE,WAAA,CAAYN,IAAZ,CAnH3CC,GAmH2C,CACxC,EAAXZ,KAAW,CAAH,CAAG,CAAAE,QAAA,CAASP,IAAT,CALb,CALA,CADmB,CAoBrBuB,QAASA,IAAI,EAAG,CACd,IAAIC,EAAI,CACR,OAAO,EAAA,GAAOA,CAAP,EANCC,OAMD,CAAgBD,CAAhB,CALCE,UAKD,EAJCC,UAID,EAJCA,UAEM,CAKhBlH,QAASA,WAAC,CAACE,CAAD,CAAI,CACZ,MAAOA,EAAEF,CAAAA,CADG,CAGdC,QAASA,WAAC,CAACC,CAAD,CAAI,CACZ,MAAOA,EAAED,CAAAA,CADG,CAKdkH,QAASA,gBAAgB,CAAChF,KAAD,CAAQ,CAa/BiF,QAASA,KAAI,EAAG,CACdC,IAAA,EACAC;KAAM7F,CAAAA,IAAN,CAAW,MAAX,CAAmB8F,UAAnB,CAEIC,MAAJ,CAAYC,QAAZ,GACEC,OAAQC,CAAAA,IAAR,EACA,CAAAL,KAAM7F,CAAAA,IAAN,CAAW,KAAX,CAAkB8F,UAAlB,CAFF,CAJc,CAUhBF,QAASA,KAAI,CAACO,UAAD,CAAa,CAAA,IACpBvG,CADoB,CAEpBiC,EAAInB,KAAMb,CAAAA,MAEKiB,KAAAA,EAAnB,GAAIqF,UAAJ,GAA8BA,UAA9B,CAA2C,CAA3C,CAEA,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,UAApB,CAAgC,EAAEC,CAAlC,CAME,IALAL,KAKK,GALKM,WAKL,CALmBN,KAKnB,EAL4BO,UAK5B,CAJLC,MAAOC,CAAAA,OAAP,CAAe,QAAS,CAACC,KAAD,CAAQ,CAC9BA,KAAA,CAAMV,KAAN,CAD8B,CAAhC,CAIK,CAAAnG,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CAAwB,CACtB,IAAAhB,KAAO8B,KAAA,CAAMd,CAAN,CACQ,KAAf,EAAIhB,IAAK8H,CAAAA,EAAT,CAAqB9H,IAAKL,CAAAA,CAA1B,EAA+BK,IAAKuC,CAAAA,EAApC,EAA0CwF,aAA1C,EAA6D/H,IAAKL,CAAAA,CAAa,CAATK,IAAK8H,CAAAA,EAAI,CAAA9H,IAAKuC,CAAAA,EAAL,CAAU,CAAzF,CACe,KAAf,EAAIvC,IAAKgI,CAAAA,EAAT,CAAqBhI,IAAKJ,CAAAA,CAA1B,EAA+BI,IAAKyC,CAAAA,EAApC,EAA0CsF,aAA1C,EAA6D/H,IAAKJ,CAAAA,CAAa,CAATI,IAAKgI,CAAAA,EAAI,CAAAhI,IAAKyC,CAAAA,EAAL,CAAU,CAAzF,CAHsB,CAO1B,MAAOyE,WAnBiB,CAsB1Be,QAASA,gBAAe,EAAG,CACzB,IADyB,IAChBjH;AAAI,CADY,CACTiC,EAAInB,KAAMb,CAAAA,MADD,CACSjB,IAAlC,CAAwCgB,CAAxC,CAA4CiC,CAA5C,CAA+C,EAAEjC,CAAjD,CAAoD,CAClDhB,IAAA,CAAO8B,KAAA,CAAMd,CAAN,CAAUhB,KAAK0C,CAAAA,KAAL,CAAa1B,CACf,KAAf,EAAIhB,IAAK8H,CAAAA,EAAT,GAAqB9H,IAAKL,CAAAA,CAA1B,CAA8BK,IAAK8H,CAAAA,EAAnC,CACe,KAAf,EAAI9H,IAAKgI,CAAAA,EAAT,GAAqBhI,IAAKJ,CAAAA,CAA1B,CAA8BI,IAAKgI,CAAAA,EAAnC,CAEA,IAAIlI,KAAA,CAAME,IAAKL,CAAAA,CAAX,CAAJ,EAAqBG,KAAA,CAAME,IAAKJ,CAAAA,CAAX,CAArB,CAAoC,CAAA,IAC9BsI,OAtDQC,EAsDRD,CAAyBE,IAAKC,CAAAA,IAAL,CAAU,EAAV,CAAgBrH,CAAhB,CADK,CAE9BsH,MAAQtH,CAARsH,CAAYC,YAChBvI,KAAKL,CAAAA,CAAL,CAASuI,MAAT,CAAkBE,IAAKI,CAAAA,GAAL,CAASF,KAAT,CAClBtI,KAAKJ,CAAAA,CAAL,CAASsI,MAAT,CAAkBE,IAAKK,CAAAA,GAAL,CAASH,KAAT,CAJgB,CAOpC,GAAIxI,KAAA,CAAME,IAAKuC,CAAAA,EAAX,CAAJ,EAAsBzC,KAAA,CAAME,IAAKyC,CAAAA,EAAX,CAAtB,CACEzC,IAAKuC,CAAAA,EAAL,CAAUvC,IAAKyC,CAAAA,EAAf,CAAoB,CAb4B,CAD3B,CAmB3BiG,QAASA,gBAAe,CAACb,KAAD,CAAQ,CAC1BA,KAAMc,CAAAA,UAAV,EAAsBd,KAAMc,CAAAA,UAAN,CAAiB7G,KAAjB,CAAwB8G,MAAxB,CACtB,OAAOf,MAFuB,CAhED,IAC3BX,UAD2B,CAE3BC,MAAQ,CAFmB,CAG3BC,SAAW,IAHgB,CAI3BM,WAAa,CAAbA,CAAiBU,IAAKS,CAAAA,GAAL,CAASzB,QAAT,CAAmB,CAAnB,CAAuB,GAAvB,CAJU,CAK3BK,YAAc,CALa;AAM3BM,cAAgB,EANW,CAO3BJ,OAAS,IAAImB,GAPc,CAQ3BzB,QAAUvC,KAAA,CAAMiC,IAAN,CARiB,CAS3BE,MAAQjE,QAAA,CAAS,MAAT,CAAiB,KAAjB,CATmB,CAU3B4F,OAASnC,GAAA,EACA,KAAb,EAAI3E,KAAJ,GAAmBA,KAAnB,CAA2B,EAA3B,CA0DAmG,gBAAA,EACA,OAAOf,WAAP,CAAoB,CACZF,IADY,CAElB/B,QAASA,QAAS,EAAG,CACnB,MAAOoC,QAAQpC,CAAAA,OAAR,CAAgB8B,IAAhB,CAAA,CAAuBG,UADX,CAFH,CAKlBI,KAAMA,QAAS,EAAG,CAChB,MAAOD,QAAQC,CAAAA,IAAR,EAAA,CAAgBJ,UADP,CALA,CAQlBpF,MAAOA,QAAS,CAACqB,CAAD,CAAI,CAClB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBa,KAAA,CAAQqB,CAAR,CAAW8E,eAAA,EAAX,CAA8BN,MAAOC,CAAAA,OAAP,CAAec,eAAf,CAA9B,CAA+DxB,UAAnF,EAAiGpF,KADtF,CARF,CAWlBqF,MAAOA,QAAS,CAAChE,CAAD,CAAI,CAClB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBkG,KAAA,CAAQ,CAAChE,CAAT,CAAY+D,UAAhC,EAA8CC,KADnC,CAXF,CAclBC,SAAUA,QAAS,CAACjE,CAAD,CAAI,CACrB,MAAOD,UAAUjC,CAAAA,MAAV;CAAoBmG,QAAA,CAAW,CAACjE,CAAZ,CAAe+D,UAAnC,EAAiDE,QADnC,CAdL,CAiBlBM,WAAYA,QAAS,CAACvE,CAAD,CAAI,CACvB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoByG,UAAA,CAAa,CAACvE,CAAd,CAAiB+D,UAArC,EAAmD,CAACQ,UADpC,CAjBP,CAoBlBD,YAAaA,QAAS,CAACtE,CAAD,CAAI,CACxB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBwG,WAAA,CAAc,CAACtE,CAAf,CAAkB+D,UAAtC,EAAoDO,WADnC,CApBR,CAuBlBM,cAAeA,QAAS,CAAC5E,CAAD,CAAI,CAC1B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB8G,aAAA,CAAgB,CAAhB,CAAoB5E,CAApB,CAAuB+D,UAA3C,EAAyD,CAAzD,CAA6Da,aAD1C,CAvBV,CA0BlBgB,aAAcA,QAAS,CAAC5F,CAAD,CAAI,CACzB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB2H,MAAA,CAASzF,CAAT,CAAYwE,MAAOC,CAAAA,OAAP,CAAec,eAAf,CAAZ,CAA6CxB,UAAjE,EAA+E0B,MAD7D,CA1BT,CA6BlBf,MAAOA,QAAS,CAAChE,IAAD,CAAOV,CAAP,CAAU,CACxB,MAA0B,EAAnB,CAAAD,SAAUjC,CAAAA,MAAV,EAA6B,IAAL,EAAAkC,CAAA,CAAYwE,MAAOqB,CAAAA,MAAP,CAAcnF,IAAd,CAAZ,CAAkC8D,MAAOzD,CAAAA,GAAP,CAAWL,IAAX;AAAiB6E,eAAA,CAAgBvF,CAAhB,CAAjB,CAAlC,CAAwE+D,UAAhG,EAA8GS,MAAO7E,CAAAA,GAAP,CAAWe,IAAX,CAD7F,CA7BR,CAgClBlB,KAAMA,QAAS,CAAChD,CAAD,CAAIC,CAAJ,CAAOsI,MAAP,CAAe,CAAA,IACxBlH,CADwB,CAExBiC,EAAInB,KAAMb,CAAAA,MAMMiH,OAAA,CAAN,IAAd,EAAIA,MAAJ,CAA6BrC,QAA7B,CAA2CqC,MAA3C,CAAqDA,MAErD,KAAKlH,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CAAwB,CACtB,IAAAhB,KAAO8B,KAAA,CAAMd,CAAN,CACP,KAAAiI,GAAKtJ,CAALsJ,CAASjJ,IAAKL,CAAAA,CACd,KAAAuJ,GAAKtJ,CAALsJ,CAASlJ,IAAKJ,CAAAA,CACduJ,GAAA,CAAKF,EAAL,CAAUA,EAAV,CAAeC,EAAf,CAAoBA,EACpB,IAAIC,EAAJ,CAASjB,MAAT,CAAiB,CAAA,IAAAkB,QAAUpJ,IAAMkI,OAAA,CAASiB,EAAzB,CALK,CAQxB,MAAOC,QAlBqB,CAhCZ,CAoDlBC,GAAIA,QAAS,CAACxF,IAAD,CAAOV,CAAP,CAAU,CACrB,MAA0B,EAAnB,CAAAD,SAAUjC,CAAAA,MAAV,EAAwBgG,KAAMoC,CAAAA,EAAN,CAASxF,IAAT,CAAeV,CAAf,CAAA,CAAmB+D,UAA3C,EAAyDD,KAAMoC,CAAAA,EAAN,CAASxF,IAAT,CAD3C,CApDL,CAtEW,CA4VjCyF,QAASA,MAAK,CAACC,MAAD,CAAS,CACrBhK,YAAaiK,CAAAA,SAAUpI,CAAAA,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCmI,MAAxC,CADqB,CAuNvBE,QAASA,MAAK,CAACC,EAAD,CAAKC,EAAL,CAAS,CACrB,MAAO,EAAA,EAAMD,EAAGE,CAAAA,KAAH,CAASD,EAAT,CAAaE,CAAAA,GAAb,EADQ,CAIvB3C,QAASA,WAAU,CAACpF,KAAD;AAAQqB,CAAR,CAAW,CACtB2G,KAAAA,CAAMhD,eAAA,CAAgBhF,KAAhB,CADgB,OAEtBwF,KAAOwC,KAAIxC,CAAAA,IAFW,CAGtBrC,QAAU6E,KAAI7E,CAAAA,OACpB,KAAI8E,QAAU,CAAA,CAEdD,MAAIC,CAAAA,OAAJ,CAAc,EAAAC,EAAMD,OAEpBD,MAAI7E,CAAAA,OAAJ,CAAc,EAAAgF,GAAOF,OAAA,CAAU,CAAA,CAAV,CAAiB9E,OAAA,EAAxBgF,CAEdH,MAAIxC,CAAAA,IAAJ,CAAW,EAAA4C,GAAOH,OAAA,CAAU,CAAA,CAAV,CAAgBzC,IAAA,EAAvB4C,CAEX,OAAOC,MAAA,CAAML,KAAN,CAAW3G,CAAX,CAAc,CAAA,CAAd,CAAoBkG,CAAAA,EAApB,CAAuB,KAAvB,CAA8B,EAAA,EAAMU,OAAN,CAAgB,CAAA,CAA9C,CAZqB,CAe9BI,QAASA,MAAK,CAACL,GAAD,CAAM3G,UAAN,CAASiH,IAAT,CAAeC,cAAf,CAAsB,CAAA,IAC9BC,EAAI9K,QAAS+K,CAAAA,KAAT,CAAepH,UAAEwE,CAAAA,MAAjB,CAD0B,CAG9B1E,CAIC,KAAAjC,EAAI,CAAT,KAAYiC,CAAZ,CAAgBuH,WAAYvJ,CAAAA,MAA5B,CAAoCD,CAApC,CAAwCiC,CAAxC,CAA2C,EAAEjC,CAA7C,CAAgD,CAC9C,IAAAyJ,EAAID,WAAA,CAAYxJ,CAAZ,CACJ,IA9PW0J,QA8PX,GAAID,CAAJ,EAAoBtH,UAAEwH,CAAAA,QAAF,CAAWF,CAAX,CAApB,CAAmCX,GAAA,CAAIW,CAAJ,CAAA,CAAOtH,UAAA,CAAEsH,CAAF,CAAP,CAFW,CAK3CzJ,CAAA,CAAI,CAAT,KAAYiC,CAAZ,CAAgBqH,CAAErJ,CAAAA,MAAlB,CAA0BD,CAA1B,CAA8BiC,CAA9B,CAAiC,EAAEjC,CAAnC,CAAsC,CACpC,IAAA6C,KAlQW6G,QAkQX7G;AAAgB7C,CACZ,IAAAoJ,IAAA,EAAQjH,UAAEwH,CAAAA,QAAF,CAnQDD,QAmQC,CAAmB1J,CAAnB,CAAR,CAAA,CAuBCyJ,CAAAA,CAAAA,IAAAA,EADY,KAtBmB,EAAA,CAAA,CAAA,CAAA,CAyBjCjL,SAASwE,CAAAA,cAAT,CAAwB4G,QAAxB,CAAkCzH,CAAE0E,CAAAA,KAApC,CAAL,EACErI,QAASqL,CAAAA,KAAT,CAAe,sBAAf,CAAwC1H,CAAE0E,CAAAA,KAA1C,CAGF,KAAAyC,WAAIM,QAAA,CAASzH,CAAE0E,CAAAA,KAAX,CAAA,EAEJ,KAAK4C,CAAL,GAAUtH,EAAV,CACM3D,QAASsL,CAAAA,UAAT,CAAoBR,UAAA,CAAEG,CAAF,CAApB,CAAJ,EAA+BM,aAAA,CAAcT,UAAA,CAAEG,CAAF,CAAd,CAAoBtH,CAAA,CAAEsH,CAAF,CAApB,CAA0BtH,CAA1B,CAGjC,EAAA,CAAOmH,UAnCD,CAAA,IAAA,CAAiD,GAAA,CAAA,CAAA,cAAA,CAY7B,CAAA,CAAA,CACtB9C,UAAAA,CAAGwD,CAAHxD,CAAGwD,IAAAA,EAbgD,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,MAAA,cAevD,KAAKxD,UAAL,GAAU8C,EAAV,CACE,GAAI9K,QAASsL,CAAAA,UAAT,CAAoBE,CAApB,CAAwBV,CAAA,CAAE9C,UAAF,CAAxB,CAAJ,EAAqC6C,KAAMM,CAAAA,QAAN,CAAenL,QAASyL,CAAAA,cAAT,CAAwBD,CAAxB,CAAf,CAArC,CAAiF,CAAA,CAAA,CAAO,CAAP,OAAA,CAAA,CAGnF,CAAA,CAAO,CAPmB,CAZ6B,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,IAAjD,CACAP,CAAJ,EAAOX,GAAIjC,CAAAA,KAAJ,CAAUhE,IAAV,CAAgB4G,CAAhB,CAH6B,CAMtC,IAAKxH,CAAL,CAAS6G,GAAIoB,CAAAA,SAAb,EAA0B,CAA1B,CAA6BlK,CAA7B,CAAiCiC,CAAjC,CAAoC,EAAEjC,CAAtC,CACE8I,GAAIjC,CAAAA,KAAJ,CAxQW6C,QAwQX,CAAmB1J,CAAnB,CAAsB,IAAtB,CAGF8I,IAAIoB,CAAAA,SAAJ,CAAgBZ,CAAErJ,CAAAA,MAClB,OAAO6I,IAvB2B,CAoDpCiB,QAASA,cAAa,CAACT,CAAD,CAAIU,CAAJ,CAAO7H,CAAP,CAAU,CAC9BmH,CAAA,CAAE9K,QAASsL,CAAAA,UAAT,CAAoBE,CAApB,CAAA,CAAyBnL,CAAA,EAAKmL,CAAA,CAAEnL,CAAF,CAAKsD,CAAL,CAA9B,CAAwC6H,CAA1C,CAD8B,CA/nChC,IAAIG,UAAYtJ,QAASuJ,CAAAA,SAArBD,CAAiCpJ,QAASqJ,CAAAA,SAE9CD,UAAU/I,CAAAA,IAAV,CAAiBiJ,QAAS,EAAG,CAAA,IACvBjJ,KAAO,IAAIL,QAAJ,CAAa,IAAKZ,CAAAA,EAAlB,CAAsB,IAAKG,CAAAA,EAA3B,CAA+B,IAAKjB,CAAAA,GAApC,CAAyC,IAAKE,CAAAA,GAA9C,CAAmD,IAAKE,CAAAA,GAAxD,CAA6D,IAAKE,CAAAA,GAAlE,CADgB,CAEvBX,KAAO,IAAKC,CAAAA,KAFW,CAGvB6B,KAHuB,CAIvBwJ,KACJ,IAAI,CAACtL,IAAL,CAAW,MAAOoC,KAClB,IAAI,CAACpC,IAAKiB,CAAAA,MAAV,CAAkB,MAAOmB,KAAKnC,CAAAA,KAAL,CAAakC,SAAA,CAAUnC,IAAV,CAAb,CAA8BoC,IAMvD,KALAN,KAKA,CALQ,CAAC,CACPyJ,OAAQvL,IADD,CAEPwL,OAAQpJ,IAAKnC,CAAAA,KAAbuL,CAAyBhK,KAAJ,CAAU,CAAV,CAFd,CAAD,CAKR,CAAOxB,IAAP;AAAc8B,KAAM2J,CAAAA,GAAN,EAAd,CAAA,CACE,IAAK,IAAIzK,EAAI,CAAb,CAAoB,CAApB,CAAgBA,CAAhB,CAAuB,EAAEA,CAAzB,CACE,GAAIsK,KAAJ,CAAYtL,IAAKuL,CAAAA,MAAL,CAAYvK,CAAZ,CAAZ,CACMsK,KAAMrK,CAAAA,MAAV,CAAkBa,KAAMwC,CAAAA,IAAN,CAAW,CAC3BiH,OAAQD,KADmB,CAE3BE,OAAQxL,IAAKwL,CAAAA,MAAL,CAAYxK,CAAZ,CAARwK,CAA6BhK,KAAJ,CAAU,CAAV,CAFE,CAAX,CAAlB,CAGQxB,IAAKwL,CAAAA,MAAL,CAAYxK,CAAZ,CAHR,CAGyBmB,SAAA,CAAUmJ,KAAV,CAK/B,OAAOlJ,KAvBoB,CA0B7B+I,UAAU1L,CAAAA,GAAV,CApZAiM,QAAkB,CAAC7L,CAAD,CAAI,CAAA,MACdF,EAAI,CAAC,IAAKwB,CAAAA,EAAGC,CAAAA,IAAR,CAAa,IAAb,CAAmBvB,CAAnB,CADS,CAEdD,EAAI,CAAC,IAAK0B,CAAAA,EAAGF,CAAAA,IAAR,CAAa,IAAb,CAAmBvB,CAAnB,CACX,OAAOJ,IAAA,CAAI,IAAKkM,CAAAA,KAAL,CAAWhM,CAAX,CAAcC,CAAd,CAAJ,CAAsBD,CAAtB,CAAyBC,CAAzB,CAA4BC,CAA5B,CAHa,CAqZtBsL,UAAUlJ,CAAAA,MAAV,CApWAA,QAAe,CAAC9B,IAAD,CAAO,CAAA,IAChBN,CADgB,CAEhBmB,CAFgB,CAGhBiC,EAAI9C,IAAKc,CAAAA,MAHO,CAIhBtB,CAJgB,CAKhBC,CALgB,CAMhBgM,GAASpK,KAAJ,CAAUyB,CAAV,CANW,CAOhB4I,GAASrK,KAAJ,CAAUyB,CAAV,CAPW,CAQhB7C,GAAKyF,QARW,CAShBvF,GAAKuF,QATW,CAUhBrF,GAAK,CAACqF,QAVU,CAWhBnF,GAAK,CAACmF,QAEV,KAAK7E,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CACMlB,KAAA,CAAMH,CAAN,CAAU,CAAC,IAAKwB,CAAAA,EAAGC,CAAAA,IAAR,CAAa,IAAb,CAAmBvB,CAAnB,CAAuBM,IAAA,CAAKa,CAAL,CAAvB,CAAX,CAAJ,EAAmDlB,KAAA,CAAMF,CAAN,CAAU,CAAC,IAAK0B,CAAAA,EAAGF,CAAAA,IAAR,CAAa,IAAb;AAAmBvB,CAAnB,CAAX,CAAnD,GACA+L,EAAA,CAAG5K,CAAH,CAKA,CALQrB,CAKR,CAJAkM,EAAA,CAAG7K,CAAH,CAIA,CAJQpB,CAIR,CAHID,CAGJ,CAHQS,EAGR,GAHYA,EAGZ,CAHiBT,CAGjB,EAFIA,CAEJ,CAFQa,EAER,GAFYA,EAEZ,CAFiBb,CAEjB,EADIC,CACJ,CADQU,EACR,GADYA,EACZ,CADiBV,CACjB,EAAIA,CAAJ,CAAQc,EAAR,GAAYA,EAAZ,CAAiBd,CAAjB,CANA,CAUF,IAAIQ,EAAJ,CAASI,EAAT,EAAeF,EAAf,CAAoBI,EAApB,CAAwB,MAAO,KAE/B,KAAKiL,CAAAA,KAAL,CAAWvL,EAAX,CAAeE,EAAf,CAAmBqL,CAAAA,KAAnB,CAAyBnL,EAAzB,CAA6BE,EAA7B,CAEA,KAAKM,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CACEvB,GAAA,CAAI,IAAJ,CAAUmM,EAAA,CAAG5K,CAAH,CAAV,CAAiB6K,EAAA,CAAG7K,CAAH,CAAjB,CAAwBb,IAAA,CAAKa,CAAL,CAAxB,CAGF,OAAO,KAhCa,CAqWtBmK,UAAUQ,CAAAA,KAAV,CAlUAG,QAAoB,CAACnM,CAAD,CAAIC,CAAJ,CAAO,CACzB,GAAIE,KAAA,CAAMH,CAAN,CAAU,CAACA,CAAX,CAAJ,EAAqBG,KAAA,CAAMF,CAAN,CAAU,CAACA,CAAX,CAArB,CAAoC,MAAO,KADlB,KAGrBQ,GAAK,IAAKC,CAAAA,GAHW,CAIrBC,GAAK,IAAKC,CAAAA,GAJW,CAKrBC,GAAK,IAAKC,CAAAA,GALW,CAMrBC,GAAK,IAAKC,CAAAA,GAId,IAAIb,KAAA,CAAMM,EAAN,CAAJ,CACEI,EACA,EADMJ,EACN,CADWgI,IAAK2D,CAAAA,KAAL,CAAWpM,CAAX,CACX,EAD4B,CAC5B,CAAAe,EAAA,EAAMJ,EAAN,CAAW8H,IAAK2D,CAAAA,KAAL,CAAWnM,CAAX,CAAX,EAA4B,CAF9B,KAIK,CAMH,IANG,IACCoM,EAAIxL,EAAJwL,CAAS5L,EAAT4L,EAAe,CADhB,CAEChM,KAAO,IAAKC,CAAAA,KAFb,CAGCF,MAHD,CAICiB,CAEJ,CAAOZ,EAAP,CAAYT,CAAZ,EAAiBA,CAAjB,EAAsBa,EAAtB,EAA4BF,EAA5B,CAAiCV,CAAjC,EAAsCA,CAAtC,EAA2Cc,EAA3C,CAAA,CAIE,OAHAM,CAGQA,EAHHpB,CAGGoB,CAHCV,EAGDU,GAHQ,CAGRA,CAHYrB,CAGZqB,CAHgBZ,EAGhBY,CAFRjB,MAEQiB,CAFKQ,KAAJ,CAAU,CAAV,CAEDR,CAFejB,MAAA,CAAOiB,CAAP,CAEfA;AAF2BhB,IAE3BgB,CAFiChB,IAEjCgB,CAFwCjB,MAExCiB,CAFgDgL,CAEhDhL,EAFqD,CAErDA,CAAAA,CAAR,EACE,KAAK,CAAL,CACER,EAAA,CAAKJ,EAAL,CAAU4L,CAAGtL,GAAA,CAAKJ,EAAL,CAAU0L,CACvB,MAEF,MAAK,CAAL,CACE5L,EAAA,CAAKI,EAAL,CAAUwL,CAAGtL,GAAA,CAAKJ,EAAL,CAAU0L,CACvB,MAEF,MAAK,CAAL,CACExL,EAAA,CAAKJ,EAAL,CAAU4L,CAAG1L,GAAA,CAAKI,EAAL,CAAUsL,CACvB,MAEF,MAAK,CAAL,CACE5L,EAAa,CAARI,EAAQ,CAAHwL,CAAG,CAAA1L,EAAA,CAAKI,EAAL,CAAUsL,CAd3B,CAmBE,IAAK/L,CAAAA,KAAT,EAAkB,IAAKA,CAAAA,KAAMgB,CAAAA,MAA7B,GAAqC,IAAKhB,CAAAA,KAA1C,CAAkDD,IAAlD,CA7BG,CAgCL,IAAKK,CAAAA,GAAL,CAAWD,EACX,KAAKG,CAAAA,GAAL,CAAWD,EACX,KAAKG,CAAAA,GAAL,CAAWD,EACX,KAAKG,CAAAA,GAAL,CAAWD,EACX,OAAO,KAlDkB,CAmU3ByK,UAAUhL,CAAAA,IAAV,CA9QA8L,QAAmB,EAAG,CACpB,IAAI9L,KAAO,EACX,KAAK+L,CAAAA,KAAL,CAAW,QAAS,CAAClM,IAAD,CAAO,CACzB,GAAI,CAACA,IAAKiB,CAAAA,MAAV,EAAkB,EAAGd,KAAKmE,CAAAA,IAAL,CAAUtE,IAAKG,CAAAA,IAAf,CAAH,OAAgCH,IAAhC,CAAuCA,IAAKuB,CAAAA,IAA5C,CAAlB,CADyB,CAA3B,CAGA,OAAOpB,KALa,CA+QtBgL,UAAUgB,CAAAA,MAAV,CAvQAC,QAAqB,CAACjJ,CAAD,CAAI,CACvB,MAAOD,UAAUjC,CAAAA,MAAV,CAAmB,IAAK0K,CAAAA,KAAL,CAAW,CAACxI,CAAA,CAAE,CAAF,CAAA,CAAK,CAAL,CAAZ,CAAqB,CAACA,CAAA,CAAE,CAAF,CAAA,CAAK,CAAL,CAAtB,CAA+BwI,CAAAA,KAA/B,CAAqC,CAACxI,CAAA,CAAE,CAAF,CAAA,CAAK,CAAL,CAAtC,CAA+C,CAACA,CAAA,CAAE,CAAF,CAAA,CAAK,CAAL,CAAhD,CAAnB,CAA8ErD,KAAA,CAAM,IAAKO,CAAAA,GAAX,CAAA;AAAkB6B,IAAAA,EAAlB,CAA8B,CAAC,CAAC,IAAK7B,CAAAA,GAAN,CAAW,IAAKE,CAAAA,GAAhB,CAAD,CAAuB,CAAC,IAAKE,CAAAA,GAAN,CAAW,IAAKE,CAAAA,GAAhB,CAAvB,CAD5F,CAwQzBwK,UAAUxI,CAAAA,IAAV,CA5PA0J,QAAmB,CAAC1M,CAAD,CAAIC,CAAJ,CAAOsI,MAAP,CAAe,CAAA,IAE5B9H,GAAK,IAAKC,CAAAA,GAFkB,CAG5BC,GAAK,IAAKC,CAAAA,GAHkB,CAI5BC,EAJ4B,CAK5BE,EAL4B,CAM5B4L,EAN4B,CAO5BC,EAP4B,CAQ5BC,GAAK,IAAK/L,CAAAA,GARkB,CAS5BgM,GAAK,IAAK9L,CAAAA,GATkB,CAU5B+L,MAAQ,EAVoB,CAW5B1M,KAAO,IAAKC,CAAAA,KAXgB,CAY5B0M,CAEA3M,KAAJ,EAAU0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS1B,IAAT,CAAeI,EAAf,CAAmBE,EAAnB,CAAuBkM,EAAvB,CAA2BC,EAA3B,CAAX,CACI,KAAd,EAAIvE,MAAJ,CAAoBA,MAApB,CAA6BrC,QAA7B,EACEzF,EAEA,CAFKT,CAEL,CAFSuI,MAET,CAFiB5H,EAEjB,CAFsBV,CAEtB,CAF0BsI,MAE1B,CADAsE,EACA,CADK7M,CACL,CADSuI,MACT,CADiBuE,EACjB,CADsB7M,CACtB,CAD0BsI,MAC1B,CAAAA,MAAA,EAAUA,MAHZ,CAMA,KAAA,CAAOyE,CAAP,CAAWD,KAAMjB,CAAAA,GAAN,EAAX,CAAA,CAEE,GAAI,EAAA,EAAEzL,IAAF,CAAS2M,CAAE3M,CAAAA,IAAX,CAAA,GAAqBQ,EAArB,CAA0BmM,CAAEvM,CAAAA,EAA5B,EAAkCoM,EAAlC,GAAyC9L,EAAzC,CAA8CiM,CAAErM,CAAAA,EAAhD,EAAsDmM,EAAtD,GAA6DH,EAA7D,CAAkEK,CAAEnM,CAAAA,EAApE,EAA0EJ,EAA1E,GAAiFmM,EAAjF,CAAsFI,CAAEjM,CAAAA,EAAxF,EAA8FJ,EAA9F,CAAJ,CAEA,GAAIN,IAAKiB,CAAAA,MAAT,CAAiB,CACXL,CAAAA,EAAMJ,EAANI,CAAW0L,EAAX1L,EAAiB,CAArB,KACIC,IAAMH,EAANG,CAAW0L,EAAX1L,EAAiB,CACrB6L,MAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS1B,IAAA,CAAK,CAAL,CAAT,CAAkBY,CAAlB,CAAsBC,EAAtB,CAA0ByL,EAA1B,CAA8BC,EAA9B,CAAX,CAA8C,IAAI7K,IAAJ,CAAS1B,IAAA,CAAK,CAAL,CAAT;AAAkBQ,EAAlB,CAAsBK,EAAtB,CAA0BD,CAA1B,CAA8B2L,EAA9B,CAA9C,CAAiF,IAAI7K,IAAJ,CAAS1B,IAAA,CAAK,CAAL,CAAT,CAAkBY,CAAlB,CAAsBF,EAAtB,CAA0B4L,EAA1B,CAA8BzL,EAA9B,CAAjF,CAAoH,IAAIa,IAAJ,CAAS1B,IAAA,CAAK,CAAL,CAAT,CAAkBQ,EAAlB,CAAsBE,EAAtB,CAA0BE,CAA1B,CAA8BC,EAA9B,CAApH,CAEA,IAAIG,IAAJ,EAASpB,CAAT,EAAciB,EAAd,GAAqB,CAArB,CAAyBlB,CAAzB,EAA8BiB,CAA9B,CACE+L,CAEA,CAFID,KAAA,CAAMA,KAAMzL,CAAAA,MAAZ,CAAqB,CAArB,CAEJ,CADAyL,KAAA,CAAMA,KAAMzL,CAAAA,MAAZ,CAAqB,CAArB,CACA,CAD0ByL,KAAA,CAAMA,KAAMzL,CAAAA,MAAZ,CAAqB,CAArB,CAAyBD,IAAzB,CAC1B,CAAA0L,KAAA,CAAMA,KAAMzL,CAAAA,MAAZ,CAAqB,CAArB,CAAyBD,IAAzB,CAAA,CAA8B2L,CARjB,CAAjB,IAgBE,IAJI1D,CAIA,CAJKtJ,CAIL,CAJS,CAAC,IAAKwB,CAAAA,EAAGC,CAAAA,IAAR,CAAa,IAAb,CAAmBpB,IAAKG,CAAAA,IAAxB,CAIV,CAHA+I,EAGA,CAHKtJ,CAGL,CAHS,CAAC,IAAK0B,CAAAA,EAAGF,CAAAA,IAAR,CAAa,IAAb,CAAmBpB,IAAKG,CAAAA,IAAxB,CAGV,CAFAgJ,CAEA,CAFKF,CAEL,CAFUA,CAEV,CAFeC,EAEf,CAFoBA,EAEpB,CAAAC,CAAA,CAAKjB,MAAT,CAAiB,CACXrI,IAAAA,KAAIuI,IAAKC,CAAAA,IAAL,CAAUH,MAAV,CAAmBiB,CAAnB,CACR/I,GAAA,CAAKT,CAAL,CAASE,IAAGS,GAAA,CAAKV,CAAL,CAASC,IACrB2M,GAAA,CAAK7M,CAAL,CAASE,IAAG4M,GAAA,CAAK7M,CAAL,CAASC,IACrBM,KAAA,CAAOH,IAAKG,CAAAA,IAJG,CASrB,MAAOA,KAlDyB,CA6PlCgL,UAAUyB,CAAAA,MAAV,CAxMAC,QAAqB,CAAChN,CAAD,CAAI,CACvB,GAAIC,KAAA,CAAMH,CAAN,CAAU,CAAC,IAAKwB,CAAAA,EAAGC,CAAAA,IAAR,CAAa,IAAb,CAAmBvB,CAAnB,CAAX,CAAJ,EAAyCC,KAAA,CAAMF,CAAN,CAAU,CAAC,IAAK0B,CAAAA,EAAGF,CAAAA,IAAR,CAAa,IAAb,CAAmBvB,CAAnB,CAAX,CAAzC,CAA4E,MAAO,KAD5D,KAGnBE,MAHmB;AAInBC,KAAO,IAAKC,CAAAA,KAJO,CAMnB6M,QANmB,CAQnB1M,GAAK,IAAKC,CAAAA,GARS,CASnBC,GAAK,IAAKC,CAAAA,GATS,CAUnBC,GAAK,IAAKC,CAAAA,GAVS,CAWnBC,GAAK,IAAKC,CAAAA,GAXS,CAYnBhB,CAZmB,CAanBC,CAbmB,CAcnBgB,EAdmB,CAenBC,EAfmB,CAgBnBC,KAhBmB,CAiBnBC,MAjBmB,CAkBnBC,CAGJ,IAAI,CAAChB,IAAL,CAAW,MAAO,KAGlB,IAAIA,IAAKiB,CAAAA,MAAT,CAAiB,IAAA,CAAA,CAAA,CAAa,CAC5B,CAAIH,KAAJ,CAAYnB,CAAZ,GAAkBiB,EAAlB,EAAwBR,EAAxB,CAA6BI,EAA7B,EAAmC,CAAnC,GAAuCJ,EAAvC,CAA4CQ,EAA5C,CAAoDJ,EAApD,CAAyDI,EACzD,EAAIG,MAAJ,CAAanB,CAAb,GAAmBiB,EAAnB,EAAyBP,EAAzB,CAA8BI,EAA9B,EAAoC,CAApC,GAAwCJ,EAAxC,CAA6CO,EAA7C,CAAqDH,EAArD,CAA0DG,EAC1D,IAAI,EAAEd,MAAA,CAASC,IAAT,CAAeA,IAAf,CAAsBA,IAAA,CAAKgB,CAAL,CAASD,MAAT,EAAmB,CAAnB,CAAuBD,KAAvB,CAAxB,CAAJ,CAA4D,MAAO,KACnE,IAAI,CAACd,IAAKiB,CAAAA,MAAV,CAAkB,KAClB,IAAIlB,MAAA,CAAOiB,CAAP,CAAW,CAAX,CAAe,CAAf,CAAJ,EAAyBjB,MAAA,CAAOiB,CAAP,CAAW,CAAX,CAAe,CAAf,CAAzB,EAA8CjB,MAAA,CAAOiB,CAAP,CAAW,CAAX,CAAe,CAAf,CAA9C,CAAiE,CAAA,IAAA+L,SAAWhN,MAAQ,KAAA0B,EAAIT,CAAvB,CALrC,CAQ9B,IAAA,CAAOhB,IAAKG,CAAAA,IAAZ,GAAqBN,CAArB,CAAA,CAAwB,GAAI,EAAEiN,QAAA,CAAW9M,IAAX,CAAiBA,IAAjB,CAAwBA,IAAKuB,CAAAA,IAA/B,CAAJ,CAA0C,MAAO,KAEzE,EAAIA,CAAJ,CAAWvB,IAAKuB,CAAAA,IAAhB,GAAsB,OAAOvB,IAAKuB,CAAAA,IAElC,IAAIuL,QAAJ,CAAc,MAAOvL,EAAA,CAAOuL,QAASvL,CAAAA,IAAhB;AAAuBA,CAAvB,CAA8B,OAAOuL,QAASvL,CAAAA,IAA9C,CAAoD,IAEzE,IAAI,CAACxB,MAAL,CAAa,MAAO,KAAKE,CAAAA,KAAL,CAAasB,CAAb,CAAmB,IAEvCA,EAAA,CAAOxB,MAAA,CAAOiB,CAAP,CAAP,CAAmBO,CAAnB,CAA0B,OAAOxB,MAAA,CAAOiB,CAAP,CAEjC,EAAKhB,IAAL,CAAYD,MAAA,CAAO,CAAP,CAAZ,EAAyBA,MAAA,CAAO,CAAP,CAAzB,EAAsCA,MAAA,CAAO,CAAP,CAAtC,EAAmDA,MAAA,CAAO,CAAP,CAAnD,GAAiEC,IAAjE,IAA2ED,MAAA,CAAO,CAAP,CAA3E,EAAwFA,MAAA,CAAO,CAAP,CAAxF,EAAqGA,MAAA,CAAO,CAAP,CAArG,EAAkHA,MAAA,CAAO,CAAP,CAAlH,GAAgI,CAACC,IAAKiB,CAAAA,MAAtI,GACM8L,QAAJ,CAAcA,QAAA,CAAStL,CAAT,CAAd,CAA4BzB,IAA5B,CAAsC,IAAKC,CAAAA,KAA3C,CAAmDD,IADrD,CAIA,OAAO,KA9CgB,CAyMzBmL,UAAU6B,CAAAA,SAAV,CAzJAA,QAAkB,CAAC7M,IAAD,CAAO,CACvB,IADuB,IACda,EAAI,CADU,CACPiC,EAAI9C,IAAKc,CAAAA,MAAzB,CAAiCD,CAAjC,CAAqCiC,CAArC,CAAwC,EAAEjC,CAA1C,CAA6C,IAAK4L,CAAAA,MAAL,CAAYzM,IAAA,CAAKa,CAAL,CAAZ,CAE7C,OAAO,KAHgB,CA0JzBmK,UAAU8B,CAAAA,IAAV,CApJAC,QAAmB,EAAG,CACpB,MAAO,KAAKjN,CAAAA,KADQ,CAqJtBkL,UAAUgC,CAAAA,IAAV,CAjJAC,QAAmB,EAAG,CACpB,IAAID,KAAO,CACX,KAAKjB,CAAAA,KAAL,CAAW,QAAS,CAAClM,IAAD,CAAO,CACzB,GAAI,CAACA,IAAKiB,CAAAA,MAAV,EAAkB,EAAG,EAAEkM,IAAL;MAAkBnN,IAAlB,CAAyBA,IAAKuB,CAAAA,IAA9B,CAAlB,CADyB,CAA3B,CAGA,OAAO4L,KALa,CAkJtBhC,UAAUe,CAAAA,KAAV,CA1IAmB,QAAoB,CAAClJ,QAAD,CAAW,CAAA,IACzBuI,MAAQ,EADiB,CAEzBC,CAFyB,CAGzB3M,KAAO,IAAKC,CAAAA,KAHa,CAIzBqL,KAJyB,CAKzBlL,EALyB,CAMzBE,EANyB,CAOzBE,EAPyB,CAQzBE,EAGJ,KAFIV,IAEJ,EAFU0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS1B,IAAT,CAAe,IAAKK,CAAAA,GAApB,CAAyB,IAAKE,CAAAA,GAA9B,CAAmC,IAAKE,CAAAA,GAAxC,CAA6C,IAAKE,CAAAA,GAAlD,CAAX,CAEV,CAAOgM,CAAP,CAAWD,KAAMjB,CAAAA,GAAN,EAAX,CAAA,CACE,GAAI,CAACtH,QAAA,CAASnE,IAAT,CAAgB2M,CAAE3M,CAAAA,IAAlB,CAAwBI,EAAxB,CAA6BuM,CAAEvM,CAAAA,EAA/B,CAAmCE,EAAnC,CAAwCqM,CAAErM,CAAAA,EAA1C,CAA8CE,EAA9C,CAAmDmM,CAAEnM,CAAAA,EAArD,CAAyDE,EAAzD,CAA8DiM,CAAEjM,CAAAA,EAAhE,CAAL,EAA4EV,IAAKiB,CAAAA,MAAjF,CAAyF,CACnFL,CAAAA,EAAMR,EAANQ,CAAWJ,EAAXI,EAAiB,CAArB,KACIC,IAAMP,EAANO,CAAWH,EAAXG,EAAiB,CACrB,EAAIyK,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT,CAAgB1K,CAAhB,CAAoBC,EAApB,CAAwBL,EAAxB,CAA4BE,EAA5B,CAAX,CACrB,EAAI4K,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT,CAAgBlL,EAAhB,CAAoBS,EAApB,CAAwBD,CAAxB,CAA4BF,EAA5B,CAAX,CACrB,EAAI4K,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT,CAAgB1K,CAAhB,CAAoBN,EAApB,CAAwBE,EAAxB,CAA4BK,EAA5B,CAAX,CACrB,EAAIyK,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT;AAAgBlL,EAAhB,CAAoBE,EAApB,CAAwBM,CAAxB,CAA4BC,EAA5B,CAAX,CANkE,CAU3F,MAAO,KAtBsB,CA2I/BsK,UAAUmC,CAAAA,UAAV,CAlHAC,QAAyB,CAACpJ,QAAD,CAAW,CAAA,IAC9BuI,MAAQ,EADsB,CAE9BnL,KAAO,EAFuB,CAG9BoL,CAGJ,KAFI,IAAK1M,CAAAA,KAET,EAFgByM,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS,IAAKzB,CAAAA,KAAd,CAAqB,IAAKI,CAAAA,GAA1B,CAA+B,IAAKE,CAAAA,GAApC,CAAyC,IAAKE,CAAAA,GAA9C,CAAmD,IAAKE,CAAAA,GAAxD,CAAX,CAEhB,CAAOgM,CAAP,CAAWD,KAAMjB,CAAAA,GAAN,EAAX,CAAA,CAAwB,CACtB,IAAIzL,KAAO2M,CAAE3M,CAAAA,IAEb,IAAIA,IAAKiB,CAAAA,MAAT,CAAiB,CAAA,IACXqK,KADW,CAEXlL,GAAKuM,CAAEvM,CAAAA,EAFI,CAGXE,GAAKqM,CAAErM,CAAAA,EAHI,CAIXE,GAAKmM,CAAEnM,CAAAA,EAJI,CAKXE,GAAKiM,CAAEjM,CAAAA,EALI,CAMXE,IAAMR,EAANQ,CAAWJ,EAAXI,EAAiB,CANN,CAOXC,IAAMP,EAANO,CAAWH,EAAXG,EAAiB,CACrB,EAAIyK,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT,CAAgBlL,EAAhB,CAAoBE,EAApB,CAAwBM,EAAxB,CAA4BC,EAA5B,CAAX,CACrB,EAAIyK,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT,CAAgB1K,EAAhB,CAAoBN,EAApB,CAAwBE,EAAxB,CAA4BK,EAA5B,CAAX,CACrB,EAAIyK,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT,CAAgBlL,EAAhB,CAAoBS,EAApB,CAAwBD,EAAxB,CAA4BF,EAA5B,CAAX,CACrB,EAAI4K,KAAJ,CAAYtL,IAAA,CAAK,CAAL,CAAZ,GAAqB0M,KAAMpI,CAAAA,IAAN,CAAW,IAAI5C,IAAJ,CAAS4J,KAAT;AAAgB1K,EAAhB,CAAoBC,EAApB,CAAwBL,EAAxB,CAA4BE,EAA5B,CAAX,CAXN,CAcjBa,IAAK+C,CAAAA,IAAL,CAAUqI,CAAV,CAjBsB,CAoBxB,IAAA,CAAOA,CAAP,CAAWpL,IAAKkK,CAAAA,GAAL,EAAX,CAAA,CACEtH,QAAA,CAASwI,CAAE3M,CAAAA,IAAX,CAAiB2M,CAAEvM,CAAAA,EAAnB,CAAuBuM,CAAErM,CAAAA,EAAzB,CAA6BqM,CAAEnM,CAAAA,EAA/B,CAAmCmM,CAAEjM,CAAAA,EAArC,CAGF,OAAO,KA9B2B,CAmHpCyK,UAAUxL,CAAAA,CAAV,CA/EA6N,QAAgB,CAACrK,CAAD,CAAI,CAClB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB,IAAKE,CAAAA,EAAL,CAAUgC,CAAV,CAAa,IAAjC,EAAyC,IAAKhC,CAAAA,EADnC,CAgFpBgK,UAAUvL,CAAAA,CAAV,CAzEA6N,QAAgB,CAACtK,CAAD,CAAI,CAClB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB,IAAKK,CAAAA,EAAL,CAAU6B,CAAV,CAAa,IAAjC,EAAyC,IAAK7B,CAAAA,EADnC,CAkTpB,KAAI8C,KAAO,CACTG,MAAO,EAAAA,EAAM,EADJ,CA8BXjB,SAAS8H,CAAAA,SAAT,CAAqBpI,QAASoI,CAAAA,SAA9B,CAA0C,CACxCsC,YAAapK,QAD2B,CAExC+F,GAAIA,QAAS,CAACsE,QAAD,CAAWxJ,QAAX,CAAqB,CAAA,IAC5BhB,EAAI,IAAKA,CAAAA,CADmB,CAE5ByK,EAAIrK,cAAA,CAAeoK,QAAf,CAA0B,EAA1B,CAA8BxK,CAA9B,CAFwB,CAG5BC,CAH4B,CAI5BpC,EAAI,CAAC,CAJuB,CAK5BiC,EAAI2K,CAAE3M,CAAAA,MAEV,IAAuB,CAAvB,CAAIiC,SAAUjC,CAAAA,MAAd,CACE,IAAA,CAAO,EAAED,CAAT,CAAaiC,CAAb,CAAA,CAAgB,CAAI,IAAA,eAAA,IAAC,eAAD,CAAC,CAAD,CAAC,CAAA,QAAA;AAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAD,CAAA,CAoCD,CAAA,CAAA,CApCkC,eAAA,CAAA,CAAA,CAAA,CAAA,CAqCzD,KADuB,IACdjC,WAAI,CADU,CACPiC,WAAIgB,eAAKhD,CAAAA,MAAzB,CAAoCD,UAApC,CAAwCiC,UAAxC,CAA2C,EAAEjC,UAA7C,CACE,GAAkB6C,CAAb+C,CAAa/C,CAATI,eAAA,CAAKjD,UAAL,CAAS6C,EAAAA,IAAlB,GAtCuD,QAAAA,CAAAA,IAsCvD,CAAiC,CAC/B,CAAA,CAAO+C,CAAErC,CAAAA,KAAT,OAAA,CAD+B,CAFZ,CAAA,CAAA,IAAA,EAAA,CApCkC,eAAA,CAAA,CAAjC,CAAJ,GAAI,eAAJ,CAAoE,MAAOnB,EAA3E,CADlB,IAAA,CAQA,GAAgB,IAAhB,EAAIe,QAAJ,EAA4C,UAA5C,GAAwB,MAAOA,SAA/B,CAAwD,KAAUpB,MAAJ,CAAU,oBAAV,CAAiCoB,QAAjC,CAAN,CAExD,IAAA,CAAO,EAAEnD,CAAT,CAAaiC,CAAb,CAAA,CACE,GAAIG,CAAJ,CAA0Ba,CAAjB0J,QAAiB1J,CAAN2J,CAAA,CAAE5M,CAAF,CAAMiD,EAAAA,IAA1B,CAAgCd,CAAA,CAAEC,CAAF,CAAA,CAAOc,GAAA,CAAIf,CAAA,CAAEC,CAAF,CAAJ,CAAUuK,QAAS9J,CAAAA,IAAnB,CAAyBM,QAAzB,CAAvC,KAA+E,IAAgB,IAAhB,EAAIA,QAAJ,CAAsB,IAAKf,CAAL,GAAUD,EAAV,CAAaA,CAAA,CAAEC,CAAF,CAAA,CAAOc,GAAA,CAAIf,CAAA,CAAEC,CAAF,CAAJ,CAAUuK,QAAS9J,CAAAA,IAAnB,CAAyB,IAAzB,CAG3H,OAAO,KAdP,CAPgC,CAFM;AAyBxCzB,KAAMA,QAAS,EAAG,CAAA,IACZA,KAAO,EADK,CAEZe,EAAI,IAAKA,CAAAA,CAFG,CAIPC,CAAT,KAASA,CAAT,GAAcD,EAAd,CAAiBf,IAAA,CAAKgB,CAAL,CAAA,CAAUD,CAAA,CAAEC,CAAF,CAAKW,CAAAA,KAAL,EAE3B,OAAO,KAAIT,QAAJ,CAAalB,IAAb,CANS,CAzBsB,CAiCxChB,KAAMA,QAAS,CAAC6C,IAAD,CAAO4J,IAAP,CAAa,CAC1B,GAAiC,CAAjC,EAAK5K,CAAL,CAASC,SAAUjC,CAAAA,MAAnB,CAA4B,CAA5B,EAAoC,IAAA,IAAS6M,KAAWtM,KAAJ,CAAUyB,CAAV,CAAhB,CAA8BjC,EAAI,CAAlC,CAAqCiC,CAArC,CAAwCG,CAAxC,CAA2CpC,CAA3C,CAA+CiC,CAA/C,CAAkD,EAAEjC,CAApD,CAAuD8M,IAAA,CAAK9M,CAAL,CAAA,CAAUkC,SAAA,CAAUlC,CAAV,CAAc,CAAd,CACrG,IAAI,CAAC,IAAKmC,CAAAA,CAAEa,CAAAA,cAAP,CAAsBC,IAAtB,CAAL,CAAkC,KAAUlB,MAAJ,CAAU,gBAAV,CAA6BkB,IAA7B,CAAN,CAE7Bb,CAAA,CAAI,IAAKD,CAAAA,CAAL,CAAOc,IAAP,CAAcjD,EAAA,CAAI,CAA3B,KAA8BiC,CAA9B,CAAkCG,CAAEnC,CAAAA,MAApC,CAA4CD,CAA5C,CAAgDiC,CAAhD,CAAmD,EAAEjC,CAArD,CAAwDoC,CAAA,CAAEpC,CAAF,CAAKuD,CAAAA,KAAMwJ,CAAAA,KAAX,CAAiBF,IAAjB,CAAuBC,IAAvB,CAJ9B,CAjCY,CAuCxCC,MAAOA,QAAS,CAAC9J,IAAD,CAAO4J,IAAP,CAAaC,IAAb,CAAmB,CACjC,GAAI,CAAC,IAAK3K,CAAAA,CAAEa,CAAAA,cAAP,CAAsBC,IAAtB,CAAL,CAAkC,KAAUlB,MAAJ,CAAU,gBAAV,CAA6BkB,IAA7B,CAAN,CAEzBb,IAAAA,CAAI,IAAKD,CAAAA,CAAL,CAAOc,IAAP,CAAb,KAHiC,IAGNjD,EAAI,CAHE,CAGCiC,EAAIG,IAAEnC,CAAAA,MAAxC,CAAgDD,CAAhD,CAAoDiC,CAApD,CAAuD,EAAEjC,CAAzD,CAA4DoC,IAAA,CAAEpC,CAAF,CAAKuD,CAAAA,KAAMwJ,CAAAA,KAAX,CAAiBF,IAAjB;AAAuBC,IAAvB,CAH3B,CAvCK,CAntBS,KAwxB/CvI,MAAQ,CAxxBuC,CA0xBnDC,QAAU,CA1xByC,CA4xBnDc,SAAW,CA5xBwC,CAgyBnDZ,QAhyBmD,CAiyB/CM,QAjyB+C,CAkyB/Cb,UAAY,CAlyBmC,CAmyB/CV,SAAW,CAnyBoC,CAoyB/Ca,UAAY,CApyBmC,CAqyB/CF,MAA+B,QAAvB,GAAA,MAAO4I,YAAP,EAAmCA,WAAY3I,CAAAA,GAA/C,CAAqD2I,WAArD,CAAmEC,IAryB5B,CAsyB/CxI,SAA6B,QAAlB,GAAA,MAAOyI,OAAP,EAA8BA,MAAOC,CAAAA,qBAArC,CAA6DD,MAAOC,CAAAA,qBAAsBC,CAAAA,IAA7B,CAAkCF,MAAlC,CAA7D,CAAyG,QAAS,CAAC5D,CAAD,CAAI,CACnIjE,UAAA,CAAWiE,CAAX,CAAc,EAAd,CADmI,CAcrI5F,MAAM0G,CAAAA,SAAN,CAAkBtG,KAAMsG,CAAAA,SAAxB,CAAoC,CAClCsC,YAAahJ,KADqB,CAElCO,QAASA,QAAS,CAACd,QAAD,CAAWY,KAAX,CAAkBC,IAAlB,CAAwB,CACxC,GAAwB,UAAxB,GAAI,MAAOb,SAAX,CAAoC,KAAM,KAAIkK,SAAJ,CAAc,4BAAd,CAAN,CACpCrJ,IAAA,EAAgB,IAAR,EAAAA,IAAA,CAdHP,QAcG,GAdUgB,QAAA,CAASjB,QAAT,CAAA;AAAoBC,QAApB,CAA+BW,KAAMC,CAAAA,GAAN,EAA/B,CAA6CC,SAcvD,EAAuB,CAACN,IAAhC,GAAkD,IAAT,EAAAD,KAAA,CAAgB,CAAhB,CAAoB,CAACA,KAA9D,CAEK,KAAKF,CAAAA,KAAV,EAAmBmB,QAAnB,GAAgC,IAAhC,GACMA,QAAJ,CAAcA,QAASnB,CAAAA,KAAvB,CAA+B,IAA/B,CAAyCa,QAAzC,CAAoD,IACpD,CAAAM,QAAA,CAAW,IAFb,CAKA,KAAKrB,CAAAA,KAAL,CAAaR,QACb,KAAKS,CAAAA,KAAL,CAAaI,IACbiB,MAAA,EAXwC,CAFR,CAelCqB,KAAMA,QAAS,EAAG,CACZ,IAAK3C,CAAAA,KAAT,GACE,IAAKA,CAAAA,KAEL,CAFa,IAEb,CADA,IAAKC,CAAAA,KACL,CADaiB,QACb,CAAAI,KAAA,EAHF,CADgB,CAfgB,CAkHpC,KACIsC,aAAeH,IAAKkG,CAAAA,EAApB/F,EAA0B,CAA1BA,CAA8BH,IAAKC,CAAAA,IAAL,CAAU,CAAV,CAA9BE,CA0UJ,OAAMqC,SAAW,CACf2D,OAhvCFC,QAAqB,CAAC7O,CAAD,CAAIC,CAAJ,CAAO,CAM1BiI,QAASA,MAAK,EAAG,CAAA,IACX7G,CADW,CAEXiC,EAAInB,KAAMb,CAAAA,MAFC,CAIXwN,GAAK,CAJM,CAKXC,GAAK,CAET,KAAK1N,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CAAwB,CACtB,IAAAhB,KAAO8B,KAAA,CAAMd,CAAN,CAAUyN,GAAA,EAAMzO,IAAKL,CAAAA,CAAG+O,GAAA,EAAM1O,IAAKJ,CAAAA,CADpB,CAInB6O,EAAA,EAAMA,EAAN,CAAWxL,CAAX,CAAetD,CAAf,EAAoBgP,QAAUD,GAAA,EAAMA,EAAN,CAAWzL,CAAX,CAAerD,CAAf,EAAoB+O,QAAvD,KAAiE3N,CAAjE;AAAqE,CAArE,CAAwEA,CAAxE,CAA4EiC,CAA5E,CAA+E,EAAEjC,CAAjF,CACEhB,IAA+B,CAAxB8B,KAAA,CAAMd,CAAN,CAAwB,CAAdhB,IAAKL,CAAAA,CAAS,EAAJ8O,EAAI,CAAAzO,IAAKJ,CAAAA,CAAL,EAAU8O,EAZ5B,CANS,IACtB5M,KADsB,CAEtB6M,SAAW,CACN,KAAT,EAAIhP,CAAJ,GAAeA,CAAf,CAAmB,CAAnB,CACS,KAAT,EAAIC,CAAJ,GAAeA,CAAf,CAAmB,CAAnB,CAkBAiI,MAAMc,CAAAA,UAAN,CAAmBiG,QAAS,CAACzL,CAAD,CAAI,CAC9BrB,KAAA,CAAQqB,CADsB,CAIhC0E,MAAMlI,CAAAA,CAAN,CAAUkP,QAAS,CAAC1L,CAAD,CAAI,CACrB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBtB,CAAA,CAAI,CAACwD,CAAL,CAAQ0E,KAA5B,EAAqClI,CADvB,CAIvBkI,MAAMjI,CAAAA,CAAN,CAAUkP,QAAS,CAAC3L,CAAD,CAAI,CACrB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBrB,CAAA,CAAI,CAACuD,CAAL,CAAQ0E,KAA5B,EAAqCjI,CADvB,CAIvBiI,MAAM8G,CAAAA,QAAN,CAAiBI,QAAS,CAAC5L,CAAD,CAAI,CAC5B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB0N,QAAA,CAAW,CAACxL,CAAZ,CAAe0E,KAAnC,EAA4C8G,QADvB,CAI9B,OAAO9G,MAtCmB,CA+uCX,CAEfmH,QAnxBFC,QAAsB,CAAC/G,MAAD,CAAS,CAQ7BL,QAASA,MAAK,EAAG,CAsBfkG,QAASA,MAAK,CAACmB,IAAD,CAAO9O,EAAP,CAAWE,EAAX,CAAeE,EAAf,CAAmBE,EAAnB,CAAuB,CAAA,IAC/BP,KAAO+O,IAAK/O,CAAAA,IACZgP,KAAAA,CAAKD,IAAKE,CAAAA,CADd,KAEIA,EAAIC,EAAJD,CAASD,IAEb,IAAIhP,IAAJ,CACMA,IAAKuC,CAAAA,KAAT,CAAiB1C,IAAK0C,CAAAA,KAAtB;CACM/C,EAIJ,CAJQ2P,EAIR,CAJanP,IAAKR,CAAAA,CAIlB,CAJsBQ,IAAKoC,CAAAA,EAI3B,CAHI3C,EAGJ,CAHQ2P,EAGR,CAHapP,IAAKP,CAAAA,CAGlB,CAHsBO,IAAKsC,CAAAA,EAG3B,CAFI+M,EAEJ,CAFQ7P,EAER,CAFYA,EAEZ,CAFgBC,EAEhB,CAFoBA,EAEpB,CAAI4P,EAAJ,CAAQJ,CAAR,CAAYA,CAAZ,GACY,CAMV,GANIzP,EAMJ,GANaA,EAAoB,CArDjB,IAqDiB,EAATiJ,MArD1B,EAqDmC,CArDxB,EAqDwB,EAAA4G,EAAA,EAAK7P,EAAL,CAASA,EAM1C,EALU,CAKV,GALIC,EAKJ,GALaA,EAAoB,CAtDjB,IAsDiB,EAATgJ,MAtD1B,EAsDmC,CAtDxB,EAsDwB,EAAA4G,EAAA,EAAK5P,EAAL,CAASA,EAK1C,EAJA4P,EAIA,EAJKJ,CAIL,EAJUI,EAIV,CAJcpH,IAAKC,CAAAA,IAAL,CAAUmH,EAAV,CAId,GAJ+BA,EAI/B,CAJmCb,QAInC,CAHA3O,IAAKuC,CAAAA,EAGL,GAHY5C,EAGZ,EAHiB6P,EAGjB,GAHuBJ,CAGvB,EAH4BD,IAG5B,EAHkCA,IAGlC,GAHyCM,GAGzC,CAH+CN,IAG/C,GAFAnP,IAAKyC,CAAAA,EAEL,GAFY7C,EAEZ,EAFiB4P,EAEjB,EAFsBJ,CAEtB,CADAjP,IAAKoC,CAAAA,EACL,EADW5C,EACX,EADgByP,CAChB,CADoB,CACpB,CADwBA,CACxB,EAAAjP,IAAKsC,CAAAA,EAAL,EAAW7C,EAAX,CAAewP,CAPjB,CALF,CADF,KAoBA,OAAOhP,GAAP,CAAYkP,EAAZ,CAAiBF,CAAjB,EAAsB5O,EAAtB,CAA2B8O,EAA3B,CAAgCF,CAAhC,EAAqC9O,EAArC,CAA0CiP,EAA1C,CAA+CH,CAA/C,EAAoD1O,EAApD,CAAyD6O,EAAzD,CAA8DH,CAzB3B,CAZrC,IAVe,IACXpO,CADW,CAEXiC,EAAInB,KAAMb,CAAAA,MAFC,CAGXvB,IAHW,CAIXM,IAJW,CAKXsP,EALW,CAMXC,EANW,CAOXF,EAPW,CAQXI,GARW,CAUNjI,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,UAApB,CAAgC,EAAEC,CAAlC,CAGE,IAFA9H,IAEK,CAFEmC,QAAA,CAASC,KAAT,CAAgBQ,GAAhB,CAAqBE,GAArB,CAA0B8K,CAAAA,UAA1B,CAAqCoC,OAArC,CAEF,CAAA1O,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CACEhB,IAIA,CAJO8B,KAAA,CAAMd,CAAN,CAIP,CAHAqO,EAGA,CAHKM,KAAA,CAAM3P,IAAK0C,CAAAA,KAAX,CAGL;AAHwB+M,GAGxB,CAH8BJ,EAG9B,CAHmCA,EAGnC,CAFAC,EAEA,CAFKtP,IAAKL,CAAAA,CAEV,CAFcK,IAAKuC,CAAAA,EAEnB,CADAgN,EACA,CADKvP,IAAKJ,CAAAA,CACV,CADcI,IAAKyC,CAAAA,EACnB,CAAA/C,IAAKwM,CAAAA,KAAL,CAAW6B,KAAX,CAlBW,CAmDjB2B,QAASA,QAAO,CAACR,IAAD,CAAO,CACrB,GAAIA,IAAK/O,CAAAA,IAAT,CAAe,MAAO+O,KAAKE,CAAAA,CAAZ,CAAgBO,KAAA,CAAMT,IAAK/O,CAAAA,IAAKuC,CAAAA,KAAhB,CAE/B,KAAK,IAAI1B,EAAIkO,IAAKE,CAAAA,CAATpO,CAAa,CAAtB,CAA6B,CAA7B,CAAyBA,CAAzB,CAAgC,EAAEA,CAAlC,CACMkO,IAAA,CAAKlO,CAAL,CAAJ,EAAekO,IAAA,CAAKlO,CAAL,CAAQoO,CAAAA,CAAvB,CAA2BF,IAAKE,CAAAA,CAAhC,GACEF,IAAKE,CAAAA,CADP,CACWF,IAAA,CAAKlO,CAAL,CAAQoO,CAAAA,CADnB,CAJmB,CAUvBzG,QAASA,WAAU,EAAG,CACpB,GAAK7G,KAAL,CAAA,CADoB,IAEhBd,CAFgB,CAGhBiC,EAAInB,KAAMb,CAAAA,MAEd0O,MAAA,CAAYnO,KAAJ,CAAUyB,CAAV,CAER,KAAKjC,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CAAwB,CAAA,IAAAhB,KAAO8B,KAAA,CAAMd,CAAN,CAAU2O,MAAA,CAAM3P,IAAK0C,CAAAA,KAAX,CAAA,CAAoB,CAACwF,MAAA,CAAOlI,IAAP,CAAagB,CAAb,CAAgBc,KAAhB,CAAtC,CANxB,CADoB,CArEO,IACzBA,KADyB,CAEzB6N,KAFyB,CAGzB/G,MAHyB,CAIzB+F,SAAW,CAJc,CAKzBpH,WAAa,CACK,WAAtB,GAAI,MAAOW,OAAX,GAAkCA,MAAlC,CAA2C7F,QAAA,CAAmB,IAAV,EAAA6F,MAAA,CAAiB,CAAjB,CAAqB,CAACA,MAA/B,CAA3C,CAyEAL,MAAMc,CAAAA,UAAN,CAAmBiG,QAAS,CAACgB,MAAD;AAASC,OAAT,CAAkB,CAC5C/N,KAAA,CAAQ8N,MACRhH,OAAA,CAASiH,OACTlH,WAAA,EAH4C,CAM9Cd,MAAMN,CAAAA,UAAN,CAAmBuI,QAAS,CAAC3M,CAAD,CAAI,CAC9B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBsG,UAAA,CAAa,CAACpE,CAAd,CAAiB0E,KAArC,EAA8CN,UADvB,CAIhCM,MAAM8G,CAAAA,QAAN,CAAiBI,QAAS,CAAC5L,CAAD,CAAI,CAC5B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB0N,QAAA,CAAW,CAACxL,CAAZ,CAAe0E,KAAnC,EAA4C8G,QADvB,CAI9B9G,MAAMK,CAAAA,MAAN,CAAe6H,QAAS,CAAC5M,CAAD,CAAI,CAC1B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBiH,MAAA,CAAsB,UAAb,GAAA,MAAO/E,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAvC,CAAqDwF,UAAA,EAArD,CAAmEd,KAAvF,EAAgGK,MAD7E,CAI5B,OAAOL,MAjGsB,CAixBd,CAGfmI,MA5MFC,QAAuB,EAAG,CAWxBpI,QAASA,MAAK,CAAC1E,CAAD,CAAI,CAAA,IAEZF,EAAInB,KAAMb,CAAAA,MAFE,CAGZvB,KAAOmC,QAAA,CAASC,KAAT,CAAgBnC,UAAhB,CAAmBC,UAAnB,CAAsB0N,CAAAA,UAAtB,CAAiC4C,UAAjC,CAEN/I,MAAA,CAAQhE,CAAb,KAAgBnC,CAAhB,CAAoB,CAApB,CAAuBA,CAAvB,CAA2BiC,CAA3B,CAA8B,EAAEjC,CAAhC,CAAmChB,aAAiB;AAAV8B,KAAA,CAAMd,CAAN,CAAU,CAAAtB,IAAKwM,CAAAA,KAAL,CAAW6B,KAAX,CALpC,CAQlBpF,QAASA,WAAU,EAAG,CACpB,GAAK7G,KAAL,CAAA,CADoB,IAEhBd,CAFgB,CAGhBiC,EAAInB,KAAMb,CAAAA,MAEdkP,UAAA,CAAgB3O,KAAJ,CAAUyB,CAAV,CAEZ,KAAKjC,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CAAwB,CAAA,IAAAhB,KAAO8B,KAAA,CAAMd,CAAN,CAAUmP,UAAA,CAAUnQ,IAAK0C,CAAAA,KAAf,CAAA,CAAwB,CAACiM,iBAAA,CAAS3O,IAAT,CAAegB,CAAf,CAAkBc,KAAlB,CAA1C,CANxB,CADoB,CAUtBoO,QAASA,WAAU,CAAChB,IAAD,CAAO,CAAA,IACpBP,SAAW,CADS,CAEpBhC,CAFoB,CAGpB/F,CAHoB,CAIpBwJ,OAAS,CAJW,CAKpBzQ,CALoB,CAMpBC,CANoB,CAOpBoB,CAEJ,IAAIkO,IAAKjO,CAAAA,MAAT,CAAiB,CACf,IAAKtB,CAAL,CAASC,CAAT,CAAaoB,CAAb,CAAiB,CAAjB,CAAwB,CAAxB,CAAoBA,CAApB,CAA2B,EAAEA,CAA7B,CACE,CAAK2L,CAAL,CAASuC,IAAA,CAAKlO,CAAL,CAAT,IAAsB4F,CAAtB,CAA0BwB,IAAKiI,CAAAA,GAAL,CAAS1D,CAAEpI,CAAAA,KAAX,CAA1B,IACEoK,QAAgD,EAApChC,CAAEpI,CAAAA,KAAkC,CAA3B6L,MAA2B,EAAjBxJ,CAAiB,CAAdjH,CAAc,EAATiH,CAAS,CAAL+F,CAAEhN,CAAAA,CAAG,CAAAC,CAAA,EAAKgH,CAAL,CAAS+F,CAAE/M,CAAAA,CAD7D,CAKFsP,KAAKvP,CAAAA,CAAL,CAASA,CAAT,CAAayQ,MACblB,KAAKtP,CAAAA,CAAL,CAASA,CAAT,CAAawQ,MARE,CAAjB,IAUK,CACHzD,CAAA,CAAIuC,IACJvC,EAAEhN,CAAAA,CAAF,CAAMgN,CAAExM,CAAAA,IAAKR,CAAAA,CACbgN,EAAE/M,CAAAA,CAAF,CAAM+M,CAAExM,CAAAA,IAAKP,CAAAA,CAEb,GAAG+O,SAAA,EAAYwB,SAAA,CAAUxD,CAAExM,CAAAA,IAAKuC,CAAAA,KAAjB,CAAf,OAA+CiK,CAA/C,CAAmDA,CAAEpL,CAAAA,IAArD,CALG,CAQL2N,IAAK3K,CAAAA,KAAL;AAAaoK,QA3BW,CA8B1BZ,QAASA,MAAK,CAACmB,IAAD,CAAO1O,EAAP,CAAW2C,CAAX,CAAcmJ,EAAd,CAAkB,CAC9B,GAAI,CAAC4C,IAAK3K,CAAAA,KAAV,CAAiB,MAAO,CAAA,CACpB5E,EAAAA,CAAIuP,IAAKvP,CAAAA,CAATA,CAAaK,aAAKL,CAAAA,CAFQ,KAG1BC,EAAIsP,IAAKtP,CAAAA,CAATA,CAAaI,aAAKJ,CAAAA,CAClB0Q,GAAAA,CAAIhE,EAAJgE,CAAS9P,EACTgP,GAAAA,CAAI7P,CAAJ6P,CAAQ7P,CAAR6P,CAAY5P,CAAZ4P,CAAgB5P,CAGpB,IAAI0Q,EAAJ,CAAQA,EAAR,CAAYC,MAAZ,CAAqBf,EAArB,CASE,MARIA,GAQG,CARCgB,YAQD,GAPK,CAIV,GAJI7Q,CAIJ,GAJaA,CAAoB,CAxpBb,IAwpBa,EAATiJ,MAxpBtB,EAwpB+B,CAxpBpB,EAwpBoB,EAAA4G,EAAA,EAAK7P,CAAL,CAASA,CAI1C,EAHU,CAGV,GAHIC,CAGJ,GAHaA,CAAoB,CAzpBb,IAypBa,EAATgJ,MAzpBtB,EAypB+B,CAzpBpB,EAypBoB,EAAA4G,EAAA,EAAK5P,CAAL,CAASA,CAG1C,EAFI4P,EAEJ,CAFQiB,YAER,GAFsBjB,EAEtB,CAF0BpH,IAAKC,CAAAA,IAAL,CAAUoI,YAAV,CAAyBjB,EAAzB,CAE1B,EADAxP,aAAKuC,CAAAA,EACL,EADW5C,CACX,CADeuP,IAAK3K,CAAAA,KACpB,CAD4B4C,KAC5B,CADoCqI,EACpC,CAAAxP,aAAKyC,CAAAA,EAAL,EAAW7C,CAAX,CAAesP,IAAK3K,CAAAA,KAApB,CAA4B4C,KAA5B,CAAoCqI,EAG/B,EAAA,CAAA,CAEJ,IAAI,EAAAN,IAAKjO,CAAAA,MAAL,EAAeuO,EAAf,EAAoBgB,YAApB,CAAJ,CAAA,CAGL,GAAItB,IAAK/O,CAAAA,IAAT,GAAkBH,aAAlB,EAA0BkP,IAAK3N,CAAAA,IAA/B,CACY,CAEV,GAFI5B,CAEJ,GAFaA,CAAoB,CArqBX,IAqqBW,EAATiJ,MArqBpB,EAqqB6B,CArqBlB,EAqqBkB,EAAA4G,EAAA,EAAK7P,CAAL;AAASA,CAE1C,EADU,CACV,GADIC,CACJ,GADaA,CAAoB,CAtqBX,IAsqBW,EAATgJ,MAtqBpB,EAsqB6B,CAtqBlB,EAsqBkB,EAAA4G,EAAA,EAAK5P,CAAL,CAASA,CAC1C,EAAI4P,EAAJ,CAAQiB,YAAR,GAAsBjB,EAAtB,CAA0BpH,IAAKC,CAAAA,IAAL,CAAUoI,YAAV,CAAyBjB,EAAzB,CAA1B,CAGF,GAAON,KAAK/O,CAAAA,IAAT,GAAkBH,aAAlB,GACDsQ,EAEA,CAFIH,SAAA,CAAUjB,IAAK/O,CAAAA,IAAKuC,CAAAA,KAApB,CAEJ,CAFiCyE,KAEjC,CAFyCqI,EAEzC,CADAxP,aAAKuC,CAAAA,EACL,EADW5C,CACX,CADe2Q,EACf,CAAAtQ,aAAKyC,CAAAA,EAAL,EAAW7C,CAAX,CAAe0Q,EAHd,CAAH,OAISpB,IAJT,CAIgBA,IAAK3N,CAAAA,IAJrB,CATK,CAnByB,CA3DR,IACpBO,KADoB,CAEpB9B,aAFoB,CAGpB4I,MAHoB,CAIpBzB,KAJoB,CAKpBwH,kBAAWtM,QAAA,CAAS,CAAC,EAAV,CALS,CAMpB8N,SANoB,CAOpBM,aAAe,CAPK,CAQpBD,aAAe3K,QARK,CASpB0K,OAAS,GAqFb1I,MAAMc,CAAAA,UAAN,CAAmBiG,QAAS,CAACgB,MAAD,CAASC,OAAT,CAAkB,CAC5C/N,KAAA,CAAQ8N,MACRhH,OAAA,CAASiH,OACTlH,WAAA,EAH4C,CAM9Cd,MAAM8G,CAAAA,QAAN,CAAiBI,QAAS,CAAC5L,CAAD,CAAI,CAC5B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB0N,iBAAA;AAAwB,UAAb,GAAA,MAAOxL,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAzC,CAAuDwF,UAAA,EAAvD,CAAqEd,KAAzF,EAAkG8G,iBAD7E,CAI9B9G,MAAM6I,CAAAA,WAAN,CAAoBC,QAAS,CAACxN,CAAD,CAAI,CAC/B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBwP,YAAA,CAAetN,CAAf,CAAmBA,CAAnB,CAAsB0E,KAA1C,EAAmDO,IAAKC,CAAAA,IAAL,CAAUoI,YAAV,CAD3B,CAIjC5I,MAAM+I,CAAAA,WAAN,CAAoBC,QAAS,CAAC1N,CAAD,CAAI,CAC/B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBuP,YAAA,CAAerN,CAAf,CAAmBA,CAAnB,CAAsB0E,KAA1C,EAAmDO,IAAKC,CAAAA,IAAL,CAAUmI,YAAV,CAD3B,CAIjC3I,MAAMiJ,CAAAA,KAAN,CAAcC,QAAS,CAAC5N,CAAD,CAAI,CACzB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBsP,MAAA,CAASpN,CAAT,CAAaA,CAAb,CAAgB0E,KAApC,EAA6CO,IAAKC,CAAAA,IAAL,CAAUkI,MAAV,CAD3B,CAI3B,OAAO1I,MApHiB,CAyMT,CAIfmJ,KAvqBFC,QAAmB,CAACC,KAAD,CAAQ,CAiBzBrJ,QAASA,MAAK,CAACV,KAAD,CAAQ,CACpB,IADoB,IACXK,EAAI,CADO,CACJvE,EAAIiO,KAAMjQ,CAAAA,MAA1B,CAAkCuG,CAAlC,CAAsCD,UAAtC,CAAkD,EAAEC,CAApD,CACE,IADqD,IAC5CxG,EAAI,CADwC,CACrCgQ,IADqC,CAC/BzF,MAD+B,CACf5L,CADe,CACZC,CADY,CACT4P,CAA5C,CAAkDxO,CAAlD;AAAsDiC,CAAtD,CAAyD,EAAEjC,CAA3D,CACEgQ,IASA,CATOE,KAAA,CAAMlQ,CAAN,CASP,CATiBuK,MASjB,CAT0ByF,IAAKzF,CAAAA,MAS/B,CATuCC,IASvC,CATgDwF,IAAKxF,CAAAA,MASrD,CARA7L,CAQA,CARI6L,IAAO7L,CAAAA,CAQX,CARe6L,IAAOjJ,CAAAA,EAQtB,CAR2BgJ,MAAO5L,CAAAA,CAQlC,CARsC4L,MAAOhJ,CAAAA,EAQ7C,EAtJoB,IAsJpB,EAR0DqG,MA9IxD,EAsJF,CAtJa,EAsJb,EAPAhJ,CAOA,CAPI4L,IAAO5L,CAAAA,CAOX,CAPe4L,IAAO/I,CAAAA,EAOtB,CAP2B8I,MAAO3L,CAAAA,CAOlC,CAPsC2L,MAAO9I,CAAAA,EAO7C,EAtJoB,IAsJpB,EAP0DmG,MA/IxD,EAsJF,CAtJa,EAsJb,EANA4G,CAMA,CANIpH,IAAKC,CAAAA,IAAL,CAAU1I,CAAV,CAAcA,CAAd,CAAkBC,CAAlB,CAAsBA,CAAtB,CAMJ,CALA4P,CAKA,EALKA,CAKL,CALS2B,SAAA,CAAUnQ,CAAV,CAKT,EALyBwO,CAKzB,CAL6BrI,KAK7B,CALqCgJ,SAAA,CAAUnP,CAAV,CAKrC,CAJArB,CAIA,EAJK6P,CAIL,CAJQ5P,CAIR,EAJa4P,CAIb,CAHAhE,IAAOjJ,CAAAA,EAGP,EAHa5C,CAGb,EAHkByR,CAGlB,CAHsBC,IAAA,CAAKrQ,CAAL,CAGtB,EAFAwK,IAAO/I,CAAAA,EAEP,EAFa7C,CAEb,CAFiBwR,CAEjB,CADA7F,MAAOhJ,CAAAA,EACP,EADa5C,CACb,EADkByR,CAClB,CADsB,CACtB,CAD0BA,CAC1B,EAAA7F,MAAO9I,CAAAA,EAAP,EAAa7C,CAAb,CAAiBwR,CAZD,CAiBtBzI,QAASA,WAAU,EAAG,CACpB,GAAK7G,KAAL,CAAA,CADoB,IAGhBmB,EAAInB,KAAMb,CAAAA,MAHM,CAIhB4F,EAAIqK,KAAMjQ,CAAAA,MAJM,CAKhB2B,SAAW,IAAIkG,GAAJ,CAAQhH,KAAM8B,CAAAA,GAAN,CAAU,CAAC/D,CAAD,CAAImB,CAAJ,CAAA,EAAU,CAACsQ,EAAA,CAAGzR,CAAH,CAAMmB,CAAN,CAASc,KAAT,CAAD,CAAkBjC,CAAlB,CAApB,CAAR,CAGV,KAAAmB,WAAI,CAAT,KAAYuQ,KAAZ,CAAwB/P,KAAJ,CAAUyB,CAAV,CAApB,CAAkCjC,UAAlC,CAAsC6F,CAAtC,CAAyC,EAAE7F,UAA3C,CACEgQ,CAIA,CAJOE,KAAA,CAAMlQ,UAAN,CAIP;AAJiBgQ,CAAKtO,CAAAA,KAItB,CAJ8B1B,UAI9B,CAH2B,QAG3B,GAHI,MAAOgQ,EAAKzF,CAAAA,MAGhB,GAHqCyF,CAAKzF,CAAAA,MAG1C,CAHmD5I,IAAA,CAAKC,QAAL,CAAeoO,CAAKzF,CAAAA,MAApB,CAGnD,EAF2B,QAE3B,GAFI,MAAOyF,EAAKxF,CAAAA,MAEhB,GAFqCwF,CAAKxF,CAAAA,MAE1C,CAFmD7I,IAAA,CAAKC,QAAL,CAAeoO,CAAKxF,CAAAA,MAApB,CAEnD,EADA+F,KAAA,CAAMP,CAAKzF,CAAAA,MAAO7I,CAAAA,KAAlB,CACA,EAD4B6O,KAAA,CAAMP,CAAKzF,CAAAA,MAAO7I,CAAAA,KAAlB,CAC5B,EADwD,CACxD,EAD6D,CAC7D,CAAA6O,KAAA,CAAMP,CAAKxF,CAAAA,MAAO9I,CAAAA,KAAlB,CAAA,EAA4B6O,KAAA,CAAMP,CAAKxF,CAAAA,MAAO9I,CAAAA,KAAlB,CAA5B,EAAwD,CAAxD,EAA6D,CAG1D1B,WAAA,CAAI,CAAT,KAAYqQ,IAAZ,CAAuB7P,KAAJ,CAAUqF,CAAV,CAAnB,CAAiC7F,UAAjC,CAAqC6F,CAArC,CAAwC,EAAE7F,UAA1C,CACEgQ,CAAiB,CAAVE,KAAA,CAAMlQ,UAAN,CAAU,CAAAqQ,IAAA,CAAKrQ,UAAL,CAAA,CAAUuQ,KAAA,CAAMP,CAAKzF,CAAAA,MAAO7I,CAAAA,KAAlB,CAAV,EAAsC6O,KAAA,CAAMP,CAAKzF,CAAAA,MAAO7I,CAAAA,KAAlB,CAAtC,CAAiE6O,KAAA,CAAMP,CAAKxF,CAAAA,MAAO9I,CAAAA,KAAlB,CAAjE,CAGnByN,UAAA,CAAgB3O,KAAJ,CAAUqF,CAAV,CAAc2K,mBAAA,EAC1BL,UAAA,CAAgB3P,KAAJ,CAAUqF,CAAV,CAAc4K,mBAAA,EApB1B,CADoB,CAwBtBD,QAASA,mBAAkB,EAAG,CAC5B,GAAK1P,KAAL,CAEA,IAH4B,IAGnBd;AAAI,CAHe,CAGZiC,EAAIiO,KAAMjQ,CAAAA,MAA1B,CAAkCD,CAAlC,CAAsCiC,CAAtC,CAAyC,EAAEjC,CAA3C,CACEmP,SAAA,CAAUnP,CAAV,CAAA,CAAe,CAAC2N,QAAA,CAASuC,KAAA,CAAMlQ,CAAN,CAAT,CAAmBA,CAAnB,CAAsBkQ,KAAtB,CAJU,CAQ9BO,QAASA,mBAAkB,EAAG,CAC5B,GAAK3P,KAAL,CAEA,IAH4B,IAGnBd,EAAI,CAHe,CAGZiC,EAAIiO,KAAMjQ,CAAAA,MAA1B,CAAkCD,CAAlC,CAAsCiC,CAAtC,CAAyC,EAAEjC,CAA3C,CACEmQ,SAAA,CAAUnQ,CAAV,CAAA,CAAe,CAAC0Q,QAAA,CAASR,KAAA,CAAMlQ,CAAN,CAAT,CAAmBA,CAAnB,CAAsBkQ,KAAtB,CAJU,CAlEL,IACrBI,GAAK5O,KADgB,CAErBiM,SAWJgD,QAAwB,CAACX,IAAD,CAAO,CAC7B,MAAO,EAAP,CAAW5I,IAAKwJ,CAAAA,GAAL,CAASL,KAAA,CAAMP,IAAKzF,CAAAA,MAAO7I,CAAAA,KAAlB,CAAT,CAAmC6O,KAAA,CAAMP,IAAKxF,CAAAA,MAAO9I,CAAAA,KAAlB,CAAnC,CADkB,CAbN,CAGrByN,SAHqB,CAIrBuB,SAAWrP,QAAA,CAAS,EAAT,CAJU,CAKrB8O,SALqB,CAMrBrP,KANqB,CAOrByP,KAPqB,CAQrBF,IARqB,CASrBzI,MATqB,CAUrBrB,WAAa,CACJ,KAAb,EAAI2J,KAAJ,GAAmBA,KAAnB,CAA2B,EAA3B,CA+DArJ,MAAMc,CAAAA,UAAN,CAAmBiG,QAAS,CAACgB,MAAD,CAASC,OAAT,CAAkB,CAC5C/N,KAAA,CAAQ8N,MACRhH,OAAA,CAASiH,OACTlH,WAAA,EAH4C,CAM9Cd,MAAMqJ,CAAAA,KAAN,CAAcW,QAAS,CAAC1O,CAAD,CAAI,CACzB,MAAOD,UAAUjC,CAAAA,MAAV;CAAoBiQ,KAAA,CAAQ/N,CAAR,CAAWwF,UAAA,EAAX,CAAyBd,KAA7C,EAAsDqJ,KADpC,CAI3BrJ,MAAMyJ,CAAAA,EAAN,CAAWQ,QAAS,CAAC3O,CAAD,CAAI,CACtB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBqQ,EAAA,CAAKnO,CAAL,CAAQ0E,KAA5B,EAAqCyJ,EADtB,CAIxBzJ,MAAMN,CAAAA,UAAN,CAAmBuI,QAAS,CAAC3M,CAAD,CAAI,CAC9B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBsG,UAAA,CAAa,CAACpE,CAAd,CAAiB0E,KAArC,EAA8CN,UADvB,CAIhCM,MAAM8G,CAAAA,QAAN,CAAiBI,QAAS,CAAC5L,CAAD,CAAI,CAC5B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB0N,QAAA,CAAwB,UAAb,GAAA,MAAOxL,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAzC,CAAuDqO,kBAAA,EAAvD,CAA6E3J,KAAjG,EAA0G8G,QADrF,CAI9B9G,MAAM6J,CAAAA,QAAN,CAAiBK,QAAS,CAAC5O,CAAD,CAAI,CAC5B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoByQ,QAAA,CAAwB,UAAb,GAAA,MAAOvO,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAzC,CAAuDsO,kBAAA,EAAvD,CAA6E5J,KAAjG,EAA0G6J,QADrF,CAI9B,OAAO7J,MApGkB,CAmqBV,CAKflI,EAvFFqS,QAAgB,CAACrS,CAAD,CAAI,CAOlBkI,QAASA,MAAK,CAACV,KAAD,CAAQ,CACpB,IADoB,IACXnG;AAAI,CADO,CACJiC,EAAInB,KAAMb,CAAAA,MADN,CACcjB,IAAlC,CAAwCgB,CAAxC,CAA4CiC,CAA5C,CAA+C,EAAEjC,CAAjD,CACEhB,IAAiB,CAAV8B,KAAA,CAAMd,CAAN,CAAU,CAAAhB,IAAKuC,CAAAA,EAAL,GAAYqJ,EAAA,CAAG5K,CAAH,CAAZ,CAAoBhB,IAAKL,CAAAA,CAAzB,EAA8BwQ,SAAA,CAAUnP,CAAV,CAA9B,CAA6CmG,KAF5C,CAMtBwB,QAASA,WAAU,EAAG,CACpB,GAAK7G,KAAL,CAAA,CADoB,IAEhBd,CAFgB,CAGhBiC,EAAInB,KAAMb,CAAAA,MACdkP,UAAA,CAAgB3O,KAAJ,CAAUyB,CAAV,CACZ2I,GAAA,CAASpK,KAAJ,CAAUyB,CAAV,CAEL,KAAKjC,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CACEmP,SAAA,CAAUnP,CAAV,CAAA,CAAelB,KAAA,CAAM8L,EAAA,CAAG5K,CAAH,CAAN,CAAc,CAACrB,CAAA,CAAEmC,KAAA,CAAMd,CAAN,CAAF,CAAYA,CAAZ,CAAec,KAAf,CAAf,CAAA,CAAwC,CAAxC,CAA4C,CAAC6M,QAAA,CAAS7M,KAAA,CAAMd,CAAN,CAAT,CAAmBA,CAAnB,CAAsBc,KAAtB,CAP9D,CADoB,CAbJ,IACd6M,SAAWtM,QAAA,CAAS,EAAT,CADG,CAEdP,KAFc,CAGdqO,SAHc,CAIdvE,EACa,WAAjB,GAAI,MAAOjM,EAAX,GAA6BA,CAA7B,CAAiC0C,QAAA,CAAc,IAAL,EAAA1C,CAAA,CAAY,CAAZ,CAAgB,CAACA,CAA1B,CAAjC,CAoBAkI,MAAMc,CAAAA,UAAN,CAAmBiG,QAAS,CAACzL,CAAD,CAAI,CAC9BrB,KAAA,CAAQqB,CACRwF,WAAA,EAF8B,CAKhCd,MAAM8G,CAAAA,QAAN,CAAiBI,QAAS,CAAC5L,CAAD,CAAI,CAC5B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB0N,QAAA,CAAwB,UAAb,GAAA,MAAOxL,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAzC;AAAuDwF,UAAA,EAAvD,CAAqEd,KAAzF,EAAkG8G,QAD7E,CAI9B9G,MAAMlI,CAAAA,CAAN,CAAUkP,QAAS,CAAC1L,CAAD,CAAI,CACrB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBtB,CAAA,CAAiB,UAAb,GAAA,MAAOwD,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAlC,CAAgDwF,UAAA,EAAhD,CAA8Dd,KAAlF,EAA2FlI,CAD7E,CAIvB,OAAOkI,MAtCW,CAkFH,CAMfjI,EA/CFqS,QAAgB,CAACrS,CAAD,CAAI,CAOlBiI,QAASA,MAAK,CAACV,KAAD,CAAQ,CACpB,IADoB,IACXnG,EAAI,CADO,CACJiC,EAAInB,KAAMb,CAAAA,MADN,CACcjB,IAAlC,CAAwCgB,CAAxC,CAA4CiC,CAA5C,CAA+C,EAAEjC,CAAjD,CACEhB,IAAiB,CAAV8B,KAAA,CAAMd,CAAN,CAAU,CAAAhB,IAAKyC,CAAAA,EAAL,GAAYoJ,EAAA,CAAG7K,CAAH,CAAZ,CAAoBhB,IAAKJ,CAAAA,CAAzB,EAA8BuQ,SAAA,CAAUnP,CAAV,CAA9B,CAA6CmG,KAF5C,CAMtBwB,QAASA,WAAU,EAAG,CACpB,GAAK7G,KAAL,CAAA,CADoB,IAEhBd,CAFgB,CAGhBiC,EAAInB,KAAMb,CAAAA,MACdkP,UAAA,CAAgB3O,KAAJ,CAAUyB,CAAV,CACZ4I,GAAA,CAASrK,KAAJ,CAAUyB,CAAV,CAEL,KAAKjC,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiC,CAAhB,CAAmB,EAAEjC,CAArB,CACEmP,SAAA,CAAUnP,CAAV,CAAA,CAAelB,KAAA,CAAM+L,EAAA,CAAG7K,CAAH,CAAN,CAAc,CAACpB,CAAA,CAAEkC,KAAA,CAAMd,CAAN,CAAF,CAAYA,CAAZ,CAAec,KAAf,CAAf,CAAA,CAAwC,CAAxC,CAA4C,CAAC6M,QAAA,CAAS7M,KAAA,CAAMd,CAAN,CAAT,CAAmBA,CAAnB,CAAsBc,KAAtB,CAP9D,CADoB,CAbJ,IACd6M,SAAWtM,QAAA,CAAS,EAAT,CADG,CAEdP,KAFc,CAGdqO,SAHc;AAIdtE,EACa,WAAjB,GAAI,MAAOjM,EAAX,GAA6BA,CAA7B,CAAiCyC,QAAA,CAAc,IAAL,EAAAzC,CAAA,CAAY,CAAZ,CAAgB,CAACA,CAA1B,CAAjC,CAoBAiI,MAAMc,CAAAA,UAAN,CAAmBiG,QAAS,CAACzL,CAAD,CAAI,CAC9BrB,KAAA,CAAQqB,CACRwF,WAAA,EAF8B,CAKhCd,MAAM8G,CAAAA,QAAN,CAAiBI,QAAS,CAAC5L,CAAD,CAAI,CAC5B,MAAOD,UAAUjC,CAAAA,MAAV,EAAoB0N,QAAA,CAAwB,UAAb,GAAA,MAAOxL,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAzC,CAAuDwF,UAAA,EAAvD,CAAqEd,KAAzF,EAAkG8G,QAD7E,CAI9B9G,MAAMjI,CAAAA,CAAN,CAAUkP,QAAS,CAAC3L,CAAD,CAAI,CACrB,MAAOD,UAAUjC,CAAAA,MAAV,EAAoBrB,CAAA,CAAiB,UAAb,GAAA,MAAOuD,EAAP,CAA0BA,CAA1B,CAA8Bd,QAAA,CAAS,CAACc,CAAV,CAAlC,CAAgDwF,UAAA,EAAhD,CAA8Dd,KAAlF,EAA2FjI,CAD7E,CAIvB,OAAOiI,MAtCW,CAyCH,CAAjB,CASM2C,YAAc,CAAC,OAAD,CAAU,UAAV,CAAsB,aAAtB,CAAqC,eAArC,CAAsD,QAAtD,CATpB,CAUM0H,YAAc,CAAC,QAAD,CAAW,YAAX,CAVpB,CAWMC,YAAc,CAAC,GAAD,CAAM,GAAN,CAAW,IAAX,CAAiB,IAAjB,CAWpB7I,MAAM8I,CAAAA,UAAN;AAAmB,CACjB,KAAQ,OADS,CAEjB,SAAY,CACV,SAAY,CAAA,CADF,CAFK,CAKjB,OAAU,CAAC,CACT,KAAQ,QADC,CAET,KAAQ,SAFC,CAGT,UAAW,CAAA,CAHF,CAAD,CAIP,CACD,KAAQ,SADP,CAED,KAAQ,SAFP,CAGD,UAAW,CAAA,CAHV,CAJO,CAQP,CACD,KAAQ,YADP,CAED,KAAQ,QAFP,CAGD,UAAW,GAHV,CARO,CAYP,CACD,KAAQ,OADP,CAED,KAAQ,QAFP,CAGD,UAAW,CAHV,CAZO,CAgBP,CACD,KAAQ,UADP,CAED,KAAQ,QAFP,CAGD,UAAW,IAHV,CAhBO,CAoBP,CACD,KAAQ,aADP,CAED,KAAQ,QAFP,CAGD,UAAW,CAHV,CApBO,CAwBP,CACD,KAAQ,eADP,CAED,KAAQ,QAFP,CAGD,UAAW,EAHV,CAxBO,CA4BP,CACD,KAAQ,QADP,CAED,KAAQ,OAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAAC,CACT,IAAO,CACL,MAAS,QADJ,CADE,CAIT,OAAU,CAAC,CACT,KAAQ,GADC,CAET,KAAQ,QAFC,CAGT,UAAW,CAHF,CAAD,CAIP,CACD,KAAQ,GADP,CAED,KAAQ,QAFP;AAGD,UAAW,CAHV,CAJO,CAJD,CAAD,CAaP,CACD,IAAO,CACL,MAAS,SADJ,CADN,CAID,OAAU,CAAC,CACT,KAAQ,QADC,CAET,KAAQ,QAFC,CAGT,KAAQ,CAAA,CAHC,CAAD,CAIP,CACD,KAAQ,UADP,CAED,KAAQ,QAFP,CAGD,UAAW,EAHV,CAJO,CAQP,CACD,KAAQ,YADP,CAED,KAAQ,QAFP,CAGD,UAAW,CAHV,CARO,CAJT,CAbO,CA8BP,CACD,IAAO,CACL,MAAS,OADJ,CADN,CAID,OAAU,CAAC,CACT,KAAQ,UADC,CAET,KAAQ,QAFC,CAGT,UAAW,CAAC,EAHH,CAAD,CAIP,CACD,KAAQ,OADP,CAED,KAAQ,QAFP,CAGD,UAAW,EAHV,CAJO,CAQP,CACD,KAAQ,aADP,CAED,KAAQ,QAFP,CAGD,UAAW,CAHV,CARO,CAYP,CACD,KAAQ,aADP,CAED,KAAQ,QAFP,CAZO,CAJT,CA9BO,CAkDP,CACD,IAAO,CACL,MAAS,MADJ,CADN,CAID,OAAU,CAAC,CACT,KAAQ,OADC,CAET,KAAQ,MAFC,CAAD,CAGP,CACD,KAAQ,IADP,CAED,KAAQ,OAFP,CAHO,CAMP,CACD,KAAQ,UADP,CAED,KAAQ,QAFP,CAGD,UAAW,EAHV;AAID,KAAQ,CAAA,CAJP,CANO,CAWP,CACD,KAAQ,UADP,CAED,KAAQ,QAFP,CAGD,KAAQ,CAAA,CAHP,CAXO,CAeP,CACD,KAAQ,YADP,CAED,KAAQ,QAFP,CAGD,UAAW,CAHV,CAfO,CAJT,CAlDO,CA0EP,CACD,IAAO,CACL,MAAS,GADJ,CADN,CAID,OAAU,CAAC,CACT,KAAQ,UADC,CAET,KAAQ,QAFC,CAGT,UAAW,EAHF,CAAD,CAIP,CACD,KAAQ,GADP,CAED,KAAQ,OAFP,CAJO,CAJT,CA1EO,CAsFP,CACD,IAAO,CACL,MAAS,GADJ,CADN,CAID,OAAU,CAAC,CACT,KAAQ,UADC,CAET,KAAQ,QAFC,CAGT,UAAW,EAHF,CAAD,CAIP,CACD,KAAQ,GADP,CAED,KAAQ,OAFP,CAJO,CAJT,CAtFO,CAJT,CA5BO,CAmIP,CACD,KAAQ,IADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAAA,CAJT,CAKD,UAAWD,WALV,CAnIO,CALO,CAgJnB3S,SAAS6S,CAAAA,QAAT,CAAkB/I,KAAlB,CAAyB/J,YAAaiK,CAAAA,SAAtC,CAAiD,CAC/C8I,SAAS,CAACnP,CAAD,CAAIkH,KAAJ,CAAW,CAAA,IACdP,IAAM,IAAKvF,CAAAA,KADG,CAEdgO,OAASlI,KAAMmI,CAAAA,OAAN,CAAcnI,KAAMoI,CAAAA,OAApB,CAFK,CAGdlJ,OAASpG,CAAEwH,CAAAA,QAAF,CAAWH,WAAX,CAHK;AAIdkI,MAAQvP,CAAEoE,CAAAA,UAAVmL,EAAwB,GAGvB5I,IAAL,EAWMyI,MAKJ,GAJElI,KAAMsI,CAAAA,QAAN,CAAe,OAAf,CACA,CAAA7I,GAAIhI,CAAAA,KAAJ,CAAUuI,KAAMkB,CAAAA,MAAhB,CAGF,GAAIhC,MAAJ,EAAcc,KAAMmI,CAAAA,OAAN,CAAcnI,KAAMuI,CAAAA,GAApB,CAAd,GACEzI,KAAA,CAAML,GAAN,CAAW3G,CAAX,CAAc,CAAd,CAAiBkH,KAAjB,CAjBJ,GACE,IAAK9F,CAAAA,KAQL,CARauF,GAQb,CARmB5C,UAAA,CAAWmD,KAAMkB,CAAAA,MAAjB,CAAyBpI,CAAzB,CAQnB,CAPA2G,GAAIT,CAAAA,EAAJ,CAAO,MAAP,CAAeI,KAAA,CAAMY,KAAMwI,CAAAA,QAAZ,CAAsB,IAAtB,CAAf,CAOA,CALK1P,CAAE2P,CAAAA,MAKP,GAJEP,MACA,CADS,CAAA,CACT,CAAAzI,GAAI9C,CAAAA,IAAJ,EAGF,EAAAqD,KAAMsI,CAAAA,QAAN,CAAe,OAAf,CATF,CAsBA,IAAIpJ,MAAJ,EAAcgJ,MAAd,EAAwBpP,CAAEwH,CAAAA,QAAF,CAAWuH,WAAX,CAAxB,EAAmD7H,KAAMmI,CAAAA,OAAN,EAAnD,EAAsErP,CAAE8B,CAAAA,OAAxE,CAGE,GAFA6E,GAAI3C,CAAAA,KAAJ,CAAUiB,IAAK2K,CAAAA,GAAL,CAASjJ,GAAI3C,CAAAA,KAAJ,EAAT,CAAsBhE,CAAEgE,CAAAA,KAAxB,EAAiC,CAAjC,CAAV,CAA+CO,CAAAA,UAA/C,CAA0D,CAA1D,CAA8DU,IAAKS,CAAAA,GAAL,CAASiB,GAAI1C,CAAAA,QAAJ,EAAT,CAAyB,CAAzB,CAA6BsL,KAA7B,CAA9D,CAEMI,CAAF3P,CAAE2P,CAAAA,MAAN,CACE,IAAKhJ,GAAIxC,CAAAA,IAAJ,EAAL,CAA4B,CAA5B,EAAiB,EAAEoL,KAAnB,CAAA,CAAgC5I,GAAI9C,CAAAA,IAAJ,EADlC,KAIE,IADI8C,GAAIC,CAAAA,OAAJ,EACA;AADeD,GAAI7E,CAAAA,OAAJ,EACf,CAAA,CAACsN,MAAL,CAAa,MAAOlI,MAAM2I,CAAAA,eAI9B,OAAO,KAAKC,CAAAA,MAAL,CAAY9P,CAAZ,CAAekH,KAAf,CAxCW,CAD2B,CA4C/C4I,MAAM,CAAC9P,CAAD,CAAIkH,KAAJ,CAAW,CACf,MAAMwI,SAAWxI,KAAMwI,CAAAA,QAEvB,KAAK,IAAI/E,KAAO,IAAKoF,CAAAA,OAAhB,CAAyBzR,EAAI,CAA7B,CAAgCoF,EAAIiH,IAAK7M,CAAAA,MAAzC,CAAiDkS,GAAtD,CAA2D1R,CAA3D,CAA+DoF,CAA/D,CAAkE,EAAEpF,CAApE,CAGE,GAFA0R,GAEI,CAFErF,IAAA,CAAKrM,CAAL,CAEF,CAhNKiJ,QAgNL,GAAAyI,GAAItP,CAAAA,IAAJ,EAAgD,MAAhD,GAAuBsP,GAAIxJ,CAAAA,EAAGyJ,CAAAA,OAAQvL,CAAAA,KAA1C,CAIA,IAPqE,IAO5DwL,IAAMF,GAAIxJ,CAAAA,EAAGuJ,CAAAA,OAP+C,CAOtClS,EAAI,CAPkC,CAO/BiC,EAAIoQ,GAAIpS,CAAAA,MAPuB,CAOf0I,EAAtD,CAA0D3I,CAA1D,CAA8DiC,CAA9D,CAAiE,EAAEjC,CAAnE,CACE,GAAoB,OAApB,GAAIqS,GAAA,CAAIrS,CAAJ,CAAO6C,CAAAA,IAAX,GAAgC8F,EAAhC,CAAqC0J,GAAA,CAAIrS,CAAJ,CAAO2I,CAAAA,EAAG4B,CAAAA,MAA/C,EAAwD,CACtDsH,QAASxI,CAAAA,KAAT,CAAeV,EAAf,CAAmBkJ,QAASS,CAAAA,SAAT,EAAqBC,CAAAA,MAArB,EAAnB,CACA,MAFsD,CAQ5D,MAAOlJ,MAAMkJ,CAAAA,MAAN,CAAapQ,CAAEwH,CAAAA,QAAF,EAAb,CAA2BgI,CAAAA,QAA3B,CAAoCR,WAApC,CAnBQ,CA5C8B,CAAjD,CA+IApT,QAAQ8I,CAAAA,KAAR,CAAgByB,KAEhBkK,OAAOC,CAAAA,cAAP,CAAsB1U,OAAtB;AAA+B,YAA/B,CAA6C,CAAEwF,MAAO,CAAA,CAAT,CAA7C,CAxiDmD,CAJrD,CAD4G;",
"sources":["node_modules/vega-force/build/vega-force.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_force$build$vega_force\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-util'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega));\n})(this, (function (exports, vegaDataflow, vegaUtil) { 'use strict';\n\n  function forceCenter (x, y) {\n    var nodes,\n        strength = 1;\n    if (x == null) x = 0;\n    if (y == null) y = 0;\n\n    function force() {\n      var i,\n          n = nodes.length,\n          node,\n          sx = 0,\n          sy = 0;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], sx += node.x, sy += node.y;\n      }\n\n      for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n        node = nodes[i], node.x -= sx, node.y -= sy;\n      }\n    }\n\n    force.initialize = function (_) {\n      nodes = _;\n    };\n\n    force.x = function (_) {\n      return arguments.length ? (x = +_, force) : x;\n    };\n\n    force.y = function (_) {\n      return arguments.length ? (y = +_, force) : y;\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    return force;\n  }\n\n  function tree_add (d) {\n    const x = +this._x.call(null, d),\n          y = +this._y.call(null, d);\n    return add(this.cover(x, y), x, y, d);\n  }\n\n  function add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n    var parent,\n        node = tree._root,\n        leaf = {\n      data: d\n    },\n        x0 = tree._x0,\n        y0 = tree._y0,\n        x1 = tree._x1,\n        y1 = tree._y1,\n        xm,\n        ym,\n        xp,\n        yp,\n        right,\n        bottom,\n        i,\n        j; // If the tree is empty, initialize the root as a leaf.\n\n    if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n    while (node.length) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    } // Is the new point is exactly coincident with the existing point?\n\n\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n    do {\n      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n    return parent[j] = node, parent[i] = leaf, tree;\n  }\n\n  function addAll(data) {\n    var d,\n        i,\n        n = data.length,\n        x,\n        y,\n        xz = new Array(n),\n        yz = new Array(n),\n        x0 = Infinity,\n        y0 = Infinity,\n        x1 = -Infinity,\n        y1 = -Infinity; // Compute the points and their extent.\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n      xz[i] = x;\n      yz[i] = y;\n      if (x < x0) x0 = x;\n      if (x > x1) x1 = x;\n      if (y < y0) y0 = y;\n      if (y > y1) y1 = y;\n    } // If there were no (valid) points, abort.\n\n\n    if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n    this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n    for (i = 0; i < n; ++i) {\n      add(this, xz[i], yz[i], data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_cover (x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n    var x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1; // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don\u2019t change due to floating point error!\n\n    if (isNaN(x0)) {\n      x1 = (x0 = Math.floor(x)) + 1;\n      y1 = (y0 = Math.floor(y)) + 1;\n    } // Otherwise, double repeatedly to cover.\n    else {\n      var z = x1 - x0 || 1,\n          node = this._root,\n          parent,\n          i;\n\n      while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n        i = (y < y0) << 1 | x < x0;\n        parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n        switch (i) {\n          case 0:\n            x1 = x0 + z, y1 = y0 + z;\n            break;\n\n          case 1:\n            x0 = x1 - z, y1 = y0 + z;\n            break;\n\n          case 2:\n            x1 = x0 + z, y0 = y1 - z;\n            break;\n\n          case 3:\n            x0 = x1 - z, y0 = y1 - z;\n            break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n  }\n\n  function tree_data () {\n    var data = [];\n    this.visit(function (node) {\n      if (!node.length) do data.push(node.data); while (node = node.next);\n    });\n    return data;\n  }\n\n  function tree_extent (_) {\n    return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n  }\n\n  function Quad (node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  function tree_find (x, y, radius) {\n    var data,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1,\n        y1,\n        x2,\n        y2,\n        x3 = this._x1,\n        y3 = this._y1,\n        quads = [],\n        node = this._root,\n        q,\n        i;\n    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;else {\n      x0 = x - radius, y0 = y - radius;\n      x3 = x + radius, y3 = y + radius;\n      radius *= radius;\n    }\n\n    while (q = quads.pop()) {\n      // Stop searching if this quadrant can\u2019t contain a closer node.\n      if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n      if (node.length) {\n        var xm = (x1 + x2) / 2,\n            ym = (y1 + y2) / 2;\n        quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n        if (i = (y >= ym) << 1 | x >= xm) {\n          q = quads[quads.length - 1];\n          quads[quads.length - 1] = quads[quads.length - 1 - i];\n          quads[quads.length - 1 - i] = q;\n        }\n      } // Visit this point. (Visiting coincident points isn\u2019t necessary!)\n      else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n    }\n\n    return data;\n  }\n\n  function tree_remove (d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n    var parent,\n        node = this._root,\n        retainer,\n        previous,\n        next,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1,\n        x,\n        y,\n        xm,\n        ym,\n        right,\n        bottom,\n        i,\n        j; // If the tree is empty, initialize the root as a leaf.\n\n    if (!node) return this; // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n\n    if (node.length) while (true) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n      if (!node.length) break;\n      if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n    } // Find the point to remove.\n\n    while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\n    if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n    if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n    if (!parent) return this._root = next, this; // Remove this leaf.\n\n    next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n      if (retainer) retainer[j] = node;else this._root = node;\n    }\n\n    return this;\n  }\n  function removeAll(data) {\n    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\n    return this;\n  }\n\n  function tree_root () {\n    return this._root;\n  }\n\n  function tree_size () {\n    var size = 0;\n    this.visit(function (node) {\n      if (!node.length) do ++size; while (node = node.next);\n    });\n    return size;\n  }\n\n  function tree_visit (callback) {\n    var quads = [],\n        q,\n        node = this._root,\n        child,\n        x0,\n        y0,\n        x1,\n        y1;\n    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n    while (q = quads.pop()) {\n      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2,\n            ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      }\n    }\n\n    return this;\n  }\n\n  function tree_visitAfter (callback) {\n    var quads = [],\n        next = [],\n        q;\n    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n    while (q = quads.pop()) {\n      var node = q.node;\n\n      if (node.length) {\n        var child,\n            x0 = q.x0,\n            y0 = q.y0,\n            x1 = q.x1,\n            y1 = q.y1,\n            xm = (x0 + x1) / 2,\n            ym = (y0 + y1) / 2;\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      }\n\n      next.push(q);\n    }\n\n    while (q = next.pop()) {\n      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    }\n\n    return this;\n  }\n\n  function defaultX(d) {\n    return d[0];\n  }\n  function tree_x (_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n  }\n\n  function defaultY(d) {\n    return d[1];\n  }\n  function tree_y (_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n  }\n\n  function quadtree(nodes, x, y) {\n    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n  }\n\n  function Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n  }\n\n  function leaf_copy(leaf) {\n    var copy = {\n      data: leaf.data\n    },\n        next = copy;\n\n    while (leaf = leaf.next) next = next.next = {\n      data: leaf.data\n    };\n\n    return copy;\n  }\n\n  var treeProto = quadtree.prototype = Quadtree.prototype;\n\n  treeProto.copy = function () {\n    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n        node = this._root,\n        nodes,\n        child;\n    if (!node) return copy;\n    if (!node.length) return copy._root = leaf_copy(node), copy;\n    nodes = [{\n      source: node,\n      target: copy._root = new Array(4)\n    }];\n\n    while (node = nodes.pop()) {\n      for (var i = 0; i < 4; ++i) {\n        if (child = node.source[i]) {\n          if (child.length) nodes.push({\n            source: child,\n            target: node.target[i] = new Array(4)\n          });else node.target[i] = leaf_copy(child);\n        }\n      }\n    }\n\n    return copy;\n  };\n\n  treeProto.add = tree_add;\n  treeProto.addAll = addAll;\n  treeProto.cover = tree_cover;\n  treeProto.data = tree_data;\n  treeProto.extent = tree_extent;\n  treeProto.find = tree_find;\n  treeProto.remove = tree_remove;\n  treeProto.removeAll = removeAll;\n  treeProto.root = tree_root;\n  treeProto.size = tree_size;\n  treeProto.visit = tree_visit;\n  treeProto.visitAfter = tree_visitAfter;\n  treeProto.x = tree_x;\n  treeProto.y = tree_y;\n\n  function constant (x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function jiggle (random) {\n    return (random() - 0.5) * 1e-6;\n  }\n\n  function x$1(d) {\n    return d.x + d.vx;\n  }\n\n  function y$1(d) {\n    return d.y + d.vy;\n  }\n\n  function forceCollide (radius) {\n    var nodes,\n        radii,\n        random,\n        strength = 1,\n        iterations = 1;\n    if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n    function force() {\n      var i,\n          n = nodes.length,\n          tree,\n          node,\n          xi,\n          yi,\n          ri,\n          ri2;\n\n      for (var k = 0; k < iterations; ++k) {\n        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          ri = radii[node.index], ri2 = ri * ri;\n          xi = node.x + node.vx;\n          yi = node.y + node.vy;\n          tree.visit(apply);\n        }\n      }\n\n      function apply(quad, x0, y0, x1, y1) {\n        var data = quad.data,\n            rj = quad.r,\n            r = ri + rj;\n\n        if (data) {\n          if (data.index > node.index) {\n            var x = xi - data.x - data.vx,\n                y = yi - data.y - data.vy,\n                l = x * x + y * y;\n\n            if (l < r * r) {\n              if (x === 0) x = jiggle(random), l += x * x;\n              if (y === 0) y = jiggle(random), l += y * y;\n              l = (r - (l = Math.sqrt(l))) / l * strength;\n              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n              node.vy += (y *= l) * r;\n              data.vx -= x * (r = 1 - r);\n              data.vy -= y * r;\n            }\n          }\n\n          return;\n        }\n\n        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n      }\n    }\n\n    function prepare(quad) {\n      if (quad.data) return quad.r = radii[quad.data.index];\n\n      for (var i = quad.r = 0; i < 4; ++i) {\n        if (quad[i] && quad[i].r > quad.r) {\n          quad.r = quad[i].r;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length,\n          node;\n      radii = new Array(n);\n\n      for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n    }\n\n    force.initialize = function (_nodes, _random) {\n      nodes = _nodes;\n      random = _random;\n      initialize();\n    };\n\n    force.iterations = function (_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    force.radius = function (_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n    };\n\n    return force;\n  }\n\n  function index(d) {\n    return d.index;\n  }\n\n  function find(nodeById, nodeId) {\n    var node = nodeById.get(nodeId);\n    if (!node) throw new Error(\"node not found: \" + nodeId);\n    return node;\n  }\n\n  function forceLink (links) {\n    var id = index,\n        strength = defaultStrength,\n        strengths,\n        distance = constant(30),\n        distances,\n        nodes,\n        count,\n        bias,\n        random,\n        iterations = 1;\n    if (links == null) links = [];\n\n    function defaultStrength(link) {\n      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n    }\n\n    function force(alpha) {\n      for (var k = 0, n = links.length; k < iterations; ++k) {\n        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n          link = links[i], source = link.source, target = link.target;\n          x = target.x + target.vx - source.x - source.vx || jiggle(random);\n          y = target.y + target.vy - source.y - source.vy || jiggle(random);\n          l = Math.sqrt(x * x + y * y);\n          l = (l - distances[i]) / l * alpha * strengths[i];\n          x *= l, y *= l;\n          target.vx -= x * (b = bias[i]);\n          target.vy -= y * b;\n          source.vx += x * (b = 1 - b);\n          source.vy += y * b;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length,\n          m = links.length,\n          nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n          link;\n\n      for (i = 0, count = new Array(n); i < m; ++i) {\n        link = links[i], link.index = i;\n        if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n        if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n        count[link.source.index] = (count[link.source.index] || 0) + 1;\n        count[link.target.index] = (count[link.target.index] || 0) + 1;\n      }\n\n      for (i = 0, bias = new Array(m); i < m; ++i) {\n        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n      }\n\n      strengths = new Array(m), initializeStrength();\n      distances = new Array(m), initializeDistance();\n    }\n\n    function initializeStrength() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        strengths[i] = +strength(links[i], i, links);\n      }\n    }\n\n    function initializeDistance() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        distances[i] = +distance(links[i], i, links);\n      }\n    }\n\n    force.initialize = function (_nodes, _random) {\n      nodes = _nodes;\n      random = _random;\n      initialize();\n    };\n\n    force.links = function (_) {\n      return arguments.length ? (links = _, initialize(), force) : links;\n    };\n\n    force.id = function (_) {\n      return arguments.length ? (id = _, force) : id;\n    };\n\n    force.iterations = function (_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n    };\n\n    force.distance = function (_) {\n      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n    };\n\n    return force;\n  }\n\n  var noop = {\n    value: () => {}\n  };\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function (t) {\n      var name = \"\",\n          i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {\n        type: t,\n        name: name\n      };\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function (typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\n        return;\n      } // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function () {\n      var copy = {},\n          _ = this._;\n\n      for (var t in _) copy[t] = _[t].slice();\n\n      return new Dispatch(copy);\n    },\n    call: function (type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function (type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n\n    if (callback != null) type.push({\n      name: name,\n      value: callback\n    });\n    return type;\n  }\n\n  var frame = 0,\n      // is an animation frame pending?\n  timeout = 0,\n      // is a timeout pending?\n  interval = 0,\n      // are any timers active?\n  pokeDelay = 1000,\n      // how frequently we check for clock skew\n  taskHead,\n      taskTail,\n      clockLast = 0,\n      clockNow = 0,\n      clockSkew = 0,\n      clock = typeof performance === \"object\" && performance.now ? performance : Date,\n      setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n    setTimeout(f, 17);\n  };\n  function now() {\n    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n  }\n\n  function clearNow() {\n    clockNow = 0;\n  }\n\n  function Timer() {\n    this._call = this._time = this._next = null;\n  }\n  Timer.prototype = timer.prototype = {\n    constructor: Timer,\n    restart: function (callback, delay, time) {\n      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n      if (!this._next && taskTail !== this) {\n        if (taskTail) taskTail._next = this;else taskHead = this;\n        taskTail = this;\n      }\n\n      this._call = callback;\n      this._time = time;\n      sleep();\n    },\n    stop: function () {\n      if (this._call) {\n        this._call = null;\n        this._time = Infinity;\n        sleep();\n      }\n    }\n  };\n  function timer(callback, delay, time) {\n    var t = new Timer();\n    t.restart(callback, delay, time);\n    return t;\n  }\n  function timerFlush() {\n    now(); // Get the current time, if not already set.\n\n    ++frame; // Pretend we\u2019ve set an alarm, if we haven\u2019t already.\n\n    var t = taskHead,\n        e;\n\n    while (t) {\n      if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n      t = t._next;\n    }\n\n    --frame;\n  }\n\n  function wake() {\n    clockNow = (clockLast = clock.now()) + clockSkew;\n    frame = timeout = 0;\n\n    try {\n      timerFlush();\n    } finally {\n      frame = 0;\n      nap();\n      clockNow = 0;\n    }\n  }\n\n  function poke() {\n    var now = clock.now(),\n        delay = now - clockLast;\n    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n  }\n\n  function nap() {\n    var t0,\n        t1 = taskHead,\n        t2,\n        time = Infinity;\n\n    while (t1) {\n      if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n      } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : taskHead = t2;\n      }\n    }\n\n    taskTail = t0;\n    sleep(time);\n  }\n\n  function sleep(time) {\n    if (frame) return; // Soonest alarm already set, or will be.\n\n    if (timeout) timeout = clearTimeout(timeout);\n    var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n    if (delay > 24) {\n      if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n      if (interval) interval = clearInterval(interval);\n    } else {\n      if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n      frame = 1, setFrame(wake);\n    }\n  }\n\n  // https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\n  const a = 1664525;\n  const c = 1013904223;\n  const m = 4294967296; // 2^32\n\n  function lcg () {\n    let s = 1;\n    return () => (s = (a * s + c) % m) / m;\n  }\n\n  function x(d) {\n    return d.x;\n  }\n  function y(d) {\n    return d.y;\n  }\n  var initialRadius = 10,\n      initialAngle = Math.PI * (3 - Math.sqrt(5));\n  function forceSimulation (nodes) {\n    var simulation,\n        alpha = 1,\n        alphaMin = 0.001,\n        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n        alphaTarget = 0,\n        velocityDecay = 0.6,\n        forces = new Map(),\n        stepper = timer(step),\n        event = dispatch(\"tick\", \"end\"),\n        random = lcg();\n    if (nodes == null) nodes = [];\n\n    function step() {\n      tick();\n      event.call(\"tick\", simulation);\n\n      if (alpha < alphaMin) {\n        stepper.stop();\n        event.call(\"end\", simulation);\n      }\n    }\n\n    function tick(iterations) {\n      var i,\n          n = nodes.length,\n          node;\n      if (iterations === undefined) iterations = 1;\n\n      for (var k = 0; k < iterations; ++k) {\n        alpha += (alphaTarget - alpha) * alphaDecay;\n        forces.forEach(function (force) {\n          force(alpha);\n        });\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;\n          if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;\n        }\n      }\n\n      return simulation;\n    }\n\n    function initializeNodes() {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.index = i;\n        if (node.fx != null) node.x = node.fx;\n        if (node.fy != null) node.y = node.fy;\n\n        if (isNaN(node.x) || isNaN(node.y)) {\n          var radius = initialRadius * Math.sqrt(0.5 + i),\n              angle = i * initialAngle;\n          node.x = radius * Math.cos(angle);\n          node.y = radius * Math.sin(angle);\n        }\n\n        if (isNaN(node.vx) || isNaN(node.vy)) {\n          node.vx = node.vy = 0;\n        }\n      }\n    }\n\n    function initializeForce(force) {\n      if (force.initialize) force.initialize(nodes, random);\n      return force;\n    }\n\n    initializeNodes();\n    return simulation = {\n      tick: tick,\n      restart: function () {\n        return stepper.restart(step), simulation;\n      },\n      stop: function () {\n        return stepper.stop(), simulation;\n      },\n      nodes: function (_) {\n        return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n      },\n      alpha: function (_) {\n        return arguments.length ? (alpha = +_, simulation) : alpha;\n      },\n      alphaMin: function (_) {\n        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n      },\n      alphaDecay: function (_) {\n        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n      },\n      alphaTarget: function (_) {\n        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n      },\n      velocityDecay: function (_) {\n        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n      },\n      randomSource: function (_) {\n        return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n      },\n      force: function (name, _) {\n        return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n      },\n      find: function (x, y, radius) {\n        var i = 0,\n            n = nodes.length,\n            dx,\n            dy,\n            d2,\n            node,\n            closest;\n        if (radius == null) radius = Infinity;else radius *= radius;\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dx = x - node.x;\n          dy = y - node.y;\n          d2 = dx * dx + dy * dy;\n          if (d2 < radius) closest = node, radius = d2;\n        }\n\n        return closest;\n      },\n      on: function (name, _) {\n        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n      }\n    };\n  }\n\n  function forceManyBody () {\n    var nodes,\n        node,\n        random,\n        alpha,\n        strength = constant(-30),\n        strengths,\n        distanceMin2 = 1,\n        distanceMax2 = Infinity,\n        theta2 = 0.81;\n\n    function force(_) {\n      var i,\n          n = nodes.length,\n          tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length,\n          node;\n      strengths = new Array(n);\n\n      for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n\n    function accumulate(quad) {\n      var strength = 0,\n          q,\n          c,\n          weight = 0,\n          x,\n          y,\n          i; // For internal nodes, accumulate forces from child quadrants.\n\n      if (quad.length) {\n        for (x = y = i = 0; i < 4; ++i) {\n          if ((q = quad[i]) && (c = Math.abs(q.value))) {\n            strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n          }\n        }\n\n        quad.x = x / weight;\n        quad.y = y / weight;\n      } // For leaf nodes, accumulate forces from coincident quadrants.\n      else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n\n        do strength += strengths[q.data.index]; while (q = q.next);\n      }\n\n      quad.value = strength;\n    }\n\n    function apply(quad, x1, _, x2) {\n      if (!quad.value) return true;\n      var x = quad.x - node.x,\n          y = quad.y - node.y,\n          w = x2 - x1,\n          l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n      // Limit forces for very close nodes; randomize direction if coincident.\n\n      if (w * w / theta2 < l) {\n        if (l < distanceMax2) {\n          if (x === 0) x = jiggle(random), l += x * x;\n          if (y === 0) y = jiggle(random), l += y * y;\n          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n          node.vx += x * quad.value * alpha / l;\n          node.vy += y * quad.value * alpha / l;\n        }\n\n        return true;\n      } // Otherwise, process points directly.\n      else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n      if (quad.data !== node || quad.next) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n      }\n\n      do if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      } while (quad = quad.next);\n    }\n\n    force.initialize = function (_nodes, _random) {\n      nodes = _nodes;\n      random = _random;\n      initialize();\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n    };\n\n    force.distanceMin = function (_) {\n      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n    };\n\n    force.distanceMax = function (_) {\n      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n    };\n\n    force.theta = function (_) {\n      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n    };\n\n    return force;\n  }\n\n  function forceX (x) {\n    var strength = constant(0.1),\n        nodes,\n        strengths,\n        xz;\n    if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length;\n      strengths = new Array(n);\n      xz = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function (_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n    };\n\n    force.x = function (_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n    };\n\n    return force;\n  }\n\n  function forceY (y) {\n    var strength = constant(0.1),\n        nodes,\n        strengths,\n        yz;\n    if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length;\n      strengths = new Array(n);\n      yz = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function (_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n    };\n\n    force.y = function (_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n    };\n\n    return force;\n  }\n\n  const ForceMap = {\n    center: forceCenter,\n    collide: forceCollide,\n    nbody: forceManyBody,\n    link: forceLink,\n    x: forceX,\n    y: forceY\n  };\n  const Forces = 'forces',\n        ForceParams = ['alpha', 'alphaMin', 'alphaTarget', 'velocityDecay', 'forces'],\n        ForceConfig = ['static', 'iterations'],\n        ForceOutput = ['x', 'y', 'vx', 'vy'];\n  /**\n   * Force simulation layout.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<object>} params.forces - The forces to apply.\n   */\n\n  function Force(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Force.Definition = {\n    'type': 'Force',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'static',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'restart',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'iterations',\n      'type': 'number',\n      'default': 300\n    }, {\n      'name': 'alpha',\n      'type': 'number',\n      'default': 1\n    }, {\n      'name': 'alphaMin',\n      'type': 'number',\n      'default': 0.001\n    }, {\n      'name': 'alphaTarget',\n      'type': 'number',\n      'default': 0\n    }, {\n      'name': 'velocityDecay',\n      'type': 'number',\n      'default': 0.4\n    }, {\n      'name': 'forces',\n      'type': 'param',\n      'array': true,\n      'params': [{\n        'key': {\n          'force': 'center'\n        },\n        'params': [{\n          'name': 'x',\n          'type': 'number',\n          'default': 0\n        }, {\n          'name': 'y',\n          'type': 'number',\n          'default': 0\n        }]\n      }, {\n        'key': {\n          'force': 'collide'\n        },\n        'params': [{\n          'name': 'radius',\n          'type': 'number',\n          'expr': true\n        }, {\n          'name': 'strength',\n          'type': 'number',\n          'default': 0.7\n        }, {\n          'name': 'iterations',\n          'type': 'number',\n          'default': 1\n        }]\n      }, {\n        'key': {\n          'force': 'nbody'\n        },\n        'params': [{\n          'name': 'strength',\n          'type': 'number',\n          'default': -30\n        }, {\n          'name': 'theta',\n          'type': 'number',\n          'default': 0.9\n        }, {\n          'name': 'distanceMin',\n          'type': 'number',\n          'default': 1\n        }, {\n          'name': 'distanceMax',\n          'type': 'number'\n        }]\n      }, {\n        'key': {\n          'force': 'link'\n        },\n        'params': [{\n          'name': 'links',\n          'type': 'data'\n        }, {\n          'name': 'id',\n          'type': 'field'\n        }, {\n          'name': 'distance',\n          'type': 'number',\n          'default': 30,\n          'expr': true\n        }, {\n          'name': 'strength',\n          'type': 'number',\n          'expr': true\n        }, {\n          'name': 'iterations',\n          'type': 'number',\n          'default': 1\n        }]\n      }, {\n        'key': {\n          'force': 'x'\n        },\n        'params': [{\n          'name': 'strength',\n          'type': 'number',\n          'default': 0.1\n        }, {\n          'name': 'x',\n          'type': 'field'\n        }]\n      }, {\n        'key': {\n          'force': 'y'\n        },\n        'params': [{\n          'name': 'strength',\n          'type': 'number',\n          'default': 0.1\n        }, {\n          'name': 'y',\n          'type': 'field'\n        }]\n      }]\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'array': true,\n      'modify': false,\n      'default': ForceOutput\n    }]\n  };\n  vegaUtil.inherits(Force, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var sim = this.value,\n          change = pulse.changed(pulse.ADD_REM),\n          params = _.modified(ForceParams),\n          iters = _.iterations || 300; // configure simulation\n\n\n      if (!sim) {\n        this.value = sim = simulation(pulse.source, _);\n        sim.on('tick', rerun(pulse.dataflow, this));\n\n        if (!_.static) {\n          change = true;\n          sim.tick(); // ensure we run on init\n        }\n\n        pulse.modifies('index');\n      } else {\n        if (change) {\n          pulse.modifies('index');\n          sim.nodes(pulse.source);\n        }\n\n        if (params || pulse.changed(pulse.MOD)) {\n          setup(sim, _, 0, pulse);\n        }\n      } // run simulation\n\n\n      if (params || change || _.modified(ForceConfig) || pulse.changed() && _.restart) {\n        sim.alpha(Math.max(sim.alpha(), _.alpha || 1)).alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n        if (_.static) {\n          for (sim.stop(); --iters >= 0;) sim.tick();\n        } else {\n          if (sim.stopped()) sim.restart();\n          if (!change) return pulse.StopPropagation; // defer to sim ticks\n        }\n      }\n\n      return this.finish(_, pulse);\n    },\n\n    finish(_, pulse) {\n      const dataflow = pulse.dataflow; // inspect dependencies, touch link source data\n\n      for (let args = this._argops, j = 0, m = args.length, arg; j < m; ++j) {\n        arg = args[j];\n\n        if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n          continue;\n        }\n\n        for (var ops = arg.op._argops, i = 0, n = ops.length, op; i < n; ++i) {\n          if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n            dataflow.pulse(op, dataflow.changeset().reflow());\n            break;\n          }\n        }\n      } // reflow all nodes\n\n\n      return pulse.reflow(_.modified()).modifies(ForceOutput);\n    }\n\n  });\n\n  function rerun(df, op) {\n    return () => df.touch(op).run();\n  }\n\n  function simulation(nodes, _) {\n    const sim = forceSimulation(nodes),\n          stop = sim.stop,\n          restart = sim.restart;\n    let stopped = false;\n\n    sim.stopped = () => stopped;\n\n    sim.restart = () => (stopped = false, restart());\n\n    sim.stop = () => (stopped = true, stop());\n\n    return setup(sim, _, true).on('end', () => stopped = true);\n  }\n\n  function setup(sim, _, init, pulse) {\n    var f = vegaUtil.array(_.forces),\n        i,\n        n,\n        p,\n        name;\n\n    for (i = 0, n = ForceParams.length; i < n; ++i) {\n      p = ForceParams[i];\n      if (p !== Forces && _.modified(p)) sim[p](_[p]);\n    }\n\n    for (i = 0, n = f.length; i < n; ++i) {\n      name = Forces + i;\n      p = init || _.modified(Forces, i) ? getForce(f[i]) : pulse && modified(f[i], pulse) ? sim.force(name) : null;\n      if (p) sim.force(name, p);\n    }\n\n    for (n = sim.numForces || 0; i < n; ++i) {\n      sim.force(Forces + i, null); // remove\n    }\n\n    sim.numForces = f.length;\n    return sim;\n  }\n\n  function modified(f, pulse) {\n    var k, v;\n\n    for (k in f) {\n      if (vegaUtil.isFunction(v = f[k]) && pulse.modified(vegaUtil.accessorFields(v))) return 1;\n    }\n\n    return 0;\n  }\n\n  function getForce(_) {\n    var f, p;\n\n    if (!vegaUtil.hasOwnProperty(ForceMap, _.force)) {\n      vegaUtil.error('Unrecognized force: ' + _.force);\n    }\n\n    f = ForceMap[_.force]();\n\n    for (p in _) {\n      if (vegaUtil.isFunction(f[p])) setForceParam(f[p], _[p], _);\n    }\n\n    return f;\n  }\n\n  function setForceParam(f, v, _) {\n    f(vegaUtil.isFunction(v) ? d => v(d, _) : v);\n  }\n\n  exports.force = Force;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaDataflow","vegaUtil","add","tree","x","y","d","isNaN","parent","node","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","xm","ym","right","bottom","i","length","xp","_x","call","yp","_y","next","Array","j","Quad","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","undefined","leaf_copy","copy","constant","x$1","vx","y$1","vy","index","find","nodeById","nodeId","get","Error","dispatch","n","arguments","_","t","test","Dispatch","parseTypenames","typenames","types","trim","split","map","name","indexOf","slice","hasOwnProperty","type","set","callback","noop","concat","push","value","clearNow","clockNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","clockLast","clock","now","clockSkew","frame","timeout","setFrame","taskHead","e","t1","Infinity","t0","t2","taskTail","sleep","poke","pokeDelay","clearTimeout","setTimeout","interval","clearInterval","setInterval","lcg","s","a","c","m","forceSimulation","step","tick","event","simulation","alpha","alphaMin","stepper","stop","iterations","k","alphaTarget","alphaDecay","forces","forEach","force","fx","velocityDecay","fy","initializeNodes","radius","initialRadius","Math","sqrt","angle","initialAngle","cos","sin","initializeForce","initialize","random","pow","Map","randomSource","delete","dx","dy","d2","closest","on","Force","params","Transform","rerun","df","op","touch","run","sim","stopped","sim.stopped","sim.restart","sim.stop","setup","init","pulse","f","array","ForceParams","p","Forces","modified","ForceMap","error","isFunction","setForceParam","v","accessorFields","numForces","treeProto","prototype","treeProto.copy","child","source","target","pop","tree_add","cover","xz","yz","tree_cover","floor","z","tree_data","visit","extent","tree_extent","tree_find","x2","y2","x3","y3","quads","q","remove","tree_remove","previous","retainer","removeAll","root","tree_root","size","tree_size","tree_visit","visitAfter","tree_visitAfter","tree_x","tree_y","constructor","typename","T","that","args","apply","performance","Date","window","requestAnimationFrame","bind","TypeError","PI","center","forceCenter","sx","sy","strength","force.initialize","force.x","force.y","force.strength","collide","forceCollide","quad","rj","r","ri","xi","yi","l","ri2","prepare","radii","_nodes","_random","force.iterations","force.radius","nbody","forceManyBody","accumulate","strengths","weight","abs","w","theta2","distanceMax2","distanceMin2","distanceMin","force.distanceMin","distanceMax","force.distanceMax","theta","force.theta","link","forceLink","links","distances","b","bias","id","count","initializeStrength","initializeDistance","distance","defaultStrength","min","force.links","force.id","force.distance","forceX","forceY","ForceConfig","ForceOutput","Definition","inherits","transform","change","changed","ADD_REM","iters","modifies","MOD","dataflow","static","max","StopPropagation","finish","_argops","arg","_argval","ops","changeset","reflow","Object","defineProperty"]
}
