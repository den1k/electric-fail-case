{"version":3,"sources":["lambdaisland/regal/platform.cljs"],"mappings":";AAGA,0CAAA,1CAAMA,4FAAUC;AAAhB,AACE,oBAAA,bAACC,SAAYD;;AAEf,0CAAA,1CAAME,4FAAUC;AAAhB,AACE,OAACC,0BACA,WAAA,XAAWD;;AAEd,4CAAA,5CAAME,gGAAYC;AAAlB,AACE,OAAqBA;;AAEvB,wCAAA,xCAAMC,wFAAWJ;AAAjB,AACE,kBAAA,XAACF,SAAYE","names":["lambdaisland.regal.platform/hex->int","hex","js/parseInt","lambdaisland.regal.platform/int->hex","i","clojure.string/upper-case","lambdaisland.regal.platform/char->long","ch","lambdaisland.regal.platform/parse-int"],"sourcesContent":["(ns lambdaisland.regal.platform\n  (:require [clojure.string :as str])) ;; cljs\n\n(defn hex->int [hex]\n  (js/parseInt hex 16))\n\n(defn int->hex [i]\n  (str/upper-case\n   (.toString i 16)))\n\n(defn char->long [ch]\n  (.charCodeAt ^String ch))\n\n(defn parse-int [i]\n  (js/parseInt i 10))\n"]}