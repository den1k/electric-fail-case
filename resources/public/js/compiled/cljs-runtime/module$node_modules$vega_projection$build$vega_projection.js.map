{
"version":3,
"file":"module$node_modules$vega_projection$build$vega_projection.js",
"lineCount":93,
"mappings":"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",
"sources":["node_modules/vega-projection/build/vega-projection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_projection$build$vega_projection\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}));\n})(this, (function (exports) { 'use strict';\n\n  // https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\n  class Adder {\n    constructor() {\n      this._partials = new Float64Array(32);\n      this._n = 0;\n    }\n\n    add(x) {\n      const p = this._partials;\n      let i = 0;\n\n      for (let j = 0; j < this._n && j < 32; j++) {\n        const y = p[j],\n              hi = x + y,\n              lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n        if (lo) p[i++] = lo;\n        x = hi;\n      }\n\n      p[i] = x;\n      this._n = i + 1;\n      return this;\n    }\n\n    valueOf() {\n      const p = this._partials;\n      let n = this._n,\n          x,\n          y,\n          lo,\n          hi = 0;\n\n      if (n > 0) {\n        hi = p[--n];\n\n        while (n > 0) {\n          x = hi;\n          y = p[--n];\n          hi = x + y;\n          lo = y - (hi - x);\n          if (lo) break;\n        }\n\n        if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n          y = lo * 2;\n          x = hi + y;\n          if (y == x - hi) hi = x;\n        }\n      }\n\n      return hi;\n    }\n\n  }\n\n  function* flatten(arrays) {\n    for (const array of arrays) {\n      yield* array;\n    }\n  }\n\n  function merge(arrays) {\n    return Array.from(flatten(arrays));\n  }\n\n  var epsilon$1 = 1e-6;\n  var epsilon2 = 1e-12;\n  var pi$1 = Math.PI;\n  var halfPi$1 = pi$1 / 2;\n  var quarterPi = pi$1 / 4;\n  var tau = pi$1 * 2;\n  var degrees = 180 / pi$1;\n  var radians = pi$1 / 180;\n  var abs$1 = Math.abs;\n  var atan = Math.atan;\n  var atan2 = Math.atan2;\n  var cos$1 = Math.cos;\n  var exp = Math.exp;\n  var log = Math.log;\n  var pow = Math.pow;\n  var sin$1 = Math.sin;\n  var sign = Math.sign || function (x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  };\n  var sqrt$1 = Math.sqrt;\n  var tan = Math.tan;\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? pi$1 : Math.acos(x);\n  }\n  function asin$1(x) {\n    return x > 1 ? halfPi$1 : x < -1 ? -halfPi$1 : Math.asin(x);\n  }\n\n  function noop() {}\n\n  function streamGeometry(geometry, stream) {\n    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n      streamGeometryType[geometry.type](geometry, stream);\n    }\n  }\n\n  var streamObjectType = {\n    Feature: function (object, stream) {\n      streamGeometry(object.geometry, stream);\n    },\n    FeatureCollection: function (object, stream) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) streamGeometry(features[i].geometry, stream);\n    }\n  };\n  var streamGeometryType = {\n    Sphere: function (object, stream) {\n      stream.sphere();\n    },\n    Point: function (object, stream) {\n      object = object.coordinates;\n      stream.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function (object, stream) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    },\n    LineString: function (object, stream) {\n      streamLine(object.coordinates, stream, 0);\n    },\n    MultiLineString: function (object, stream) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) streamLine(coordinates[i], stream, 0);\n    },\n    Polygon: function (object, stream) {\n      streamPolygon(object.coordinates, stream);\n    },\n    MultiPolygon: function (object, stream) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) streamPolygon(coordinates[i], stream);\n    },\n    GeometryCollection: function (object, stream) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) streamGeometry(geometries[i], stream);\n    }\n  };\n\n  function streamLine(coordinates, stream, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    stream.lineStart();\n\n    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\n    stream.lineEnd();\n  }\n\n  function streamPolygon(coordinates, stream) {\n    var i = -1,\n        n = coordinates.length;\n    stream.polygonStart();\n\n    while (++i < n) streamLine(coordinates[i], stream, 1);\n\n    stream.polygonEnd();\n  }\n\n  function geoStream (object, stream) {\n    if (object && streamObjectType.hasOwnProperty(object.type)) {\n      streamObjectType[object.type](object, stream);\n    } else {\n      streamGeometry(object, stream);\n    }\n  }\n\n  function spherical(cartesian) {\n    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n  }\n  function cartesian(spherical) {\n    var lambda = spherical[0],\n        phi = spherical[1],\n        cosPhi = cos$1(phi);\n    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n  }\n  function cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  } // TODO return a\n\n  function cartesianAddInPlace(a, b) {\n    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n  }\n  function cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  } // TODO return d\n\n  function cartesianNormalizeInPlace(d) {\n    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l, d[1] /= l, d[2] /= l;\n  }\n\n  function compose (a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function rotationIdentity(lambda, phi) {\n    return [abs$1(lambda) > pi$1 ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n  }\n\n  rotationIdentity.invert = rotationIdentity;\n  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n  }\n\n  function forwardRotationLambda(deltaLambda) {\n    return function (lambda, phi) {\n      return lambda += deltaLambda, [lambda > pi$1 ? lambda - tau : lambda < -pi$1 ? lambda + tau : lambda, phi];\n    };\n  }\n\n  function rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n  }\n\n  function rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos$1(deltaPhi),\n        sinDeltaPhi = sin$1(deltaPhi),\n        cosDeltaGamma = cos$1(deltaGamma),\n        sinDeltaGamma = sin$1(deltaGamma);\n\n    function rotation(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaPhi + x * sinDeltaPhi;\n      return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin$1(k * cosDeltaGamma + y * sinDeltaGamma)];\n    }\n\n    rotation.invert = function (lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaGamma - y * sinDeltaGamma;\n      return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin$1(k * cosDeltaPhi - x * sinDeltaPhi)];\n    };\n\n    return rotation;\n  }\n\n  function rotation (rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    };\n\n    return forward;\n  }\n\n  function circleStream(stream, radius, delta, direction, t0, t1) {\n    if (!delta) return;\n    var cosRadius = cos$1(radius),\n        sinRadius = sin$1(radius),\n        step = direction * delta;\n\n    if (t0 == null) {\n      t0 = radius + direction * tau;\n      t1 = radius - step / 2;\n    } else {\n      t0 = circleRadius(cosRadius, t0);\n      t1 = circleRadius(cosRadius, t1);\n      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n    }\n\n    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n      stream.point(point[0], point[1]);\n    }\n  } // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\n  function circleRadius(cosRadius, point) {\n    point = cartesian(point), point[0] -= cosRadius;\n    cartesianNormalizeInPlace(point);\n    var radius = acos(-point[1]);\n    return ((-point[2] < 0 ? -radius : radius) + tau - epsilon$1) % tau;\n  }\n\n  function clipBuffer () {\n    var lines = [],\n        line;\n    return {\n      point: function (x, y, m) {\n        line.push([x, y, m]);\n      },\n      lineStart: function () {\n        lines.push(line = []);\n      },\n      lineEnd: noop,\n      rejoin: function () {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      },\n      result: function () {\n        var result = lines;\n        lines = [];\n        line = null;\n        return result;\n      }\n    };\n  }\n\n  function pointEqual (a, b) {\n    return abs$1(a[0] - b[0]) < epsilon$1 && abs$1(a[1] - b[1]) < epsilon$1;\n  }\n\n  function Intersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other; // another intersection\n\n    this.e = entry; // is an entry?\n\n    this.v = false; // visited\n\n    this.n = this.p = null; // next & previous\n  } // A generalized polygon clipping algorithm: given a polygon that has been cut\n  // into its visible line segments, and rejoins the segments by interpolating\n  // along the clip edge.\n\n\n  function clipRejoin (segments, compareIntersection, startInside, interpolate, stream) {\n    var subject = [],\n        clip = [],\n        i,\n        n;\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n],\n          x;\n\n      if (pointEqual(p0, p1)) {\n        if (!p0[2] && !p1[2]) {\n          stream.lineStart();\n\n          for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\n          stream.lineEnd();\n          return;\n        } // handle degenerate cases by moving the point\n\n\n        p1[0] += 2 * epsilon$1;\n      }\n\n      subject.push(x = new Intersection(p0, segment, null, true));\n      clip.push(x.o = new Intersection(p0, null, x, false));\n      subject.push(x = new Intersection(p1, segment, null, false));\n      clip.push(x.o = new Intersection(p1, null, x, true));\n    });\n    if (!subject.length) return;\n    clip.sort(compareIntersection);\n    link(subject);\n    link(clip);\n\n    for (i = 0, n = clip.length; i < n; ++i) {\n      clip[i].e = startInside = !startInside;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      // Find first unvisited intersection.\n      var current = start,\n          isSubject = true;\n\n      while (current.v) if ((current = current.n) === start) return;\n\n      points = current.z;\n      stream.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, stream);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, stream);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      stream.lineEnd();\n    }\n  }\n\n  function link(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function longitude(point) {\n    return abs$1(point[0]) <= pi$1 ? point[0] : sign(point[0]) * ((abs$1(point[0]) + pi$1) % tau - pi$1);\n  }\n\n  function polygonContains (polygon, point) {\n    var lambda = longitude(point),\n        phi = point[1],\n        sinPhi = sin$1(phi),\n        normal = [sin$1(lambda), -cos$1(lambda), 0],\n        angle = 0,\n        winding = 0;\n    var sum = new Adder();\n    if (sinPhi === 1) phi = halfPi$1 + epsilon$1;else if (sinPhi === -1) phi = -halfPi$1 - epsilon$1;\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      if (!(m = (ring = polygon[i]).length)) continue;\n      var ring,\n          m,\n          point0 = ring[m - 1],\n          lambda0 = longitude(point0),\n          phi0 = point0[1] / 2 + quarterPi,\n          sinPhi0 = sin$1(phi0),\n          cosPhi0 = cos$1(phi0);\n\n      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n        var point1 = ring[j],\n            lambda1 = longitude(point1),\n            phi1 = point1[1] / 2 + quarterPi,\n            sinPhi1 = sin$1(phi1),\n            cosPhi1 = cos$1(phi1),\n            delta = lambda1 - lambda0,\n            sign = delta >= 0 ? 1 : -1,\n            absDelta = sign * delta,\n            antimeridian = absDelta > pi$1,\n            k = sinPhi0 * sinPhi1;\n        sum.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n        angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point\u2019s meridian (lambda),\n        // and are the latitudes smaller than the parallel (phi)?\n\n        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n          cartesianNormalizeInPlace(arc);\n          var intersection = cartesianCross(normal, arc);\n          cartesianNormalizeInPlace(intersection);\n          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\n          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n          }\n        }\n      }\n    } // First, determine whether the South pole is inside or outside:\n    //\n    // It is inside if:\n    // * the polygon winds around it in a clockwise direction.\n    // * the polygon does not (cumulatively) wind around it, but has a negative\n    //   (counter-clockwise) area.\n    //\n    // Second, count the (signed) number of times a segment crosses a lambda\n    // from the point to the South pole.  If it is zero, then the point is the\n    // same side as the South pole.\n\n\n    return (angle < -epsilon$1 || angle < epsilon$1 && sum < -epsilon2) ^ winding & 1;\n  }\n\n  function clip (pointVisible, clipLine, interpolate, start) {\n    return function (sink) {\n      var line = clipLine(sink),\n          ringBuffer = clipBuffer(),\n          ringSink = clipLine(ringBuffer),\n          polygonStarted = false,\n          polygon,\n          segments,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function () {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function () {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = merge(segments);\n          var startInside = polygonContains(polygon, start);\n\n          if (segments.length) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n          } else if (startInside) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            interpolate(null, null, 1, sink);\n            sink.lineEnd();\n          }\n\n          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function () {\n          sink.polygonStart();\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n          sink.polygonEnd();\n        }\n      };\n\n      function point(lambda, phi) {\n        if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n      }\n\n      function pointLine(lambda, phi) {\n        line.point(lambda, phi);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      function pointRing(lambda, phi) {\n        ring.push([lambda, phi]);\n        ringSink.point(lambda, phi);\n      }\n\n      function ringStart() {\n        ringSink.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringSink.lineEnd();\n        var clean = ringSink.clean(),\n            ringSegments = ringBuffer.result(),\n            i,\n            n = ringSegments.length,\n            m,\n            segment,\n            point;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return; // No intersections.\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n\n          if ((m = segment.length - 1) > 0) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n\n            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\n            sink.lineEnd();\n          }\n\n          return;\n        } // Rejoin connected segments.\n        // TODO reuse ringBuffer.rejoin()?\n\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(validSegment));\n      }\n\n      return clip;\n    };\n  }\n\n  function validSegment(segment) {\n    return segment.length > 1;\n  } // Intersections are sorted along the clip edge. For both antimeridian cutting\n  // and circle clipping, the same comparison is used.\n\n\n  function compareIntersection(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfPi$1 - epsilon$1 : halfPi$1 - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi$1 - epsilon$1 : halfPi$1 - b[1]);\n  }\n\n  var clipAntimeridian = clip(function () {\n    return true;\n  }, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi$1, -halfPi$1]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n  // intersections or the line was empty; 1 - no intersections; 2 - there were\n  // intersections, and the first and last segments should be rejoined.\n\n  function clipAntimeridianLine(stream) {\n    var lambda0 = NaN,\n        phi0 = NaN,\n        sign0 = NaN,\n        clean; // no intersections\n\n    return {\n      lineStart: function () {\n        stream.lineStart();\n        clean = 1;\n      },\n      point: function (lambda1, phi1) {\n        var sign1 = lambda1 > 0 ? pi$1 : -pi$1,\n            delta = abs$1(lambda1 - lambda0);\n\n        if (abs$1(delta - pi$1) < epsilon$1) {\n          // line crosses a pole\n          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$1 : -halfPi$1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          stream.point(lambda1, phi0);\n          clean = 0;\n        } else if (sign0 !== sign1 && delta >= pi$1) {\n          // line crosses antimeridian\n          if (abs$1(lambda0 - sign0) < epsilon$1) lambda0 -= sign0 * epsilon$1; // handle degeneracies\n\n          if (abs$1(lambda1 - sign1) < epsilon$1) lambda1 -= sign1 * epsilon$1;\n          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          clean = 0;\n        }\n\n        stream.point(lambda0 = lambda1, phi0 = phi1);\n        sign0 = sign1;\n      },\n      lineEnd: function () {\n        stream.lineEnd();\n        lambda0 = phi0 = NaN;\n      },\n      clean: function () {\n        return 2 - clean; // if intersections, rejoin first and last segments\n      }\n    };\n  }\n\n  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n    var cosPhi0,\n        cosPhi1,\n        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n    return abs$1(sinLambda0Lambda1) > epsilon$1 ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1) - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n  }\n\n  function clipAntimeridianInterpolate(from, to, direction, stream) {\n    var phi;\n\n    if (from == null) {\n      phi = direction * halfPi$1;\n      stream.point(-pi$1, phi);\n      stream.point(0, phi);\n      stream.point(pi$1, phi);\n      stream.point(pi$1, 0);\n      stream.point(pi$1, -phi);\n      stream.point(0, -phi);\n      stream.point(-pi$1, -phi);\n      stream.point(-pi$1, 0);\n      stream.point(-pi$1, phi);\n    } else if (abs$1(from[0] - to[0]) > epsilon$1) {\n      var lambda = from[0] < to[0] ? pi$1 : -pi$1;\n      phi = direction * lambda / 2;\n      stream.point(-lambda, phi);\n      stream.point(0, phi);\n      stream.point(lambda, phi);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function clipCircle (radius) {\n    var cr = cos$1(radius),\n        delta = 6 * radians,\n        smallRadius = cr > 0,\n        notHemisphere = abs$1(cr) > epsilon$1; // TODO optimise for this common case\n\n    function interpolate(from, to, direction, stream) {\n      circleStream(stream, radius, delta, direction, from, to);\n    }\n\n    function visible(lambda, phi) {\n      return cos$1(lambda) * cos$1(phi) > cr;\n    } // Takes a line and cuts into visible segments. Return values used for polygon\n    // clipping: 0 - there were intersections or the line was empty; 1 - no\n    // intersections 2 - there were intersections, and the first and last segments\n    // should be rejoined.\n\n\n    function clipLine(stream) {\n      var point0, // previous point\n      c0, // code for previous point\n      v0, // visibility of previous point\n      v00, // visibility of first point\n      clean; // no intersections\n\n      return {\n        lineStart: function () {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function (lambda, phi) {\n          var point1 = [lambda, phi],\n              point2,\n              v = visible(lambda, phi),\n              c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi$1 : -pi$1), phi) : 0;\n          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) point1[2] = 1;\n          }\n\n          if (v !== v0) {\n            clean = 0;\n\n            if (v) {\n              // outside going in\n              stream.lineStart();\n              point2 = intersect(point1, point0);\n              stream.point(point2[0], point2[1]);\n            } else {\n              // inside going out\n              point2 = intersect(point0, point1);\n              stream.point(point2[0], point2[1], 2);\n              stream.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t; // If the codes for two points are different, or are both zero,\n            // and there this segment intersects with the small circle.\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n\n              if (smallRadius) {\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n              } else {\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1], 3);\n              }\n            }\n          }\n\n          if (v && (!point0 || !pointEqual(point0, point1))) {\n            stream.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function () {\n          if (v0) stream.lineEnd();\n          point0 = null;\n        },\n        // Rejoin first and last segments if there were intersections and the first\n        // and last points were visible.\n        clean: function () {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    } // Intersects the great circle between a and b with the clip circle.\n\n\n    function intersect(a, b, two) {\n      var pa = cartesian(a),\n          pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2a2f n2).\n\n      var n1 = [1, 0, 0],\n          // normal\n      n2 = cartesianCross(pa, pb),\n          n2n2 = cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          // cartesianDot(n1, n2),\n      determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = cartesianCross(n1, n2),\n          A = cartesianScale(n1, c1),\n          B = cartesianScale(n2, c2);\n      cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n      var u = n1xn2,\n          w = cartesianDot(A, u),\n          uu = cartesianDot(u, u),\n          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = sqrt$1(t2),\n          q = cartesianScale(u, (-w - t) / uu);\n      cartesianAddInPlace(q, A);\n      q = spherical(q);\n      if (!two) return q; // Two intersection points.\n\n      var lambda0 = a[0],\n          lambda1 = b[0],\n          phi0 = a[1],\n          phi1 = b[1],\n          z;\n      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n      var delta = lambda1 - lambda0,\n          polar = abs$1(delta - pi$1) < epsilon$1,\n          meridian = polar || delta < epsilon$1;\n      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n      if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs$1(q[0] - lambda0) < epsilon$1 ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi$1 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n        var q1 = cartesianScale(u, (-w + t) / uu);\n        cartesianAddInPlace(q1, A);\n        return [q, spherical(q1)];\n      }\n    } // Generates a 4-bit vector representing the location of a point relative to\n    // the small circle's bounding box.\n\n\n    function code(lambda, phi) {\n      var r = smallRadius ? radius : pi$1 - radius,\n          code = 0;\n      if (lambda < -r) code |= 1; // left\n      else if (lambda > r) code |= 2; // right\n\n      if (phi < -r) code |= 4; // below\n      else if (phi > r) code |= 8; // above\n\n      return code;\n    }\n\n    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$1, radius - pi$1]);\n  }\n\n  function clipLine (a, b, x0, y0, x1, y1) {\n    var ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n    return true;\n  }\n\n  var clipMax = 1e9,\n      clipMin = -clipMax; // TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\n  function clipRectangle(x0, y0, x1, y1) {\n    function visible(x, y) {\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n    }\n\n    function interpolate(from, to, direction, stream) {\n      var a = 0,\n          a1 = 0;\n\n      if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);\n      } else {\n        stream.point(to[0], to[1]);\n      }\n    }\n\n    function corner(p, direction) {\n      return abs$1(p[0] - x0) < epsilon$1 ? direction > 0 ? 0 : 3 : abs$1(p[0] - x1) < epsilon$1 ? direction > 0 ? 2 : 1 : abs$1(p[1] - y0) < epsilon$1 ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n    }\n\n    function compareIntersection(a, b) {\n      return comparePoint(a.x, b.x);\n    }\n\n    function comparePoint(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n\n    return function (stream) {\n      var activeStream = stream,\n          bufferStream = clipBuffer(),\n          segments,\n          polygon,\n          ring,\n          x__,\n          y__,\n          v__,\n          // first point\n      x_,\n          y_,\n          v_,\n          // previous point\n      first,\n          clean;\n      var clipStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: polygonStart,\n        polygonEnd: polygonEnd\n      };\n\n      function point(x, y) {\n        if (visible(x, y)) activeStream.point(x, y);\n      }\n\n      function polygonInside() {\n        var winding = 0;\n\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n            if (a1 <= y1) {\n              if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n            } else {\n              if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n            }\n          }\n        }\n\n        return winding;\n      } // Buffer geometry within a polygon and then clip it en masse.\n\n\n      function polygonStart() {\n        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n      }\n\n      function polygonEnd() {\n        var startInside = polygonInside(),\n            cleanInside = clean && startInside,\n            visible = (segments = merge(segments)).length;\n\n        if (cleanInside || visible) {\n          stream.polygonStart();\n\n          if (cleanInside) {\n            stream.lineStart();\n            interpolate(null, null, 1, stream);\n            stream.lineEnd();\n          }\n\n          if (visible) {\n            clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n          }\n\n          stream.polygonEnd();\n        }\n\n        activeStream = stream, segments = polygon = ring = null;\n      }\n\n      function lineStart() {\n        clipStream.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      } // TODO rather than special-case polygons, simply handle them separately.\n      // Ideally, coincident intersection points should be jittered to avoid\n      // clipping issues.\n\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferStream.rejoin();\n          segments.push(bufferStream.result());\n        }\n\n        clipStream.point = point;\n        if (v_) activeStream.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        var v = visible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n          }\n        } else {\n          if (v && v_) activeStream.point(x, y);else {\n            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n            if (clipLine(a, b, x0, y0, x1, y1)) {\n              if (!v_) {\n                activeStream.lineStart();\n                activeStream.point(a[0], a[1]);\n              }\n\n              activeStream.point(b[0], b[1]);\n              if (!v) activeStream.lineEnd();\n              clean = false;\n            } else if (v) {\n              activeStream.lineStart();\n              activeStream.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clipStream;\n    };\n  }\n\n  var identity = (x => x);\n\n  var areaSum = new Adder(),\n      areaRingSum = new Adder(),\n      x00$2,\n      y00$2,\n      x0$3,\n      y0$3;\n  var areaStream = {\n    point: noop,\n    lineStart: noop,\n    lineEnd: noop,\n    polygonStart: function () {\n      areaStream.lineStart = areaRingStart;\n      areaStream.lineEnd = areaRingEnd;\n    },\n    polygonEnd: function () {\n      areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n      areaSum.add(abs$1(areaRingSum));\n      areaRingSum = new Adder();\n    },\n    result: function () {\n      var area = areaSum / 2;\n      areaSum = new Adder();\n      return area;\n    }\n  };\n\n  function areaRingStart() {\n    areaStream.point = areaPointFirst;\n  }\n\n  function areaPointFirst(x, y) {\n    areaStream.point = areaPoint;\n    x00$2 = x0$3 = x, y00$2 = y0$3 = y;\n  }\n\n  function areaPoint(x, y) {\n    areaRingSum.add(y0$3 * x - x0$3 * y);\n    x0$3 = x, y0$3 = y;\n  }\n\n  function areaRingEnd() {\n    areaPoint(x00$2, y00$2);\n  }\n\n  var pathArea = areaStream;\n\n  var x0$2 = Infinity,\n      y0$2 = x0$2,\n      x1 = -x0$2,\n      y1 = x1;\n  var boundsStream = {\n    point: boundsPoint,\n    lineStart: noop,\n    lineEnd: noop,\n    polygonStart: noop,\n    polygonEnd: noop,\n    result: function () {\n      var bounds = [[x0$2, y0$2], [x1, y1]];\n      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n      return bounds;\n    }\n  };\n\n  function boundsPoint(x, y) {\n    if (x < x0$2) x0$2 = x;\n    if (x > x1) x1 = x;\n    if (y < y0$2) y0$2 = y;\n    if (y > y1) y1 = y;\n  }\n\n  var boundsStream$1 = boundsStream;\n\n  var X0 = 0,\n      Y0 = 0,\n      Z0 = 0,\n      X1 = 0,\n      Y1 = 0,\n      Z1 = 0,\n      X2 = 0,\n      Y2 = 0,\n      Z2 = 0,\n      x00$1,\n      y00$1,\n      x0$1,\n      y0$1;\n  var centroidStream = {\n    point: centroidPoint,\n    lineStart: centroidLineStart,\n    lineEnd: centroidLineEnd,\n    polygonStart: function () {\n      centroidStream.lineStart = centroidRingStart;\n      centroidStream.lineEnd = centroidRingEnd;\n    },\n    polygonEnd: function () {\n      centroidStream.point = centroidPoint;\n      centroidStream.lineStart = centroidLineStart;\n      centroidStream.lineEnd = centroidLineEnd;\n    },\n    result: function () {\n      var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n      X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n      return centroid;\n    }\n  };\n\n  function centroidPoint(x, y) {\n    X0 += x;\n    Y0 += y;\n    ++Z0;\n  }\n\n  function centroidLineStart() {\n    centroidStream.point = centroidPointFirstLine;\n  }\n\n  function centroidPointFirstLine(x, y) {\n    centroidStream.point = centroidPointLine;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n\n  function centroidPointLine(x, y) {\n    var dx = x - x0$1,\n        dy = y - y0$1,\n        z = sqrt$1(dx * dx + dy * dy);\n    X1 += z * (x0$1 + x) / 2;\n    Y1 += z * (y0$1 + y) / 2;\n    Z1 += z;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n\n  function centroidLineEnd() {\n    centroidStream.point = centroidPoint;\n  }\n\n  function centroidRingStart() {\n    centroidStream.point = centroidPointFirstRing;\n  }\n\n  function centroidRingEnd() {\n    centroidPointRing(x00$1, y00$1);\n  }\n\n  function centroidPointFirstRing(x, y) {\n    centroidStream.point = centroidPointRing;\n    centroidPoint(x00$1 = x0$1 = x, y00$1 = y0$1 = y);\n  }\n\n  function centroidPointRing(x, y) {\n    var dx = x - x0$1,\n        dy = y - y0$1,\n        z = sqrt$1(dx * dx + dy * dy);\n    X1 += z * (x0$1 + x) / 2;\n    Y1 += z * (y0$1 + y) / 2;\n    Z1 += z;\n    z = y0$1 * x - x0$1 * y;\n    X2 += z * (x0$1 + x);\n    Y2 += z * (y0$1 + y);\n    Z2 += z * 3;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n\n  var pathCentroid = centroidStream;\n\n  function PathContext(context) {\n    this._context = context;\n  }\n  PathContext.prototype = {\n    _radius: 4.5,\n    pointRadius: function (_) {\n      return this._radius = _, this;\n    },\n    polygonStart: function () {\n      this._line = 0;\n    },\n    polygonEnd: function () {\n      this._line = NaN;\n    },\n    lineStart: function () {\n      this._point = 0;\n    },\n    lineEnd: function () {\n      if (this._line === 0) this._context.closePath();\n      this._point = NaN;\n    },\n    point: function (x, y) {\n      switch (this._point) {\n        case 0:\n          {\n            this._context.moveTo(x, y);\n\n            this._point = 1;\n            break;\n          }\n\n        case 1:\n          {\n            this._context.lineTo(x, y);\n\n            break;\n          }\n\n        default:\n          {\n            this._context.moveTo(x + this._radius, y);\n\n            this._context.arc(x, y, this._radius, 0, tau);\n\n            break;\n          }\n      }\n    },\n    result: noop\n  };\n\n  var lengthSum = new Adder(),\n      lengthRing,\n      x00,\n      y00,\n      x0,\n      y0;\n  var lengthStream = {\n    point: noop,\n    lineStart: function () {\n      lengthStream.point = lengthPointFirst;\n    },\n    lineEnd: function () {\n      if (lengthRing) lengthPoint(x00, y00);\n      lengthStream.point = noop;\n    },\n    polygonStart: function () {\n      lengthRing = true;\n    },\n    polygonEnd: function () {\n      lengthRing = null;\n    },\n    result: function () {\n      var length = +lengthSum;\n      lengthSum = new Adder();\n      return length;\n    }\n  };\n\n  function lengthPointFirst(x, y) {\n    lengthStream.point = lengthPoint;\n    x00 = x0 = x, y00 = y0 = y;\n  }\n\n  function lengthPoint(x, y) {\n    x0 -= x, y0 -= y;\n    lengthSum.add(sqrt$1(x0 * x0 + y0 * y0));\n    x0 = x, y0 = y;\n  }\n\n  var pathMeasure = lengthStream;\n\n  function PathString() {\n    this._string = [];\n  }\n  PathString.prototype = {\n    _radius: 4.5,\n    _circle: circle(4.5),\n    pointRadius: function (_) {\n      if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n      return this;\n    },\n    polygonStart: function () {\n      this._line = 0;\n    },\n    polygonEnd: function () {\n      this._line = NaN;\n    },\n    lineStart: function () {\n      this._point = 0;\n    },\n    lineEnd: function () {\n      if (this._line === 0) this._string.push(\"Z\");\n      this._point = NaN;\n    },\n    point: function (x, y) {\n      switch (this._point) {\n        case 0:\n          {\n            this._string.push(\"M\", x, \",\", y);\n\n            this._point = 1;\n            break;\n          }\n\n        case 1:\n          {\n            this._string.push(\"L\", x, \",\", y);\n\n            break;\n          }\n\n        default:\n          {\n            if (this._circle == null) this._circle = circle(this._radius);\n\n            this._string.push(\"M\", x, \",\", y, this._circle);\n\n            break;\n          }\n      }\n    },\n    result: function () {\n      if (this._string.length) {\n        var result = this._string.join(\"\");\n\n        this._string = [];\n        return result;\n      } else {\n        return null;\n      }\n    }\n  };\n\n  function circle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  function geoPath (projection, context) {\n    var pointRadius = 4.5,\n        projectionStream,\n        contextStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        geoStream(object, projectionStream(contextStream));\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      geoStream(object, projectionStream(pathArea));\n      return pathArea.result();\n    };\n\n    path.measure = function (object) {\n      geoStream(object, projectionStream(pathMeasure));\n      return pathMeasure.result();\n    };\n\n    path.bounds = function (object) {\n      geoStream(object, projectionStream(boundsStream$1));\n      return boundsStream$1.result();\n    };\n\n    path.centroid = function (object) {\n      geoStream(object, projectionStream(pathCentroid));\n      return pathCentroid.result();\n    };\n\n    path.projection = function (_) {\n      return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return path;\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    return path.projection(projection).context(context);\n  }\n\n  function transformer(methods) {\n    return function (stream) {\n      var s = new TransformStream();\n\n      for (var key in methods) s[key] = methods[key];\n\n      s.stream = stream;\n      return s;\n    };\n  }\n\n  function TransformStream() {}\n\n  TransformStream.prototype = {\n    constructor: TransformStream,\n    point: function (x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function () {\n      this.stream.sphere();\n    },\n    lineStart: function () {\n      this.stream.lineStart();\n    },\n    lineEnd: function () {\n      this.stream.lineEnd();\n    },\n    polygonStart: function () {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function () {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function fit(projection, fitBounds, object) {\n    var clip = projection.clipExtent && projection.clipExtent();\n    projection.scale(150).translate([0, 0]);\n    if (clip != null) projection.clipExtent(null);\n    geoStream(object, projection.stream(boundsStream$1));\n    fitBounds(boundsStream$1.result());\n    if (clip != null) projection.clipExtent(clip);\n    return projection;\n  }\n\n  function fitExtent(projection, extent, object) {\n    return fit(projection, function (b) {\n      var w = extent[1][0] - extent[0][0],\n          h = extent[1][1] - extent[0][1],\n          k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n          x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n          y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n  function fitSize(projection, size, object) {\n    return fitExtent(projection, [[0, 0], size], object);\n  }\n  function fitWidth(projection, width, object) {\n    return fit(projection, function (b) {\n      var w = +width,\n          k = w / (b[1][0] - b[0][0]),\n          x = (w - k * (b[1][0] + b[0][0])) / 2,\n          y = -k * b[0][1];\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n  function fitHeight(projection, height, object) {\n    return fit(projection, function (b) {\n      var h = +height,\n          k = h / (b[1][1] - b[0][1]),\n          x = -k * b[0][0],\n          y = (h - k * (b[1][1] + b[0][1])) / 2;\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n\n  var maxDepth = 16,\n      // maximum depth of subdivision\n  cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\n  function resample (project, delta2) {\n    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n  }\n\n  function resampleNone(project) {\n    return transformer({\n      point: function (x, y) {\n        x = project(x, y);\n        this.stream.point(x[0], x[1]);\n      }\n    });\n  }\n\n  function resample$1(project, delta2) {\n    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * delta2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = sqrt$1(a * a + b * b + c * c),\n            phi2 = asin$1(c /= m),\n            lambda2 = abs$1(abs$1(c) - 1) < epsilon$1 || abs$1(lambda0 - lambda1) < epsilon$1 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n            p = project(lambda2, phi2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > delta2 // perpendicular projected distance\n        || abs$1((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n        || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          // angular distance\n          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    return function (stream) {\n      var lambda00, x00, y00, a00, b00, c00, // first point\n      lambda0, x0, y0, a0, b0, c0; // previous point\n\n      var resampleStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function () {\n          stream.polygonStart();\n          resampleStream.lineStart = ringStart;\n        },\n        polygonEnd: function () {\n          stream.polygonEnd();\n          resampleStream.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resampleStream.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(lambda, phi) {\n        var c = cartesian([lambda, phi]),\n            p = project(lambda, phi);\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resampleStream.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resampleStream.point = ringPoint;\n        resampleStream.lineEnd = ringEnd;\n      }\n\n      function ringPoint(lambda, phi) {\n        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resampleStream.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n        resampleStream.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resampleStream;\n    };\n  }\n\n  var transformRadians = transformer({\n    point: function (x, y) {\n      this.stream.point(x * radians, y * radians);\n    }\n  });\n\n  function transformRotate(rotate) {\n    return transformer({\n      point: function (x, y) {\n        var r = rotate(x, y);\n        return this.stream.point(r[0], r[1]);\n      }\n    });\n  }\n\n  function scaleTranslate(k, dx, dy, sx, sy) {\n    function transform(x, y) {\n      x *= sx;\n      y *= sy;\n      return [dx + k * x, dy - k * y];\n    }\n\n    transform.invert = function (x, y) {\n      return [(x - dx) / k * sx, (dy - y) / k * sy];\n    };\n\n    return transform;\n  }\n\n  function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n    if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n    var cosAlpha = cos$1(alpha),\n        sinAlpha = sin$1(alpha),\n        a = cosAlpha * k,\n        b = sinAlpha * k,\n        ai = cosAlpha / k,\n        bi = sinAlpha / k,\n        ci = (sinAlpha * dy - cosAlpha * dx) / k,\n        fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n    function transform(x, y) {\n      x *= sx;\n      y *= sy;\n      return [a * x - b * y + dx, dy - b * x - a * y];\n    }\n\n    transform.invert = function (x, y) {\n      return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n    };\n\n    return transform;\n  }\n\n  function projection$1(project) {\n    return projectionMutator(function () {\n      return project;\n    })();\n  }\n  function projectionMutator(projectAt) {\n    var project,\n        k = 150,\n        // scale\n    x = 480,\n        y = 250,\n        // translate\n    lambda = 0,\n        phi = 0,\n        // center\n    deltaLambda = 0,\n        deltaPhi = 0,\n        deltaGamma = 0,\n        rotate,\n        // pre-rotate\n    alpha = 0,\n        // post-rotate angle\n    sx = 1,\n        // reflectX\n    sy = 1,\n        // reflectX\n    theta = null,\n        preclip = clipAntimeridian,\n        // pre-clip angle\n    x0 = null,\n        y0,\n        x1,\n        y1,\n        postclip = identity,\n        // post-clip extent\n    delta2 = 0.5,\n        // precision\n    projectResample,\n        projectTransform,\n        projectRotateTransform,\n        cache,\n        cacheStream;\n\n    function projection(point) {\n      return projectRotateTransform(point[0] * radians, point[1] * radians);\n    }\n\n    function invert(point) {\n      point = projectRotateTransform.invert(point[0], point[1]);\n      return point && [point[0] * degrees, point[1] * degrees];\n    }\n\n    projection.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n    };\n\n    projection.preclip = function (_) {\n      return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n    };\n\n    projection.postclip = function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    };\n\n    projection.clipAngle = function (_) {\n      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n    };\n\n    projection.clipExtent = function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function (_) {\n      return arguments.length ? (k = +_, recenter()) : k;\n    };\n\n    projection.translate = function (_) {\n      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n    };\n\n    projection.center = function (_) {\n      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n    };\n\n    projection.rotate = function (_) {\n      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n    };\n\n    projection.angle = function (_) {\n      return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n    };\n\n    projection.reflectX = function (_) {\n      return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n    };\n\n    projection.reflectY = function (_) {\n      return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n    };\n\n    projection.precision = function (_) {\n      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n    };\n\n    projection.fitExtent = function (extent, object) {\n      return fitExtent(projection, extent, object);\n    };\n\n    projection.fitSize = function (size, object) {\n      return fitSize(projection, size, object);\n    };\n\n    projection.fitWidth = function (width, object) {\n      return fitWidth(projection, width, object);\n    };\n\n    projection.fitHeight = function (height, object) {\n      return fitHeight(projection, height, object);\n    };\n\n    function recenter() {\n      var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n          transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n      rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n      projectTransform = compose(project, transform);\n      projectRotateTransform = compose(rotate, projectTransform);\n      projectResample = resample(projectTransform, delta2);\n      return reset();\n    }\n\n    function reset() {\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return recenter();\n    };\n  }\n\n  function conicProjection(projectAt) {\n    var phi0 = 0,\n        phi1 = pi$1 / 3,\n        m = projectionMutator(projectAt),\n        p = m(phi0, phi1);\n\n    p.parallels = function (_) {\n      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n    };\n\n    return p;\n  }\n\n  function cylindricalEqualAreaRaw(phi0) {\n    var cosPhi0 = cos$1(phi0);\n\n    function forward(lambda, phi) {\n      return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n    }\n\n    forward.invert = function (x, y) {\n      return [x / cosPhi0, asin$1(y * cosPhi0)];\n    };\n\n    return forward;\n  }\n\n  function conicEqualAreaRaw(y0, y1) {\n    var sy0 = sin$1(y0),\n        n = (sy0 + sin$1(y1)) / 2; // Are the parallels symmetrical around the Equator?\n\n    if (abs$1(n) < epsilon$1) return cylindricalEqualAreaRaw(y0);\n    var c = 1 + sy0 * (2 * n - sy0),\n        r0 = sqrt$1(c) / n;\n\n    function project(x, y) {\n      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n    }\n\n    project.invert = function (x, y) {\n      var r0y = r0 - y,\n          l = atan2(x, abs$1(r0y)) * sign(r0y);\n      if (r0y * n < 0) l -= pi$1 * sign(x) * sign(r0y);\n      return [l / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n    };\n\n    return project;\n  }\n  function geoConicEqualArea () {\n    return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n  }\n\n  function geoAlbers () {\n    return geoConicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n  }\n\n  // as this will avoid emitting interleaving lines and polygons.\n\n  function multiplex(streams) {\n    var n = streams.length;\n    return {\n      point: function (x, y) {\n        var i = -1;\n\n        while (++i < n) streams[i].point(x, y);\n      },\n      sphere: function () {\n        var i = -1;\n\n        while (++i < n) streams[i].sphere();\n      },\n      lineStart: function () {\n        var i = -1;\n\n        while (++i < n) streams[i].lineStart();\n      },\n      lineEnd: function () {\n        var i = -1;\n\n        while (++i < n) streams[i].lineEnd();\n      },\n      polygonStart: function () {\n        var i = -1;\n\n        while (++i < n) streams[i].polygonStart();\n      },\n      polygonEnd: function () {\n        var i = -1;\n\n        while (++i < n) streams[i].polygonEnd();\n      }\n    };\n  } // A composite projection for the United States, configured by default for\n  // 960\u00d7500. The projection also works quite well at 960\u00d7600 if you change the\n  // scale to 1285 and adjust the translate accordingly. The set of standard\n  // parallels for each region comes from USGS, which is published here:\n  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\n  function geoAlbersUsa () {\n    var cache,\n        cacheStream,\n        lower48 = geoAlbers(),\n        lower48Point,\n        alaska = geoConicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n        alaskaPoint,\n        // EPSG:3338\n    hawaii = geoConicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n        hawaiiPoint,\n        // ESRI:102007\n    point,\n        pointStream = {\n      point: function (x, y) {\n        point = [x, y];\n      }\n    };\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n      return reset();\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n      alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon$1, y + 0.120 * k + epsilon$1], [x - 0.214 * k - epsilon$1, y + 0.234 * k - epsilon$1]]).stream(pointStream);\n      hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon$1, y + 0.166 * k + epsilon$1], [x - 0.115 * k - epsilon$1, y + 0.234 * k - epsilon$1]]).stream(pointStream);\n      return reset();\n    };\n\n    albersUsa.fitExtent = function (extent, object) {\n      return fitExtent(albersUsa, extent, object);\n    };\n\n    albersUsa.fitSize = function (size, object) {\n      return fitSize(albersUsa, size, object);\n    };\n\n    albersUsa.fitWidth = function (width, object) {\n      return fitWidth(albersUsa, width, object);\n    };\n\n    albersUsa.fitHeight = function (height, object) {\n      return fitHeight(albersUsa, height, object);\n    };\n\n    function reset() {\n      cache = cacheStream = null;\n      return albersUsa;\n    }\n\n    return albersUsa.scale(1070);\n  }\n\n  function azimuthalRaw(scale) {\n    return function (x, y) {\n      var cx = cos$1(x),\n          cy = cos$1(y),\n          k = scale(cx * cy);\n      if (k === Infinity) return [2, 0];\n      return [k * cy * sin$1(x), k * sin$1(y)];\n    };\n  }\n  function azimuthalInvert(angle) {\n    return function (x, y) {\n      var z = sqrt$1(x * x + y * y),\n          c = angle(z),\n          sc = sin$1(c),\n          cc = cos$1(c);\n      return [atan2(x * sc, z * cc), asin$1(z && y * sc / z)];\n    };\n  }\n\n  var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n    return sqrt$1(2 / (1 + cxcy));\n  });\n  azimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n    return 2 * asin$1(z / 2);\n  });\n  function geoAzimuthalEqualArea () {\n    return projection$1(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n  }\n\n  var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n    return (c = acos(c)) && c / sin$1(c);\n  });\n  azimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n    return z;\n  });\n  function geoAzimuthalEquidistant () {\n    return projection$1(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n  }\n\n  function mercatorRaw(lambda, phi) {\n    return [lambda, log(tan((halfPi$1 + phi) / 2))];\n  }\n\n  mercatorRaw.invert = function (x, y) {\n    return [x, 2 * atan(exp(y)) - halfPi$1];\n  };\n\n  function geoMercator () {\n    return mercatorProjection(mercatorRaw).scale(961 / tau);\n  }\n  function mercatorProjection(project) {\n    var m = projection$1(project),\n        center = m.center,\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        x0 = null,\n        y0,\n        x1,\n        y1; // clip extent\n\n    m.scale = function (_) {\n      return arguments.length ? (scale(_), reclip()) : scale();\n    };\n\n    m.translate = function (_) {\n      return arguments.length ? (translate(_), reclip()) : translate();\n    };\n\n    m.center = function (_) {\n      return arguments.length ? (center(_), reclip()) : center();\n    };\n\n    m.clipExtent = function (_) {\n      return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    function reclip() {\n      var k = pi$1 * scale(),\n          t = m(rotation(m.rotate()).invert([0, 0]));\n      return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n    }\n\n    return reclip();\n  }\n\n  function tany(y) {\n    return tan((halfPi$1 + y) / 2);\n  }\n\n  function conicConformalRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n        f = cy0 * pow(tany(y0), n) / n;\n    if (!n) return mercatorRaw;\n\n    function project(x, y) {\n      if (f > 0) {\n        if (y < -halfPi$1 + epsilon$1) y = -halfPi$1 + epsilon$1;\n      } else {\n        if (y > halfPi$1 - epsilon$1) y = halfPi$1 - epsilon$1;\n      }\n\n      var r = f / pow(tany(y), n);\n      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n    }\n\n    project.invert = function (x, y) {\n      var fy = f - y,\n          r = sign(n) * sqrt$1(x * x + fy * fy),\n          l = atan2(x, abs$1(fy)) * sign(fy);\n      if (fy * n < 0) l -= pi$1 * sign(x) * sign(fy);\n      return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi$1];\n    };\n\n    return project;\n  }\n  function geoConicConformal () {\n    return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n  }\n\n  function equirectangularRaw(lambda, phi) {\n    return [lambda, phi];\n  }\n  equirectangularRaw.invert = equirectangularRaw;\n  function geoEquirectangular () {\n    return projection$1(equirectangularRaw).scale(152.63);\n  }\n\n  function conicEquidistantRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n        g = cy0 / n + y0;\n    if (abs$1(n) < epsilon$1) return equirectangularRaw;\n\n    function project(x, y) {\n      var gy = g - y,\n          nx = n * x;\n      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n    }\n\n    project.invert = function (x, y) {\n      var gy = g - y,\n          l = atan2(x, abs$1(gy)) * sign(gy);\n      if (gy * n < 0) l -= pi$1 * sign(x) * sign(gy);\n      return [l / n, g - sign(n) * sqrt$1(x * x + gy * gy)];\n    };\n\n    return project;\n  }\n  function geoConicEquidistant () {\n    return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n  }\n\n  var A1 = 1.340264,\n      A2 = -0.081106,\n      A3 = 0.000893,\n      A4 = 0.003796,\n      M = sqrt$1(3) / 2,\n      iterations = 12;\n  function equalEarthRaw(lambda, phi) {\n    var l = asin$1(M * sin$1(phi)),\n        l2 = l * l,\n        l6 = l2 * l2 * l2;\n    return [lambda * cos$1(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n  }\n\n  equalEarthRaw.invert = function (x, y) {\n    var l = y,\n        l2 = l * l,\n        l6 = l2 * l2 * l2;\n\n    for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n      fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n      fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n      l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n      if (abs$1(delta) < epsilon2) break;\n    }\n\n    return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos$1(l), asin$1(sin$1(l) / M)];\n  };\n\n  function geoEqualEarth () {\n    return projection$1(equalEarthRaw).scale(177.158);\n  }\n\n  function gnomonicRaw(x, y) {\n    var cy = cos$1(y),\n        k = cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n  gnomonicRaw.invert = azimuthalInvert(atan);\n  function geoGnomonic () {\n    return projection$1(gnomonicRaw).scale(144.049).clipAngle(60);\n  }\n\n  function geoIdentity () {\n    var k = 1,\n        tx = 0,\n        ty = 0,\n        sx = 1,\n        sy = 1,\n        // scale, translate and reflect\n    alpha = 0,\n        ca,\n        sa,\n        // angle\n    x0 = null,\n        y0,\n        x1,\n        y1,\n        // clip extent\n    kx = 1,\n        ky = 1,\n        transform = transformer({\n      point: function (x, y) {\n        var p = projection([x, y]);\n        this.stream.point(p[0], p[1]);\n      }\n    }),\n        postclip = identity,\n        cache,\n        cacheStream;\n\n    function reset() {\n      kx = k * sx;\n      ky = k * sy;\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    function projection(p) {\n      var x = p[0] * kx,\n          y = p[1] * ky;\n\n      if (alpha) {\n        var t = y * ca - x * sa;\n        x = x * ca + y * sa;\n        y = t;\n      }\n\n      return [x + tx, y + ty];\n    }\n\n    projection.invert = function (p) {\n      var x = p[0] - tx,\n          y = p[1] - ty;\n\n      if (alpha) {\n        var t = y * ca + x * sa;\n        x = x * ca - y * sa;\n        y = t;\n      }\n\n      return [x / kx, y / ky];\n    };\n\n    projection.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    };\n\n    projection.postclip = function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    };\n\n    projection.clipExtent = function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function (_) {\n      return arguments.length ? (k = +_, reset()) : k;\n    };\n\n    projection.translate = function (_) {\n      return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n    };\n\n    projection.angle = function (_) {\n      return arguments.length ? (alpha = _ % 360 * radians, sa = sin$1(alpha), ca = cos$1(alpha), reset()) : alpha * degrees;\n    };\n\n    projection.reflectX = function (_) {\n      return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n    };\n\n    projection.reflectY = function (_) {\n      return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n    };\n\n    projection.fitExtent = function (extent, object) {\n      return fitExtent(projection, extent, object);\n    };\n\n    projection.fitSize = function (size, object) {\n      return fitSize(projection, size, object);\n    };\n\n    projection.fitWidth = function (width, object) {\n      return fitWidth(projection, width, object);\n    };\n\n    projection.fitHeight = function (height, object) {\n      return fitHeight(projection, height, object);\n    };\n\n    return projection;\n  }\n\n  function naturalEarth1Raw(lambda, phi) {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n  }\n\n  naturalEarth1Raw.invert = function (x, y) {\n    var phi = y,\n        i = 25,\n        delta;\n\n    do {\n      var phi2 = phi * phi,\n          phi4 = phi2 * phi2;\n      phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n    } while (abs$1(delta) > epsilon$1 && --i > 0);\n\n    return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n  };\n\n  function geoNaturalEarth1 () {\n    return projection$1(naturalEarth1Raw).scale(175.295);\n  }\n\n  function orthographicRaw(x, y) {\n    return [cos$1(y) * sin$1(x), sin$1(y)];\n  }\n  orthographicRaw.invert = azimuthalInvert(asin$1);\n  function geoOrthographic () {\n    return projection$1(orthographicRaw).scale(249.5).clipAngle(90 + epsilon$1);\n  }\n\n  function stereographicRaw(x, y) {\n    var cy = cos$1(y),\n        k = 1 + cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n  stereographicRaw.invert = azimuthalInvert(function (z) {\n    return 2 * atan(z);\n  });\n  function geoStereographic () {\n    return projection$1(stereographicRaw).scale(250).clipAngle(142);\n  }\n\n  function transverseMercatorRaw(lambda, phi) {\n    return [log(tan((halfPi$1 + phi) / 2)), -lambda];\n  }\n\n  transverseMercatorRaw.invert = function (x, y) {\n    return [-y, 2 * atan(exp(x)) - halfPi$1];\n  };\n\n  function geoTransverseMercator () {\n    var m = mercatorProjection(transverseMercatorRaw),\n        center = m.center,\n        rotate = m.rotate;\n\n    m.center = function (_) {\n      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    m.rotate = function (_) {\n      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]).scale(159.155);\n  }\n\n  var abs = Math.abs;\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var epsilon = 1e-6;\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  var sqrt2 = sqrt(2);\n  function asin(x) {\n    return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n  }\n  function sqrt(x) {\n    return x > 0 ? Math.sqrt(x) : 0;\n  }\n\n  function mollweideBromleyTheta(cp, phi) {\n    var cpsinPhi = cp * sin(phi),\n        i = 30,\n        delta;\n\n    do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi)); while (abs(delta) > epsilon && --i > 0);\n\n    return phi / 2;\n  }\n  function mollweideBromleyRaw(cx, cy, cp) {\n    function forward(lambda, phi) {\n      return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n    }\n\n    forward.invert = function (x, y) {\n      return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n    };\n\n    return forward;\n  }\n  var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n  function geoMollweide () {\n    return projection$1(mollweideRaw).scale(169.529);\n  }\n\n  const defaultPath = geoPath();\n  const projectionProperties = [// standard properties in d3-geo\n  'clipAngle', 'clipExtent', 'scale', 'translate', 'center', 'rotate', 'parallels', 'precision', 'reflectX', 'reflectY', // extended properties in d3-geo-projections\n  'coefficient', 'distance', 'fraction', 'lobes', 'parallel', 'radius', 'ratio', 'spacing', 'tilt'];\n  /**\n   * Augment projections with their type and a copy method.\n   */\n\n  function create(type, constructor) {\n    return function projection() {\n      const p = constructor();\n      p.type = type;\n      p.path = geoPath().projection(p);\n\n      p.copy = p.copy || function () {\n        const c = projection();\n        projectionProperties.forEach(prop => {\n          if (p[prop]) c[prop](p[prop]());\n        });\n        c.path.pointRadius(p.path.pointRadius());\n        return c;\n      };\n\n      return p;\n    };\n  }\n\n  function projection(type, proj) {\n    if (!type || typeof type !== 'string') {\n      throw new Error('Projection type must be a name string.');\n    }\n\n    type = type.toLowerCase();\n\n    if (arguments.length > 1) {\n      projections[type] = create(type, proj);\n      return this;\n    } else {\n      return projections[type] || null;\n    }\n  }\n  function getProjectionPath(proj) {\n    return proj && proj.path || defaultPath;\n  }\n  const projections = {\n    // base d3-geo projection types\n    albers: geoAlbers,\n    albersusa: geoAlbersUsa,\n    azimuthalequalarea: geoAzimuthalEqualArea,\n    azimuthalequidistant: geoAzimuthalEquidistant,\n    conicconformal: geoConicConformal,\n    conicequalarea: geoConicEqualArea,\n    conicequidistant: geoConicEquidistant,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    gnomonic: geoGnomonic,\n    identity: geoIdentity,\n    mercator: geoMercator,\n    mollweide: geoMollweide,\n    naturalEarth1: geoNaturalEarth1,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    transversemercator: geoTransverseMercator\n  };\n\n  for (const key in projections) {\n    projection(key, projections[key]);\n  }\n\n  exports.getProjectionPath = getProjectionPath;\n  exports.projection = projection;\n  exports.projectionProperties = projectionProperties;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","flatten","arrays","array","acos","x","pi$1","Math","asin$1","halfPi$1","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamLine","coordinates","closed","i","n","length","lineStart","coordinate","point","lineEnd","streamPolygon","polygonStart","polygonEnd","geoStream","object","streamObjectType","spherical","cartesian","atan2","lambda","phi","cosPhi","cos$1","sin$1","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","sqrt$1","compose","y","invert","compose.invert","rotationIdentity","abs$1","round","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","z","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rotation.invert","rotate","forward","radians","degrees","forward.invert","circleRadius","cosRadius","radius","epsilon$1","clipBuffer","lines","line","m","push","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","e","v","p","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","sort","link","start","current","isSubject","longitude","sign","pointVisible","clipLine","sink","pointLine","pointRing","ring","ringSink","ringStart","ringEnd","clean","ringSegments","ringBuffer","polygon","polygonStarted","filter","validSegment","Array","from","sinPhi","normal","angle","winding","sum","Adder","point0","lambda0","phi0","quarterPi","sinPhi0","cosPhi0","j","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","add","arc","intersection","phiArc","epsilon2","sphere","clipCircle","visible","cr","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","w","uu","t2","t","q","polar","q1","code","r","smallRadius","notHemisphere","c0","v0","v00","c","point2","to","direction","sinRadius","step","t0","t1","x0","y0","x1","y1","ax","ay","dx","bx","dy","by","clipRectangle","a1","corner","comparePoint","ca","cb","activeStream","linePoint","first","x__","y__","v__","v_","x_","max","clipMin","clipMax","min","y_","bufferStream","clipStream","NaN","b0","b1","a0","cleanInside","areaRingStart","areaStream","areaPointFirst","areaPoint","x00$2","x0$3","y00$2","y0$3","areaRingSum","areaRingEnd","centroidPoint","X0","Y0","Z0","centroidLineStart","centroidStream","centroidPointFirstLine","centroidPointLine","x0$1","y0$1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidPointFirstRing","centroidRingEnd","centroidPointRing","x00$1","y00$1","X2","Y2","Z2","PathContext","context","_context","lengthPointFirst","lengthStream","lengthPoint","x00","y00","lengthSum","PathString","_string","circle","geoPath","projection","path","pointRadius","contextStream","apply","arguments","projectionStream","area","path.area","pathArea","measure","path.measure","pathMeasure","bounds","path.bounds","boundsStream$1","centroid","path.centroid","pathCentroid","path.projection","_","identity","path.context","path.pointRadius","transformer","methods","s","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","fitExtent","extent","h","fitWidth","width","fitHeight","height","resampleNone","project","resample$1","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","lambda00","a00","b00","c00","transformRotate","scaleTranslate","sx","sy","transform","transform.invert","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projection$1","projectionMutator","projectAt","projectRotateTransform","recenter","center","projectTransform","reset","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","projectResample","projection.stream","transformRadians","projection.preclip","undefined","projection.postclip","clipAngle","projection.clipAngle","projection.clipExtent","projection.scale","projection.translate","projection.center","projection.rotate","projection.angle","reflectX","projection.reflectX","reflectY","projection.reflectY","precision","projection.precision","projection.fitExtent","fitSize","projection.fitSize","size","projection.fitWidth","projection.fitHeight","conicProjection","parallels","p.parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0","sy0","project.invert","r0y","geoConicEqualArea","geoAlbers","multiplex","streams","azimuthalRaw","cx","cy","Infinity","azimuthalInvert","sc","cc","mercatorRaw","log","tan","mercatorProjection","reclip","m.scale","m.translate","m.center","m.clipExtent","conicConformalRaw","f","pow","cy0","fy","atan","equirectangularRaw","conicEquidistantRaw","gy","g","nx","equalEarthRaw","M","l2","l6","A1","A2","A3","A4","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","halfPi","create","constructor","copy","projectionProperties","prop","proj","Error","toLowerCase","projections","_partials","Float64Array","_n","hi","lo","abs","valueOf","PI","cos","exp","sin","sqrt","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","clipAntimeridianLine","sign0","sign1","sinLambda0Lambda1","clipAntimeridianInterpolate","areaSum","x0$2","y0$2","boundsStream","boundsPoint","prototype","_radius","_line","_point","closePath","moveTo","lineTo","lengthRing","_circle","join","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw.invert","equalEarthRaw.invert","iterations","fpy","naturalEarth1Raw.invert","transverseMercatorRaw.invert","pi","sqrt2","mollweideRaw","mollweideBromleyRaw","cp","cpsinPhi","epsilon","defaultPath","albers","albersusa","geoAlbersUsa","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa.invert","albersUsa.stream","albersUsa.precision","albersUsa.scale","albersUsa.translate","albersUsa.fitExtent","albersUsa.fitSize","albersUsa.fitWidth","albersUsa.fitHeight","azimuthalequalarea","geoAzimuthalEqualArea","azimuthalequidistant","geoAzimuthalEquidistant","conicconformal","geoConicConformal","conicequalarea","conicequidistant","geoConicEquidistant","equalEarth","geoEqualEarth","equirectangular","geoEquirectangular","gnomonic","geoGnomonic","geoIdentity","kx","ky","sa","tx","ty","projection.invert","mercator","geoMercator","mollweide","geoMollweide","naturalEarth1","geoNaturalEarth1","orthographic","geoOrthographic","stereographic","geoStereographic","transversemercator","geoTransverseMercator","m.rotate","getProjectionPath","Object","defineProperty","value"]
}
