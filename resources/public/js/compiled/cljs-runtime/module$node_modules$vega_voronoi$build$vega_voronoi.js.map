{
"version":3,
"file":"module$node_modules$vega_voronoi$build$vega_voronoi.js",
"lineCount":55,
"mappings":"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",
"sources":["node_modules/vega-voronoi/build/vega-voronoi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_voronoi$build$vega_voronoi\"] = function(global,require,module,exports) {\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-util')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-util'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega));\n})(this, (function (exports, vegaDataflow, vegaUtil) { 'use strict';\n\n    const epsilon$1 = 1.1102230246251565e-16;\n    const splitter = 134217729;\n    const resulterrbound = (3 + 8 * epsilon$1) * epsilon$1; // fast_expansion_sum_zeroelim routine from oritinal code\n\n    function sum(elen, e, flen, f, h) {\n      let Q, Qnew, hh, bvirt;\n      let enow = e[0];\n      let fnow = f[0];\n      let eindex = 0;\n      let findex = 0;\n\n      if (fnow > enow === fnow > -enow) {\n        Q = enow;\n        enow = e[++eindex];\n      } else {\n        Q = fnow;\n        fnow = f[++findex];\n      }\n\n      let hindex = 0;\n\n      if (eindex < elen && findex < flen) {\n        if (fnow > enow === fnow > -enow) {\n          Qnew = enow + Q;\n          hh = Q - (Qnew - enow);\n          enow = e[++eindex];\n        } else {\n          Qnew = fnow + Q;\n          hh = Q - (Qnew - fnow);\n          fnow = f[++findex];\n        }\n\n        Q = Qnew;\n\n        if (hh !== 0) {\n          h[hindex++] = hh;\n        }\n\n        while (eindex < elen && findex < flen) {\n          if (fnow > enow === fnow > -enow) {\n            Qnew = Q + enow;\n            bvirt = Qnew - Q;\n            hh = Q - (Qnew - bvirt) + (enow - bvirt);\n            enow = e[++eindex];\n          } else {\n            Qnew = Q + fnow;\n            bvirt = Qnew - Q;\n            hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n            fnow = f[++findex];\n          }\n\n          Q = Qnew;\n\n          if (hh !== 0) {\n            h[hindex++] = hh;\n          }\n        }\n      }\n\n      while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n\n        if (hh !== 0) {\n          h[hindex++] = hh;\n        }\n      }\n\n      while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n\n        if (hh !== 0) {\n          h[hindex++] = hh;\n        }\n      }\n\n      if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n      }\n\n      return hindex;\n    }\n    function estimate(elen, e) {\n      let Q = e[0];\n\n      for (let i = 1; i < elen; i++) Q += e[i];\n\n      return Q;\n    }\n    function vec(n) {\n      return new Float64Array(n);\n    }\n\n    const ccwerrboundA = (3 + 16 * epsilon$1) * epsilon$1;\n    const ccwerrboundB = (2 + 12 * epsilon$1) * epsilon$1;\n    const ccwerrboundC = (9 + 64 * epsilon$1) * epsilon$1 * epsilon$1;\n    const B = vec(4);\n    const C1 = vec(8);\n    const C2 = vec(12);\n    const D = vec(16);\n    const u = vec(4);\n\n    function orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n      let acxtail, acytail, bcxtail, bcytail;\n\n      let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n      const acx = ax - cx;\n      const bcx = bx - cx;\n      const acy = ay - cy;\n      const bcy = by - cy;\n      s1 = acx * bcy;\n      c = splitter * acx;\n      ahi = c - (c - acx);\n      alo = acx - ahi;\n      c = splitter * bcy;\n      bhi = c - (c - bcy);\n      blo = bcy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = acy * bcx;\n      c = splitter * acy;\n      ahi = c - (c - acy);\n      alo = acy - ahi;\n      c = splitter * bcx;\n      bhi = c - (c - bcx);\n      blo = bcx - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      B[3] = u3;\n      let det = estimate(4, B);\n      let errbound = ccwerrboundB * detsum;\n\n      if (det >= errbound || -det >= errbound) {\n        return det;\n      }\n\n      bvirt = ax - acx;\n      acxtail = ax - (acx + bvirt) + (bvirt - cx);\n      bvirt = bx - bcx;\n      bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n      bvirt = ay - acy;\n      acytail = ay - (acy + bvirt) + (bvirt - cy);\n      bvirt = by - bcy;\n      bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n      if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n      }\n\n      errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n      det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n      if (det >= errbound || -det >= errbound) return det;\n      s1 = acxtail * bcy;\n      c = splitter * acxtail;\n      ahi = c - (c - acxtail);\n      alo = acxtail - ahi;\n      c = splitter * bcy;\n      bhi = c - (c - bcy);\n      blo = bcy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = acytail * bcx;\n      c = splitter * acytail;\n      ahi = c - (c - acytail);\n      alo = acytail - ahi;\n      c = splitter * bcx;\n      bhi = c - (c - bcx);\n      blo = bcx - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      const C1len = sum(4, B, 4, u, C1);\n      s1 = acx * bcytail;\n      c = splitter * acx;\n      ahi = c - (c - acx);\n      alo = acx - ahi;\n      c = splitter * bcytail;\n      bhi = c - (c - bcytail);\n      blo = bcytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = acy * bcxtail;\n      c = splitter * acy;\n      ahi = c - (c - acy);\n      alo = acy - ahi;\n      c = splitter * bcxtail;\n      bhi = c - (c - bcxtail);\n      blo = bcxtail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      const C2len = sum(C1len, C1, 4, u, C2);\n      s1 = acxtail * bcytail;\n      c = splitter * acxtail;\n      ahi = c - (c - acxtail);\n      alo = acxtail - ahi;\n      c = splitter * bcytail;\n      bhi = c - (c - bcytail);\n      blo = bcytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = acytail * bcxtail;\n      c = splitter * acytail;\n      ahi = c - (c - acytail);\n      alo = acytail - ahi;\n      c = splitter * bcxtail;\n      bhi = c - (c - bcxtail);\n      blo = bcxtail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      const Dlen = sum(C2len, C2, 4, u, D);\n      return D[Dlen - 1];\n    }\n\n    function orient2d(ax, ay, bx, by, cx, cy) {\n      const detleft = (ay - cy) * (bx - cx);\n      const detright = (ax - cx) * (by - cy);\n      const det = detleft - detright;\n      if (detleft === 0 || detright === 0 || detleft > 0 !== detright > 0) return det;\n      const detsum = Math.abs(detleft + detright);\n      if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n      return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n    }\n\n    const EPSILON = Math.pow(2, -52);\n    const EDGE_STACK = new Uint32Array(512);\n    class Delaunator {\n      static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n          const p = points[i];\n          coords[2 * i] = getX(p);\n          coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n      }\n\n      constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n        this.coords = coords; // arrays that will store the triangulation graph\n\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3); // temporary arrays for tracking the edges of the advancing convex hull\n\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n\n        this._hullNext = new Uint32Array(n); // edge to next edge\n\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n        // temporary arrays for sorting points\n\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n        this.update();\n      }\n\n      update() {\n        const {\n          coords,\n          _hullPrev: hullPrev,\n          _hullNext: hullNext,\n          _hullTri: hullTri,\n          _hullHash: hullHash\n        } = this;\n        const n = coords.length >> 1; // populate an array of point indices; calculate input data bbox\n\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n          const x = coords[2 * i];\n          const y = coords[2 * i + 1];\n          if (x < minX) minX = x;\n          if (y < minY) minY = y;\n          if (x > maxX) maxX = x;\n          if (y > maxY) maxY = y;\n          this._ids[i] = i;\n        }\n\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n        let minDist = Infinity;\n        let i0, i1, i2; // pick a seed point close to the center\n\n        for (let i = 0; i < n; i++) {\n          const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n\n          if (d < minDist) {\n            i0 = i;\n            minDist = d;\n          }\n        }\n\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n        minDist = Infinity; // find the point closest to the seed\n\n        for (let i = 0; i < n; i++) {\n          if (i === i0) continue;\n          const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n\n          if (d < minDist && d > 0) {\n            i1 = i;\n            minDist = d;\n          }\n        }\n\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n        let minRadius = Infinity; // find the third point which forms the smallest circumcircle with the first two\n\n        for (let i = 0; i < n; i++) {\n          if (i === i0 || i === i1) continue;\n          const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n\n          if (r < minRadius) {\n            i2 = i;\n            minRadius = r;\n          }\n        }\n\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n          // order collinear points by dx (or dy if all x are identical)\n          // and return the list as a hull\n          for (let i = 0; i < n; i++) {\n            this._dists[i] = coords[2 * i] - coords[0] || coords[2 * i + 1] - coords[1];\n          }\n\n          quicksort(this._ids, this._dists, 0, n - 1);\n          const hull = new Uint32Array(n);\n          let j = 0;\n\n          for (let i = 0, d0 = -Infinity; i < n; i++) {\n            const id = this._ids[i];\n\n            if (this._dists[id] > d0) {\n              hull[j++] = id;\n              d0 = this._dists[id];\n            }\n          }\n\n          this.hull = hull.subarray(0, j);\n          this.triangles = new Uint32Array(0);\n          this.halfedges = new Uint32Array(0);\n          return;\n        } // swap the order of the seed points for counter-clockwise orientation\n\n\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n          const i = i1;\n          const x = i1x;\n          const y = i1y;\n          i1 = i2;\n          i1x = i2x;\n          i1y = i2y;\n          i2 = i;\n          i2x = x;\n          i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n          this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        } // sort the points by distance from the seed triangle circumcenter\n\n\n        quicksort(this._ids, this._dists, 0, n - 1); // set up the seed triangle as the starting hull\n\n        this._hullStart = i0;\n        let hullSize = 3;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n        this.trianglesLen = 0;\n\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n          const i = this._ids[k];\n          const x = coords[2 * i];\n          const y = coords[2 * i + 1]; // skip near-duplicate points\n\n          if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n          xp = x;\n          yp = y; // skip seed triangle points\n\n          if (i === i0 || i === i1 || i === i2) continue; // find a visible edge on the convex hull using edge hash\n\n          let start = 0;\n\n          for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n            start = hullHash[(key + j) % this._hashSize];\n            if (start !== -1 && start !== hullNext[start]) break;\n          }\n\n          start = hullPrev[start];\n          let e = start,\n              q;\n\n          while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n            e = q;\n\n            if (e === start) {\n              e = -1;\n              break;\n            }\n          }\n\n          if (e === -1) continue; // likely a near-duplicate point; skip it\n          // add the first triangle from the point\n\n          let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]); // recursively flip triangles from the point until they satisfy the Delaunay condition\n\n\n          hullTri[i] = this._legalize(t + 2);\n          hullTri[e] = t; // keep track of boundary triangles on the hull\n\n          hullSize++; // walk forward through the hull, adding more triangles and flipping recursively\n\n          let n = hullNext[e];\n\n          while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n            t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n            hullTri[i] = this._legalize(t + 2);\n            hullNext[n] = n; // mark as removed\n\n            hullSize--;\n            n = q;\n          } // walk backward from the other side, adding more triangles and flipping\n\n\n          if (e === start) {\n            while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n              t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n\n              this._legalize(t + 2);\n\n              hullTri[q] = t;\n              hullNext[e] = e; // mark as removed\n\n              hullSize--;\n              e = q;\n            }\n          } // update the hull indices\n\n\n          this._hullStart = hullPrev[i] = e;\n          hullNext[e] = hullPrev[n] = i;\n          hullNext[i] = n; // save the two new edges in the hash table\n\n          hullHash[this._hashKey(x, y)] = i;\n          hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n          this.hull[i] = e;\n          e = hullNext[e];\n        } // trim typed triangle mesh arrays\n\n\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n      }\n\n      _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n      }\n\n      _legalize(a) {\n        const {\n          _triangles: triangles,\n          _halfedges: halfedges,\n          coords\n        } = this;\n        let i = 0;\n        let ar = 0; // recursion eliminated with a fixed-size stack\n\n        while (true) {\n          const b = halfedges[a];\n          /* if the pair of triangles doesn't satisfy the Delaunay condition\n           * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n           * then do the same check/flip recursively for the new pair of triangles\n           *\n           *           pl                    pl\n           *          /||\\                  /  \\\n           *       al/ || \\bl            al/    \\a\n           *        /  ||  \\              /      \\\n           *       /  a||b  \\    flip    /___ar___\\\n           *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n           *        \\  ||  /              \\      /\n           *       ar\\ || /br             b\\    /br\n           *          \\||/                  \\  /\n           *           pr                    pr\n           */\n\n          const a0 = a - a % 3;\n          ar = a0 + (a + 2) % 3;\n\n          if (b === -1) {\n            // convex hull edge\n            if (i === 0) break;\n            a = EDGE_STACK[--i];\n            continue;\n          }\n\n          const b0 = b - b % 3;\n          const al = a0 + (a + 1) % 3;\n          const bl = b0 + (b + 2) % 3;\n          const p0 = triangles[ar];\n          const pr = triangles[a];\n          const pl = triangles[al];\n          const p1 = triangles[bl];\n          const illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);\n\n          if (illegal) {\n            triangles[a] = p1;\n            triangles[b] = p0;\n            const hbl = halfedges[bl]; // edge swapped on the other side of the hull (rare); fix the halfedge reference\n\n            if (hbl === -1) {\n              let e = this._hullStart;\n\n              do {\n                if (this._hullTri[e] === bl) {\n                  this._hullTri[e] = a;\n                  break;\n                }\n\n                e = this._hullPrev[e];\n              } while (e !== this._hullStart);\n            }\n\n            this._link(a, hbl);\n\n            this._link(b, halfedges[ar]);\n\n            this._link(ar, bl);\n\n            const br = b0 + (b + 1) % 3; // don't worry about hitting the cap: it can only happen on extremely degenerate input\n\n            if (i < EDGE_STACK.length) {\n              EDGE_STACK[i++] = br;\n            }\n          } else {\n            if (i === 0) break;\n            a = EDGE_STACK[--i];\n          }\n        }\n\n        return ar;\n      }\n\n      _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n      } // add a new triangle given vertex indices and adjacent half-edge ids\n\n\n      _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n\n        this._link(t + 1, b);\n\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n        return t;\n      }\n\n    } // monotonically increases with real angle, but doesn't need expensive trigonometry\n\n    function pseudoAngle(dx, dy) {\n      const p = dx / (Math.abs(dx) + Math.abs(dy));\n      return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n    }\n\n    function dist(ax, ay, bx, by) {\n      const dx = ax - bx;\n      const dy = ay - by;\n      return dx * dx + dy * dy;\n    }\n\n    function inCircle(ax, ay, bx, by, cx, cy, px, py) {\n      const dx = ax - px;\n      const dy = ay - py;\n      const ex = bx - px;\n      const ey = by - py;\n      const fx = cx - px;\n      const fy = cy - py;\n      const ap = dx * dx + dy * dy;\n      const bp = ex * ex + ey * ey;\n      const cp = fx * fx + fy * fy;\n      return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n    }\n\n    function circumradius(ax, ay, bx, by, cx, cy) {\n      const dx = bx - ax;\n      const dy = by - ay;\n      const ex = cx - ax;\n      const ey = cy - ay;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const d = 0.5 / (dx * ey - dy * ex);\n      const x = (ey * bl - dy * cl) * d;\n      const y = (dx * cl - ex * bl) * d;\n      return x * x + y * y;\n    }\n\n    function circumcenter(ax, ay, bx, by, cx, cy) {\n      const dx = bx - ax;\n      const dy = by - ay;\n      const ex = cx - ax;\n      const ey = cy - ay;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const d = 0.5 / (dx * ey - dy * ex);\n      const x = ax + (ey * bl - dy * cl) * d;\n      const y = ay + (dx * cl - ex * bl) * d;\n      return {\n        x,\n        y\n      };\n    }\n\n    function quicksort(ids, dists, left, right) {\n      if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n          const temp = ids[i];\n          const tempDist = dists[temp];\n          let j = i - 1;\n\n          while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n\n          ids[j + 1] = temp;\n        }\n      } else {\n        const median = left + right >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n        const temp = ids[i];\n        const tempDist = dists[temp];\n\n        while (true) {\n          do i++; while (dists[ids[i]] < tempDist);\n\n          do j--; while (dists[ids[j]] > tempDist);\n\n          if (j < i) break;\n          swap(ids, i, j);\n        }\n\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n          quicksort(ids, dists, i, right);\n          quicksort(ids, dists, left, j - 1);\n        } else {\n          quicksort(ids, dists, left, j - 1);\n          quicksort(ids, dists, i, right);\n        }\n      }\n    }\n\n    function swap(arr, i, j) {\n      const tmp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = tmp;\n    }\n\n    function defaultGetX(p) {\n      return p[0];\n    }\n\n    function defaultGetY(p) {\n      return p[1];\n    }\n\n    const epsilon = 1e-6;\n    class Path {\n      constructor() {\n        this._x0 = this._y0 = // start of current subpath\n        this._x1 = this._y1 = null; // end of current subpath\n\n        this._ = \"\";\n      }\n\n      moveTo(x, y) {\n        this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n      }\n\n      closePath() {\n        if (this._x1 !== null) {\n          this._x1 = this._x0, this._y1 = this._y0;\n          this._ += \"Z\";\n        }\n      }\n\n      lineTo(x, y) {\n        this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n      }\n\n      arc(x, y, r) {\n        x = +x, y = +y, r = +r;\n        const x0 = x + r;\n        const y0 = y;\n        if (r < 0) throw new Error(\"negative radius\");\n        if (this._x1 === null) this._ += `M${x0},${y0}`;else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n        if (!r) return;\n        this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n      }\n\n      rect(x, y, w, h) {\n        this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n      }\n\n      value() {\n        return this._ || null;\n      }\n\n    }\n\n    class Polygon {\n      constructor() {\n        this._ = [];\n      }\n\n      moveTo(x, y) {\n        this._.push([x, y]);\n      }\n\n      closePath() {\n        this._.push(this._[0].slice());\n      }\n\n      lineTo(x, y) {\n        this._.push([x, y]);\n      }\n\n      value() {\n        return this._.length ? this._ : null;\n      }\n\n    }\n\n    class Voronoi$1 {\n      constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n        if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n        this.delaunay = delaunay;\n        this._circumcenters = new Float64Array(delaunay.points.length * 2);\n        this.vectors = new Float64Array(delaunay.points.length * 2);\n        this.xmax = xmax, this.xmin = xmin;\n        this.ymax = ymax, this.ymin = ymin;\n\n        this._init();\n      }\n\n      update() {\n        this.delaunay.update();\n\n        this._init();\n\n        return this;\n      }\n\n      _init() {\n        const {\n          delaunay: {\n            points,\n            hull,\n            triangles\n          },\n          vectors\n        } = this; // Compute circumcenters.\n\n        const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n\n        for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n          const t1 = triangles[i] * 2;\n          const t2 = triangles[i + 1] * 2;\n          const t3 = triangles[i + 2] * 2;\n          const x1 = points[t1];\n          const y1 = points[t1 + 1];\n          const x2 = points[t2];\n          const y2 = points[t2 + 1];\n          const x3 = points[t3];\n          const y3 = points[t3 + 1];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const ex = x3 - x1;\n          const ey = y3 - y1;\n          const ab = (dx * ey - dy * ex) * 2;\n\n          if (Math.abs(ab) < 1e-9) {\n            // degenerate case (collinear diagram)\n            // almost equal points (degenerate triangle)\n            // the circumcenter is at the infinity, in a\n            // direction that is:\n            // 1. orthogonal to the halfedge.\n            let a = 1e9; // 2. points away from the center; since the list of triangles starts\n            // in the center, the first point of the first triangle\n            // will be our reference\n\n            const r = triangles[0] * 2;\n            a *= Math.sign((points[r] - x1) * ey - (points[r + 1] - y1) * ex);\n            x = (x1 + x3) / 2 - a * ey;\n            y = (y1 + y3) / 2 + a * ex;\n          } else {\n            const d = 1 / ab;\n            const bl = dx * dx + dy * dy;\n            const cl = ex * ex + ey * ey;\n            x = x1 + (ey * bl - dy * cl) * d;\n            y = y1 + (dx * cl - ex * bl) * d;\n          }\n\n          circumcenters[j] = x;\n          circumcenters[j + 1] = y;\n        } // Compute exterior cell rays.\n\n\n        let h = hull[hull.length - 1];\n        let p0,\n            p1 = h * 4;\n        let x0,\n            x1 = points[2 * h];\n        let y0,\n            y1 = points[2 * h + 1];\n        vectors.fill(0);\n\n        for (let i = 0; i < hull.length; ++i) {\n          h = hull[i];\n          p0 = p1, x0 = x1, y0 = y1;\n          p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n          vectors[p0 + 2] = vectors[p1] = y0 - y1;\n          vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n        }\n      }\n\n      render(context) {\n        const buffer = context == null ? context = new Path() : undefined;\n        const {\n          delaunay: {\n            halfedges,\n            inedges,\n            hull\n          },\n          circumcenters,\n          vectors\n        } = this;\n        if (hull.length <= 1) return null;\n\n        for (let i = 0, n = halfedges.length; i < n; ++i) {\n          const j = halfedges[i];\n          if (j < i) continue;\n          const ti = Math.floor(i / 3) * 2;\n          const tj = Math.floor(j / 3) * 2;\n          const xi = circumcenters[ti];\n          const yi = circumcenters[ti + 1];\n          const xj = circumcenters[tj];\n          const yj = circumcenters[tj + 1];\n\n          this._renderSegment(xi, yi, xj, yj, context);\n        }\n\n        let h0,\n            h1 = hull[hull.length - 1];\n\n        for (let i = 0; i < hull.length; ++i) {\n          h0 = h1, h1 = hull[i];\n          const t = Math.floor(inedges[h1] / 3) * 2;\n          const x = circumcenters[t];\n          const y = circumcenters[t + 1];\n          const v = h0 * 4;\n\n          const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n\n          if (p) this._renderSegment(x, y, p[0], p[1], context);\n        }\n\n        return buffer && buffer.value();\n      }\n\n      renderBounds(context) {\n        const buffer = context == null ? context = new Path() : undefined;\n        context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n        return buffer && buffer.value();\n      }\n\n      renderCell(i, context) {\n        const buffer = context == null ? context = new Path() : undefined;\n\n        const points = this._clip(i);\n\n        if (points === null || !points.length) return;\n        context.moveTo(points[0], points[1]);\n        let n = points.length;\n\n        while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) n -= 2;\n\n        for (let i = 2; i < n; i += 2) {\n          if (points[i] !== points[i - 2] || points[i + 1] !== points[i - 1]) context.lineTo(points[i], points[i + 1]);\n        }\n\n        context.closePath();\n        return buffer && buffer.value();\n      }\n\n      *cellPolygons() {\n        const {\n          delaunay: {\n            points\n          }\n        } = this;\n\n        for (let i = 0, n = points.length / 2; i < n; ++i) {\n          const cell = this.cellPolygon(i);\n          if (cell) cell.index = i, yield cell;\n        }\n      }\n\n      cellPolygon(i) {\n        const polygon = new Polygon();\n        this.renderCell(i, polygon);\n        return polygon.value();\n      }\n\n      _renderSegment(x0, y0, x1, y1, context) {\n        let S;\n\n        const c0 = this._regioncode(x0, y0);\n\n        const c1 = this._regioncode(x1, y1);\n\n        if (c0 === 0 && c1 === 0) {\n          context.moveTo(x0, y0);\n          context.lineTo(x1, y1);\n        } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n          context.moveTo(S[0], S[1]);\n          context.lineTo(S[2], S[3]);\n        }\n      }\n\n      contains(i, x, y) {\n        if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n        return this.delaunay._step(i, x, y) === i;\n      }\n\n      *neighbors(i) {\n        const ci = this._clip(i);\n\n        if (ci) for (const j of this.delaunay.neighbors(i)) {\n          const cj = this._clip(j); // find the common edge\n\n\n          if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n            for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n              if (ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]) {\n                yield j;\n                break loop;\n              }\n            }\n          }\n        }\n      }\n\n      _cell(i) {\n        const {\n          circumcenters,\n          delaunay: {\n            inedges,\n            halfedges,\n            triangles\n          }\n        } = this;\n        const e0 = inedges[i];\n        if (e0 === -1) return null; // coincident point\n\n        const points = [];\n        let e = e0;\n\n        do {\n          const t = Math.floor(e / 3);\n          points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n          e = e % 3 === 2 ? e - 2 : e + 1;\n          if (triangles[e] !== i) break; // bad triangulation\n\n          e = halfedges[e];\n        } while (e !== e0 && e !== -1);\n\n        return points;\n      }\n\n      _clip(i) {\n        // degenerate case (1 valid point: return the box)\n        if (i === 0 && this.delaunay.hull.length === 1) {\n          return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n        }\n\n        const points = this._cell(i);\n\n        if (points === null) return null;\n        const {\n          vectors: V\n        } = this;\n        const v = i * 4;\n        return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);\n      }\n\n      _clipFinite(i, points) {\n        const n = points.length;\n        let P = null;\n        let x0,\n            y0,\n            x1 = points[n - 2],\n            y1 = points[n - 1];\n\n        let c0,\n            c1 = this._regioncode(x1, y1);\n\n        let e0,\n            e1 = 0;\n\n        for (let j = 0; j < n; j += 2) {\n          x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n          c0 = c1, c1 = this._regioncode(x1, y1);\n\n          if (c0 === 0 && c1 === 0) {\n            e0 = e1, e1 = 0;\n            if (P) P.push(x1, y1);else P = [x1, y1];\n          } else {\n            let S, sx0, sy0, sx1, sy1;\n\n            if (c0 === 0) {\n              if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n              [sx0, sy0, sx1, sy1] = S;\n            } else {\n              if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n              [sx1, sy1, sx0, sy0] = S;\n              e0 = e1, e1 = this._edgecode(sx0, sy0);\n              if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n              if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n            }\n\n            e0 = e1, e1 = this._edgecode(sx1, sy1);\n            if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n            if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n          }\n        }\n\n        if (P) {\n          e0 = e1, e1 = this._edgecode(P[0], P[1]);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n          return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n        }\n\n        return P;\n      }\n\n      _clipSegment(x0, y0, x1, y1, c0, c1) {\n        while (true) {\n          if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n          if (c0 & c1) return null;\n          let x,\n              y,\n              c = c0 || c1;\n          if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n          if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n        }\n      }\n\n      _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n        let P = Array.from(points),\n            p;\n        if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n        if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n\n        if (P = this._clipFinite(i, P)) {\n          for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n            c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n            if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n          }\n        } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n          P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n        }\n\n        return P;\n      }\n\n      _edge(i, e0, e1, P, j) {\n        while (e0 !== e1) {\n          let x, y;\n\n          switch (e0) {\n            case 0b0101:\n              e0 = 0b0100;\n              continue;\n            // top-left\n\n            case 0b0100:\n              e0 = 0b0110, x = this.xmax, y = this.ymin;\n              break;\n            // top\n\n            case 0b0110:\n              e0 = 0b0010;\n              continue;\n            // top-right\n\n            case 0b0010:\n              e0 = 0b1010, x = this.xmax, y = this.ymax;\n              break;\n            // right\n\n            case 0b1010:\n              e0 = 0b1000;\n              continue;\n            // bottom-right\n\n            case 0b1000:\n              e0 = 0b1001, x = this.xmin, y = this.ymax;\n              break;\n            // bottom\n\n            case 0b1001:\n              e0 = 0b0001;\n              continue;\n            // bottom-left\n\n            case 0b0001:\n              e0 = 0b0101, x = this.xmin, y = this.ymin;\n              break;\n            // left\n          } // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n          // undefined, the conditional statement will be executed.\n\n\n          if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n            P.splice(j, 0, x, y), j += 2;\n          }\n        }\n\n        if (P.length > 4) {\n          for (let i = 0; i < P.length; i += 2) {\n            const j = (i + 2) % P.length,\n                  k = (i + 4) % P.length;\n            if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) P.splice(j, 2), i -= 2;\n          }\n        }\n\n        return j;\n      }\n\n      _project(x0, y0, vx, vy) {\n        let t = Infinity,\n            c,\n            x,\n            y;\n\n        if (vy < 0) {\n          // top\n          if (y0 <= this.ymin) return null;\n          if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n        } else if (vy > 0) {\n          // bottom\n          if (y0 >= this.ymax) return null;\n          if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n        }\n\n        if (vx > 0) {\n          // right\n          if (x0 >= this.xmax) return null;\n          if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n        } else if (vx < 0) {\n          // left\n          if (x0 <= this.xmin) return null;\n          if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n        }\n\n        return [x, y];\n      }\n\n      _edgecode(x, y) {\n        return (x === this.xmin ? 0b0001 : x === this.xmax ? 0b0010 : 0b0000) | (y === this.ymin ? 0b0100 : y === this.ymax ? 0b1000 : 0b0000);\n      }\n\n      _regioncode(x, y) {\n        return (x < this.xmin ? 0b0001 : x > this.xmax ? 0b0010 : 0b0000) | (y < this.ymin ? 0b0100 : y > this.ymax ? 0b1000 : 0b0000);\n      }\n\n    }\n\n    const tau = 2 * Math.PI,\n          pow = Math.pow;\n\n    function pointX(p) {\n      return p[0];\n    }\n\n    function pointY(p) {\n      return p[1];\n    } // A triangulation is collinear if all its triangles have a non-null area\n\n\n    function collinear(d) {\n      const {\n        triangles,\n        coords\n      } = d;\n\n      for (let i = 0; i < triangles.length; i += 3) {\n        const a = 2 * triangles[i],\n              b = 2 * triangles[i + 1],\n              c = 2 * triangles[i + 2],\n              cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n        if (cross > 1e-10) return false;\n      }\n\n      return true;\n    }\n\n    function jitter(x, y, r) {\n      return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n    }\n\n    class Delaunay {\n      static from(points, fx = pointX, fy = pointY, that) {\n        return new Delaunay(\"length\" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n      }\n\n      constructor(points) {\n        this._delaunator = new Delaunator(points);\n        this.inedges = new Int32Array(points.length / 2);\n        this._hullIndex = new Int32Array(points.length / 2);\n        this.points = this._delaunator.coords;\n\n        this._init();\n      }\n\n      update() {\n        this._delaunator.update();\n\n        this._init();\n\n        return this;\n      }\n\n      _init() {\n        const d = this._delaunator,\n              points = this.points; // check for collinear\n\n        if (d.hull && d.hull.length > 2 && collinear(d)) {\n          this.collinear = Int32Array.from({\n            length: points.length / 2\n          }, (_, i) => i).sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n\n          const e = this.collinear[0],\n                f = this.collinear[this.collinear.length - 1],\n                bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n                r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n\n          for (let i = 0, n = points.length / 2; i < n; ++i) {\n            const p = jitter(points[2 * i], points[2 * i + 1], r);\n            points[2 * i] = p[0];\n            points[2 * i + 1] = p[1];\n          }\n\n          this._delaunator = new Delaunator(points);\n        } else {\n          delete this.collinear;\n        }\n\n        const halfedges = this.halfedges = this._delaunator.halfedges;\n        const hull = this.hull = this._delaunator.hull;\n        const triangles = this.triangles = this._delaunator.triangles;\n        const inedges = this.inedges.fill(-1);\n\n        const hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n        // Used to give the first neighbor of each point; for this reason,\n        // on the hull we give priority to exterior halfedges\n\n\n        for (let e = 0, n = halfedges.length; e < n; ++e) {\n          const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n          if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n        }\n\n        for (let i = 0, n = hull.length; i < n; ++i) {\n          hullIndex[hull[i]] = i;\n        } // degenerate case: 1 or 2 (distinct) points\n\n\n        if (hull.length <= 2 && hull.length > 0) {\n          this.triangles = new Int32Array(3).fill(-1);\n          this.halfedges = new Int32Array(3).fill(-1);\n          this.triangles[0] = hull[0];\n          inedges[hull[0]] = 1;\n\n          if (hull.length === 2) {\n            inedges[hull[1]] = 0;\n            this.triangles[1] = hull[1];\n            this.triangles[2] = hull[1];\n          }\n        }\n      }\n\n      voronoi(bounds) {\n        return new Voronoi$1(this, bounds);\n      }\n\n      *neighbors(i) {\n        const {\n          inedges,\n          hull,\n          _hullIndex,\n          halfedges,\n          triangles,\n          collinear\n        } = this; // degenerate case with several collinear points\n\n        if (collinear) {\n          const l = collinear.indexOf(i);\n          if (l > 0) yield collinear[l - 1];\n          if (l < collinear.length - 1) yield collinear[l + 1];\n          return;\n        }\n\n        const e0 = inedges[i];\n        if (e0 === -1) return; // coincident point\n\n        let e = e0,\n            p0 = -1;\n\n        do {\n          yield p0 = triangles[e];\n          e = e % 3 === 2 ? e - 2 : e + 1;\n          if (triangles[e] !== i) return; // bad triangulation\n\n          e = halfedges[e];\n\n          if (e === -1) {\n            const p = hull[(_hullIndex[i] + 1) % hull.length];\n            if (p !== p0) yield p;\n            return;\n          }\n        } while (e !== e0);\n      }\n\n      find(x, y, i = 0) {\n        if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n        const i0 = i;\n        let c;\n\n        while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n\n        return c;\n      }\n\n      _step(i, x, y) {\n        const {\n          inedges,\n          hull,\n          _hullIndex,\n          halfedges,\n          triangles,\n          points\n        } = this;\n        if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n        let c = i;\n        let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n        const e0 = inedges[i];\n        let e = e0;\n\n        do {\n          let t = triangles[e];\n          const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n          if (dt < dc) dc = dt, c = t;\n          e = e % 3 === 2 ? e - 2 : e + 1;\n          if (triangles[e] !== i) break; // bad triangulation\n\n          e = halfedges[e];\n\n          if (e === -1) {\n            e = hull[(_hullIndex[i] + 1) % hull.length];\n\n            if (e !== t) {\n              if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n            }\n\n            break;\n          }\n        } while (e !== e0);\n\n        return c;\n      }\n\n      render(context) {\n        const buffer = context == null ? context = new Path() : undefined;\n        const {\n          points,\n          halfedges,\n          triangles\n        } = this;\n\n        for (let i = 0, n = halfedges.length; i < n; ++i) {\n          const j = halfedges[i];\n          if (j < i) continue;\n          const ti = triangles[i] * 2;\n          const tj = triangles[j] * 2;\n          context.moveTo(points[ti], points[ti + 1]);\n          context.lineTo(points[tj], points[tj + 1]);\n        }\n\n        this.renderHull(context);\n        return buffer && buffer.value();\n      }\n\n      renderPoints(context, r) {\n        if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n        r = r == undefined ? 2 : +r;\n        const buffer = context == null ? context = new Path() : undefined;\n        const {\n          points\n        } = this;\n\n        for (let i = 0, n = points.length; i < n; i += 2) {\n          const x = points[i],\n                y = points[i + 1];\n          context.moveTo(x + r, y);\n          context.arc(x, y, r, 0, tau);\n        }\n\n        return buffer && buffer.value();\n      }\n\n      renderHull(context) {\n        const buffer = context == null ? context = new Path() : undefined;\n        const {\n          hull,\n          points\n        } = this;\n        const h = hull[0] * 2,\n              n = hull.length;\n        context.moveTo(points[h], points[h + 1]);\n\n        for (let i = 1; i < n; ++i) {\n          const h = 2 * hull[i];\n          context.lineTo(points[h], points[h + 1]);\n        }\n\n        context.closePath();\n        return buffer && buffer.value();\n      }\n\n      hullPolygon() {\n        const polygon = new Polygon();\n        this.renderHull(polygon);\n        return polygon.value();\n      }\n\n      renderTriangle(i, context) {\n        const buffer = context == null ? context = new Path() : undefined;\n        const {\n          points,\n          triangles\n        } = this;\n        const t0 = triangles[i *= 3] * 2;\n        const t1 = triangles[i + 1] * 2;\n        const t2 = triangles[i + 2] * 2;\n        context.moveTo(points[t0], points[t0 + 1]);\n        context.lineTo(points[t1], points[t1 + 1]);\n        context.lineTo(points[t2], points[t2 + 1]);\n        context.closePath();\n        return buffer && buffer.value();\n      }\n\n      *trianglePolygons() {\n        const {\n          triangles\n        } = this;\n\n        for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n          yield this.trianglePolygon(i);\n        }\n      }\n\n      trianglePolygon(i) {\n        const polygon = new Polygon();\n        this.renderTriangle(i, polygon);\n        return polygon.value();\n      }\n\n    }\n\n    function flatArray(points, fx, fy, that) {\n      const n = points.length;\n      const array = new Float64Array(n * 2);\n\n      for (let i = 0; i < n; ++i) {\n        const p = points[i];\n        array[i * 2] = fx.call(that, p, i, points);\n        array[i * 2 + 1] = fy.call(that, p, i, points);\n      }\n\n      return array;\n    }\n\n    function* flatIterable(points, fx, fy, that) {\n      let i = 0;\n\n      for (const p of points) {\n        yield fx.call(that, p, i, points);\n        yield fy.call(that, p, i, points);\n        ++i;\n      }\n    }\n\n    function Voronoi(params) {\n      vegaDataflow.Transform.call(this, null, params);\n    }\n    Voronoi.Definition = {\n      'type': 'Voronoi',\n      'metadata': {\n        'modifies': true\n      },\n      'params': [{\n        'name': 'x',\n        'type': 'field',\n        'required': true\n      }, {\n        'name': 'y',\n        'type': 'field',\n        'required': true\n      }, {\n        'name': 'size',\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }, {\n        'name': 'extent',\n        'type': 'array',\n        'array': true,\n        'length': 2,\n        'default': [[-1e5, -1e5], [1e5, 1e5]],\n        'content': {\n          'type': 'number',\n          'array': true,\n          'length': 2\n        }\n      }, {\n        'name': 'as',\n        'type': 'string',\n        'default': 'path'\n      }]\n    };\n    const defaultExtent = [-1e5, -1e5, 1e5, 1e5];\n    vegaUtil.inherits(Voronoi, vegaDataflow.Transform, {\n      transform(_, pulse) {\n        const as = _.as || 'path',\n              data = pulse.source; // nothing to do if no data\n\n        if (!data || !data.length) return pulse; // configure and construct voronoi diagram\n\n        let s = _.size;\n        s = s ? [0, 0, s[0], s[1]] : (s = _.extent) ? [s[0][0], s[0][1], s[1][0], s[1][1]] : defaultExtent;\n        const voronoi = this.value = Delaunay.from(data, _.x, _.y).voronoi(s); // map polygons to paths\n\n        for (let i = 0, n = data.length; i < n; ++i) {\n          const polygon = voronoi.cellPolygon(i);\n          data[i][as] = polygon ? toPathString(polygon) : null;\n        }\n\n        return pulse.reflow(_.modified()).modifies(as);\n      }\n\n    }); // suppress duplicated end point vertices\n\n    function toPathString(p) {\n      const x = p[0][0],\n            y = p[0][1];\n      let n = p.length - 1;\n\n      for (; p[n][0] === x && p[n][1] === y; --n);\n\n      return 'M' + p.slice(0, n + 1).join('L') + 'Z';\n    }\n\n    exports.voronoi = Voronoi;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaDataflow","vegaUtil","sum","elen","e","flen","f","h","Q","Qnew","enow","fnow","eindex","findex","hindex","hh","bvirt","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","Math","abs","ccwerrboundA","blo","acx","bcx","acy","bcy","s1","c","splitter","ahi","alo","bhi","s0","t1","t0","_i","B","_j","_0","u3","i","errbound","ccwerrboundB","acxtail","bcxtail","acytail","bcytail","ccwerrboundC","resulterrbound","u","C1len","C1","C2len","C2","Dlen","D","dist","dx","dy","quicksort","ids","dists","left","right","temp","tempDist","j","swap","arr","tmp","defaultGetX","p","defaultGetY","pointX","pointY","collinear","d","triangles","coords","length","a","b","jitter","x","y","r","sin","cos","flatIterable","points","fx","fy","that","call","Voronoi","params","Transform","Float64Array","n","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","from","getX","getY","constructor","Error","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","minDist","i0","i0x","i0y","i1","i1x","i1y","minRadius","ex","ey","bl","cl","i2","i2x","i2y","hull","d0","id","subarray","halfedges","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","k","xp","yp","start","key","q","t","_legalize","floor","ar","a0","b0","p0","pr","pl","p1","px","py","bp","cp","hbl","_link","br","Path","_x0","_y0","_x1","_y1","_","moveTo","closePath","lineTo","arc","x0","y0","epsilon","rect","w","value","Polygon","push","slice","Voronoi$1","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","circumcenters","t2","t3","x1","y1","x3","y3","x2","y2","ab","sign","render","context","buffer","undefined","inedges","ti","tj","_renderSegment","xi","yi","xj","yj","h1","h0","v","_project","renderBounds","renderCell","_clip","cellPolygons","cell","cellPolygon","index","polygon","c0","_regioncode","c1","S","_clipSegment","contains","_step","neighbors","ci","cj","ai","li","aj","lj","_cell","e0","V","_clipInfinite","_clipFinite","P","e1","sx1","sy1","sx0","sy0","_edgecode","_edge","vx0","vy0","vxn","vyn","Array","unshift","splice","vx","vy","tau","PI","Delaunay","array","_delaunator","_hullIndex","sort","bounds","hypot","hullIndex","voronoi","l","indexOf","find","dc","dt","renderHull","renderPoints","hullPolygon","renderTriangle","trianglePolygons","trianglePolygon","Definition","defaultExtent","inherits","transform","pulse","as","data","source","s","size","extent","join","reflow","modified","modifies","Object","defineProperty"]
}
