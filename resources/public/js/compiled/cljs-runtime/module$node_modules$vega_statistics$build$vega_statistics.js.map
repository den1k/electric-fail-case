{
"version":3,
"file":"module$node_modules$vega_statistics$build$vega_statistics.js",
"lineCount":42,
"mappings":"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",
"sources":["node_modules/vega-statistics/build/vega-statistics.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_statistics$build$vega_statistics\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}));\n})(this, (function (exports) { 'use strict';\n\n  function* numbers$1 (values, valueof) {\n    if (valueof == null) {\n      for (let value of values) {\n        if (value != null && value !== '' && (value = +value) >= value) {\n          yield value;\n        }\n      }\n    } else {\n      let index = -1;\n\n      for (let value of values) {\n        value = valueof(value, ++index, values);\n\n        if (value != null && value !== '' && (value = +value) >= value) {\n          yield value;\n        }\n      }\n    }\n  }\n\n  function ascending(a, b) {\n    return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n  function* numbers(values, valueof) {\n    if (valueof === undefined) {\n      for (let value of values) {\n        if (value != null && (value = +value) >= value) {\n          yield value;\n        }\n      }\n    } else {\n      let index = -1;\n\n      for (let value of values) {\n        if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n          yield value;\n        }\n      }\n    }\n  }\n\n  function variance(values, valueof) {\n    let count = 0;\n    let delta;\n    let mean = 0;\n    let sum = 0;\n\n    if (valueof === undefined) {\n      for (let value of values) {\n        if (value != null && (value = +value) >= value) {\n          delta = value - mean;\n          mean += delta / ++count;\n          sum += delta * (value - mean);\n        }\n      }\n    } else {\n      let index = -1;\n\n      for (let value of values) {\n        if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n          delta = value - mean;\n          mean += delta / ++count;\n          sum += delta * (value - mean);\n        }\n      }\n    }\n\n    if (count > 1) return sum / (count - 1);\n  }\n\n  function deviation(values, valueof) {\n    const v = variance(values, valueof);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function compareDefined(compare = ascending) {\n    if (compare === ascending) return ascendingDefined;\n    if (typeof compare !== \"function\") throw new TypeError(\"compare is not a function\");\n    return (a, b) => {\n      const x = compare(a, b);\n      if (x || x === 0) return x;\n      return (compare(b, b) === 0) - (compare(a, a) === 0);\n    };\n  }\n  function ascendingDefined(a, b) {\n    return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n  }\n\n  function max(values, valueof) {\n    let max;\n\n    if (valueof === undefined) {\n      for (const value of values) {\n        if (value != null && (max < value || max === undefined && value >= value)) {\n          max = value;\n        }\n      }\n    } else {\n      let index = -1;\n\n      for (let value of values) {\n        if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) {\n          max = value;\n        }\n      }\n    }\n\n    return max;\n  }\n\n  function min(values, valueof) {\n    let min;\n\n    if (valueof === undefined) {\n      for (const value of values) {\n        if (value != null && (min > value || min === undefined && value >= value)) {\n          min = value;\n        }\n      }\n    } else {\n      let index = -1;\n\n      for (let value of values) {\n        if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) {\n          min = value;\n        }\n      }\n    }\n\n    return min;\n  }\n\n  // ISC license, Copyright 2018 Vladimir Agafonkin.\n\n  function quickselect(array, k, left = 0, right = array.length - 1, compare) {\n    compare = compare === undefined ? ascendingDefined : compareDefined(compare);\n\n    while (right > left) {\n      if (right - left > 600) {\n        const n = right - left + 1;\n        const m = k - left + 1;\n        const z = Math.log(n);\n        const s = 0.5 * Math.exp(2 * z / 3);\n        const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n        const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n        const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n        quickselect(array, k, newLeft, newRight, compare);\n      }\n\n      const t = array[k];\n      let i = left;\n      let j = right;\n      swap(array, left, k);\n      if (compare(array[right], t) > 0) swap(array, left, right);\n\n      while (i < j) {\n        swap(array, i, j), ++i, --j;\n\n        while (compare(array[i], t) < 0) ++i;\n\n        while (compare(array[j], t) > 0) --j;\n      }\n\n      if (compare(array[left], t) === 0) swap(array, left, j);else ++j, swap(array, j, right);\n      if (j <= k) left = j + 1;\n      if (k <= j) right = j - 1;\n    }\n\n    return array;\n  }\n\n  function swap(array, i, j) {\n    const t = array[i];\n    array[i] = array[j];\n    array[j] = t;\n  }\n\n  function quantile(values, p, valueof) {\n    values = Float64Array.from(numbers(values, valueof));\n    if (!(n = values.length)) return;\n    if ((p = +p) <= 0 || n < 2) return min(values);\n    if (p >= 1) return max(values);\n    var n,\n        i = (n - 1) * p,\n        i0 = Math.floor(i),\n        value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n        value1 = min(values.subarray(i0 + 1));\n    return value0 + (value1 - value0) * (i - i0);\n  }\n  function quantileSorted(values, p, valueof = number) {\n    if (!(n = values.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n    if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n    var n,\n        i = (n - 1) * p,\n        i0 = Math.floor(i),\n        value0 = +valueof(values[i0], i0, values),\n        value1 = +valueof(values[i0 + 1], i0 + 1, values);\n    return value0 + (value1 - value0) * (i - i0);\n  }\n\n  function median(values, valueof) {\n    return quantile(values, 0.5, valueof);\n  }\n\n  function quantiles (array, p, f) {\n    const values = Float64Array.from(numbers$1(array, f)); // don't depend on return value from typed array sort call\n    // protects against undefined sort results in Safari (vega/vega-lite#4964)\n\n    values.sort(ascending);\n    return p.map(_ => quantileSorted(values, _));\n  }\n\n  function quartiles (array, f) {\n    return quantiles(array, [0.25, 0.50, 0.75], f);\n  }\n\n  // Theory, Practice, and Visualization. Wiley.\n\n  function estimateBandwidth (array, f) {\n    const n = array.length,\n          d = deviation(array, f),\n          q = quartiles(array, f),\n          h = (q[2] - q[0]) / 1.34,\n          v = Math.min(d, h) || d || Math.abs(q[0]) || 1;\n    return 1.06 * v * Math.pow(n, -0.2);\n  }\n\n  function bin (_) {\n    // determine range\n    const maxb = _.maxbins || 20,\n          base = _.base || 10,\n          logb = Math.log(base),\n          div = _.divide || [5, 2];\n    let min = _.extent[0],\n        max = _.extent[1],\n        step,\n        level,\n        minstep,\n        v,\n        i,\n        n;\n    const span = _.span || max - min || Math.abs(min) || 1;\n\n    if (_.step) {\n      // if step size is explicitly given, use that\n      step = _.step;\n    } else if (_.steps) {\n      // if provided, limit choice to acceptable step sizes\n      v = span / maxb;\n\n      for (i = 0, n = _.steps.length; i < n && _.steps[i] < v; ++i);\n\n      step = _.steps[Math.max(0, i - 1)];\n    } else {\n      // else use span to determine step size\n      level = Math.ceil(Math.log(maxb) / logb);\n      minstep = _.minstep || 0;\n      step = Math.max(minstep, Math.pow(base, Math.round(Math.log(span) / logb) - level)); // increase step size if too many bins\n\n      while (Math.ceil(span / step) > maxb) {\n        step *= base;\n      } // decrease step size if allowed\n\n\n      for (i = 0, n = div.length; i < n; ++i) {\n        v = step / div[i];\n        if (v >= minstep && span / v <= maxb) step = v;\n      }\n    } // update precision, min and max\n\n\n    v = Math.log(step);\n    const precision = v >= 0 ? 0 : ~~(-v / logb) + 1,\n          eps = Math.pow(base, -precision - 1);\n\n    if (_.nice || _.nice === undefined) {\n      v = Math.floor(min / step + eps) * step;\n      min = min < v ? v - step : v;\n      max = Math.ceil(max / step) * step;\n    }\n\n    return {\n      start: min,\n      stop: max === min ? min + step : max,\n      step: step\n    };\n  }\n\n  exports.random = Math.random;\n  function setRandom(r) {\n    exports.random = r;\n  }\n\n  function bootstrapCI (array, samples, alpha, f) {\n    if (!array.length) return [undefined, undefined];\n    const values = Float64Array.from(numbers$1(array, f)),\n          n = values.length,\n          m = samples;\n    let a, i, j, mu;\n\n    for (j = 0, mu = Array(m); j < m; ++j) {\n      for (a = 0, i = 0; i < n; ++i) {\n        a += values[~~(exports.random() * n)];\n      }\n\n      mu[j] = a / n;\n    }\n\n    mu.sort(ascending);\n    return [quantile(mu, alpha / 2), quantile(mu, 1 - alpha / 2)];\n  }\n\n  // Dot density binning for dot plot construction.\n  // Based on Leland Wilkinson, Dot Plots, The American Statistician, 1999.\n  // https://www.cs.uic.edu/~wilkinson/Publications/dotplots.pdf\n  function dotbin (array, step, smooth, f) {\n    f = f || (_ => _);\n\n    const n = array.length,\n          v = new Float64Array(n);\n    let i = 0,\n        j = 1,\n        a = f(array[0]),\n        b = a,\n        w = a + step,\n        x;\n\n    for (; j < n; ++j) {\n      x = f(array[j]);\n\n      if (x >= w) {\n        b = (a + b) / 2;\n\n        for (; i < j; ++i) v[i] = b;\n\n        w = x + step;\n        a = x;\n      }\n\n      b = x;\n    }\n\n    b = (a + b) / 2;\n\n    for (; i < j; ++i) v[i] = b;\n\n    return smooth ? smoothing(v, step + step / 4) : v;\n  } // perform smoothing to reduce variance\n  // swap points between \"adjacent\" stacks\n  // Wilkinson defines adjacent as within step/4 units\n\n  function smoothing(v, thresh) {\n    const n = v.length;\n    let a = 0,\n        b = 1,\n        c,\n        d; // get left stack\n\n    while (v[a] === v[b]) ++b;\n\n    while (b < n) {\n      // get right stack\n      c = b + 1;\n\n      while (v[b] === v[c]) ++c; // are stacks adjacent?\n      // if so, compare sizes and swap as needed\n\n\n      if (v[b] - v[b - 1] < thresh) {\n        d = b + (a + c - b - b >> 1);\n\n        while (d < b) v[d++] = v[b];\n\n        while (d > b) v[d--] = v[a];\n      } // update left stack indices\n\n\n      a = b;\n      b = c;\n    }\n\n    return v;\n  }\n\n  function lcg (seed) {\n    // Random numbers using a Linear Congruential Generator with seed value\n    // Uses glibc values from https://en.wikipedia.org/wiki/Linear_congruential_generator\n    return function () {\n      seed = (1103515245 * seed + 12345) % 2147483647;\n      return seed / 2147483647;\n    };\n  }\n\n  function integer (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n\n    let a, b, d;\n    const dist = {\n      min(_) {\n        if (arguments.length) {\n          a = _ || 0;\n          d = b - a;\n          return dist;\n        } else {\n          return a;\n        }\n      },\n\n      max(_) {\n        if (arguments.length) {\n          b = _ || 0;\n          d = b - a;\n          return dist;\n        } else {\n          return b;\n        }\n      },\n\n      sample() {\n        return a + Math.floor(d * exports.random());\n      },\n\n      pdf(x) {\n        return x === Math.floor(x) && x >= a && x < b ? 1 / d : 0;\n      },\n\n      cdf(x) {\n        const v = Math.floor(x);\n        return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;\n      },\n\n      icdf(p) {\n        return p >= 0 && p <= 1 ? a - 1 + Math.floor(p * d) : NaN;\n      }\n\n    };\n    return dist.min(min).max(max);\n  }\n\n  const SQRT2PI = Math.sqrt(2 * Math.PI);\n  const SQRT2 = Math.SQRT2;\n\n  let nextSample = NaN;\n  function sampleNormal(mean, stdev) {\n    mean = mean || 0;\n    stdev = stdev == null ? 1 : stdev;\n    let x = 0,\n        y = 0,\n        rds,\n        c;\n\n    if (nextSample === nextSample) {\n      x = nextSample;\n      nextSample = NaN;\n    } else {\n      do {\n        x = exports.random() * 2 - 1;\n        y = exports.random() * 2 - 1;\n        rds = x * x + y * y;\n      } while (rds === 0 || rds > 1);\n\n      c = Math.sqrt(-2 * Math.log(rds) / rds); // Box-Muller transform\n\n      x *= c;\n      nextSample = y * c;\n    }\n\n    return mean + x * stdev;\n  }\n  function densityNormal(value, mean, stdev) {\n    stdev = stdev == null ? 1 : stdev;\n    const z = (value - (mean || 0)) / stdev;\n    return Math.exp(-0.5 * z * z) / (stdev * SQRT2PI);\n  } // Approximation from West (2009)\n  // Better Approximations to Cumulative Normal Functions\n\n  function cumulativeNormal(value, mean, stdev) {\n    mean = mean || 0;\n    stdev = stdev == null ? 1 : stdev;\n    const z = (value - mean) / stdev,\n          Z = Math.abs(z);\n    let cd;\n\n    if (Z > 37) {\n      cd = 0;\n    } else {\n      const exp = Math.exp(-Z * Z / 2);\n      let sum;\n\n      if (Z < 7.07106781186547) {\n        sum = 3.52624965998911e-02 * Z + 0.700383064443688;\n        sum = sum * Z + 6.37396220353165;\n        sum = sum * Z + 33.912866078383;\n        sum = sum * Z + 112.079291497871;\n        sum = sum * Z + 221.213596169931;\n        sum = sum * Z + 220.206867912376;\n        cd = exp * sum;\n        sum = 8.83883476483184e-02 * Z + 1.75566716318264;\n        sum = sum * Z + 16.064177579207;\n        sum = sum * Z + 86.7807322029461;\n        sum = sum * Z + 296.564248779674;\n        sum = sum * Z + 637.333633378831;\n        sum = sum * Z + 793.826512519948;\n        sum = sum * Z + 440.413735824752;\n        cd = cd / sum;\n      } else {\n        sum = Z + 0.65;\n        sum = Z + 4 / sum;\n        sum = Z + 3 / sum;\n        sum = Z + 2 / sum;\n        sum = Z + 1 / sum;\n        cd = exp / sum / 2.506628274631;\n      }\n    }\n\n    return z > 0 ? 1 - cd : cd;\n  } // Approximation of Probit function using inverse error function.\n\n  function quantileNormal(p, mean, stdev) {\n    if (p < 0 || p > 1) return NaN;\n    return (mean || 0) + (stdev == null ? 1 : stdev) * SQRT2 * erfinv(2 * p - 1);\n  } // Approximate inverse error function. Implementation from \"Approximating\n  // the erfinv function\" by Mike Giles, GPU Computing Gems, volume 2, 2010.\n  // Ported from Apache Commons Math, http://www.apache.org/licenses/LICENSE-2.0\n\n  function erfinv(x) {\n    // beware that the logarithm argument must be\n    // commputed as (1.0 - x) * (1.0 + x),\n    // it must NOT be simplified as 1.0 - x * x as this\n    // would induce rounding errors near the boundaries +/-1\n    let w = -Math.log((1 - x) * (1 + x)),\n        p;\n\n    if (w < 6.25) {\n      w -= 3.125;\n      p = -3.6444120640178196996e-21;\n      p = -1.685059138182016589e-19 + p * w;\n      p = 1.2858480715256400167e-18 + p * w;\n      p = 1.115787767802518096e-17 + p * w;\n      p = -1.333171662854620906e-16 + p * w;\n      p = 2.0972767875968561637e-17 + p * w;\n      p = 6.6376381343583238325e-15 + p * w;\n      p = -4.0545662729752068639e-14 + p * w;\n      p = -8.1519341976054721522e-14 + p * w;\n      p = 2.6335093153082322977e-12 + p * w;\n      p = -1.2975133253453532498e-11 + p * w;\n      p = -5.4154120542946279317e-11 + p * w;\n      p = 1.051212273321532285e-09 + p * w;\n      p = -4.1126339803469836976e-09 + p * w;\n      p = -2.9070369957882005086e-08 + p * w;\n      p = 4.2347877827932403518e-07 + p * w;\n      p = -1.3654692000834678645e-06 + p * w;\n      p = -1.3882523362786468719e-05 + p * w;\n      p = 0.0001867342080340571352 + p * w;\n      p = -0.00074070253416626697512 + p * w;\n      p = -0.0060336708714301490533 + p * w;\n      p = 0.24015818242558961693 + p * w;\n      p = 1.6536545626831027356 + p * w;\n    } else if (w < 16.0) {\n      w = Math.sqrt(w) - 3.25;\n      p = 2.2137376921775787049e-09;\n      p = 9.0756561938885390979e-08 + p * w;\n      p = -2.7517406297064545428e-07 + p * w;\n      p = 1.8239629214389227755e-08 + p * w;\n      p = 1.5027403968909827627e-06 + p * w;\n      p = -4.013867526981545969e-06 + p * w;\n      p = 2.9234449089955446044e-06 + p * w;\n      p = 1.2475304481671778723e-05 + p * w;\n      p = -4.7318229009055733981e-05 + p * w;\n      p = 6.8284851459573175448e-05 + p * w;\n      p = 2.4031110387097893999e-05 + p * w;\n      p = -0.0003550375203628474796 + p * w;\n      p = 0.00095328937973738049703 + p * w;\n      p = -0.0016882755560235047313 + p * w;\n      p = 0.0024914420961078508066 + p * w;\n      p = -0.0037512085075692412107 + p * w;\n      p = 0.005370914553590063617 + p * w;\n      p = 1.0052589676941592334 + p * w;\n      p = 3.0838856104922207635 + p * w;\n    } else if (Number.isFinite(w)) {\n      w = Math.sqrt(w) - 5.0;\n      p = -2.7109920616438573243e-11;\n      p = -2.5556418169965252055e-10 + p * w;\n      p = 1.5076572693500548083e-09 + p * w;\n      p = -3.7894654401267369937e-09 + p * w;\n      p = 7.6157012080783393804e-09 + p * w;\n      p = -1.4960026627149240478e-08 + p * w;\n      p = 2.9147953450901080826e-08 + p * w;\n      p = -6.7711997758452339498e-08 + p * w;\n      p = 2.2900482228026654717e-07 + p * w;\n      p = -9.9298272942317002539e-07 + p * w;\n      p = 4.5260625972231537039e-06 + p * w;\n      p = -1.9681778105531670567e-05 + p * w;\n      p = 7.5995277030017761139e-05 + p * w;\n      p = -0.00021503011930044477347 + p * w;\n      p = -0.00013871931833623122026 + p * w;\n      p = 1.0103004648645343977 + p * w;\n      p = 4.8499064014085844221 + p * w;\n    } else {\n      p = Infinity;\n    }\n\n    return p * x;\n  }\n\n  function gaussian (mean, stdev) {\n    let mu, sigma;\n    const dist = {\n      mean(_) {\n        if (arguments.length) {\n          mu = _ || 0;\n          return dist;\n        } else {\n          return mu;\n        }\n      },\n\n      stdev(_) {\n        if (arguments.length) {\n          sigma = _ == null ? 1 : _;\n          return dist;\n        } else {\n          return sigma;\n        }\n      },\n\n      sample: () => sampleNormal(mu, sigma),\n      pdf: value => densityNormal(value, mu, sigma),\n      cdf: value => cumulativeNormal(value, mu, sigma),\n      icdf: p => quantileNormal(p, mu, sigma)\n    };\n    return dist.mean(mean).stdev(stdev);\n  }\n\n  function kde (support, bandwidth) {\n    const kernel = gaussian();\n    let n = 0;\n    const dist = {\n      data(_) {\n        if (arguments.length) {\n          support = _;\n          n = _ ? _.length : 0;\n          return dist.bandwidth(bandwidth);\n        } else {\n          return support;\n        }\n      },\n\n      bandwidth(_) {\n        if (!arguments.length) return bandwidth;\n        bandwidth = _;\n        if (!bandwidth && support) bandwidth = estimateBandwidth(support);\n        return dist;\n      },\n\n      sample() {\n        return support[~~(exports.random() * n)] + bandwidth * kernel.sample();\n      },\n\n      pdf(x) {\n        let y = 0,\n            i = 0;\n\n        for (; i < n; ++i) {\n          y += kernel.pdf((x - support[i]) / bandwidth);\n        }\n\n        return y / bandwidth / n;\n      },\n\n      cdf(x) {\n        let y = 0,\n            i = 0;\n\n        for (; i < n; ++i) {\n          y += kernel.cdf((x - support[i]) / bandwidth);\n        }\n\n        return y / n;\n      },\n\n      icdf() {\n        throw Error('KDE icdf not supported.');\n      }\n\n    };\n    return dist.data(support);\n  }\n\n  function sampleLogNormal(mean, stdev) {\n    mean = mean || 0;\n    stdev = stdev == null ? 1 : stdev;\n    return Math.exp(mean + sampleNormal() * stdev);\n  }\n  function densityLogNormal(value, mean, stdev) {\n    if (value <= 0) return 0;\n    mean = mean || 0;\n    stdev = stdev == null ? 1 : stdev;\n    const z = (Math.log(value) - mean) / stdev;\n    return Math.exp(-0.5 * z * z) / (stdev * SQRT2PI * value);\n  }\n  function cumulativeLogNormal(value, mean, stdev) {\n    return cumulativeNormal(Math.log(value), mean, stdev);\n  }\n  function quantileLogNormal(p, mean, stdev) {\n    return Math.exp(quantileNormal(p, mean, stdev));\n  }\n  function lognormal (mean, stdev) {\n    let mu, sigma;\n    const dist = {\n      mean(_) {\n        if (arguments.length) {\n          mu = _ || 0;\n          return dist;\n        } else {\n          return mu;\n        }\n      },\n\n      stdev(_) {\n        if (arguments.length) {\n          sigma = _ == null ? 1 : _;\n          return dist;\n        } else {\n          return sigma;\n        }\n      },\n\n      sample: () => sampleLogNormal(mu, sigma),\n      pdf: value => densityLogNormal(value, mu, sigma),\n      cdf: value => cumulativeLogNormal(value, mu, sigma),\n      icdf: p => quantileLogNormal(p, mu, sigma)\n    };\n    return dist.mean(mean).stdev(stdev);\n  }\n\n  function mixture (dists, weights) {\n    let m = 0,\n        w;\n\n    function normalize(x) {\n      const w = [];\n      let sum = 0,\n          i;\n\n      for (i = 0; i < m; ++i) {\n        sum += w[i] = x[i] == null ? 1 : +x[i];\n      }\n\n      for (i = 0; i < m; ++i) {\n        w[i] /= sum;\n      }\n\n      return w;\n    }\n\n    const dist = {\n      weights(_) {\n        if (arguments.length) {\n          w = normalize(weights = _ || []);\n          return dist;\n        }\n\n        return weights;\n      },\n\n      distributions(_) {\n        if (arguments.length) {\n          if (_) {\n            m = _.length;\n            dists = _;\n          } else {\n            m = 0;\n            dists = [];\n          }\n\n          return dist.weights(weights);\n        }\n\n        return dists;\n      },\n\n      sample() {\n        const r = exports.random();\n        let d = dists[m - 1],\n            v = w[0],\n            i = 0; // first select distribution\n\n        for (; i < m - 1; v += w[++i]) {\n          if (r < v) {\n            d = dists[i];\n            break;\n          }\n        } // then sample from it\n\n\n        return d.sample();\n      },\n\n      pdf(x) {\n        let p = 0,\n            i = 0;\n\n        for (; i < m; ++i) {\n          p += w[i] * dists[i].pdf(x);\n        }\n\n        return p;\n      },\n\n      cdf(x) {\n        let p = 0,\n            i = 0;\n\n        for (; i < m; ++i) {\n          p += w[i] * dists[i].cdf(x);\n        }\n\n        return p;\n      },\n\n      icdf() {\n        throw Error('Mixture icdf not supported.');\n      }\n\n    };\n    return dist.distributions(dists).weights(weights);\n  }\n\n  function sampleUniform(min, max) {\n    if (max == null) {\n      max = min == null ? 1 : min;\n      min = 0;\n    }\n\n    return min + (max - min) * exports.random();\n  }\n  function densityUniform(value, min, max) {\n    if (max == null) {\n      max = min == null ? 1 : min;\n      min = 0;\n    }\n\n    return value >= min && value <= max ? 1 / (max - min) : 0;\n  }\n  function cumulativeUniform(value, min, max) {\n    if (max == null) {\n      max = min == null ? 1 : min;\n      min = 0;\n    }\n\n    return value < min ? 0 : value > max ? 1 : (value - min) / (max - min);\n  }\n  function quantileUniform(p, min, max) {\n    if (max == null) {\n      max = min == null ? 1 : min;\n      min = 0;\n    }\n\n    return p >= 0 && p <= 1 ? min + p * (max - min) : NaN;\n  }\n  function uniform (min, max) {\n    let a, b;\n    const dist = {\n      min(_) {\n        if (arguments.length) {\n          a = _ || 0;\n          return dist;\n        } else {\n          return a;\n        }\n      },\n\n      max(_) {\n        if (arguments.length) {\n          b = _ == null ? 1 : _;\n          return dist;\n        } else {\n          return b;\n        }\n      },\n\n      sample: () => sampleUniform(a, b),\n      pdf: value => densityUniform(value, a, b),\n      cdf: value => cumulativeUniform(value, a, b),\n      icdf: p => quantileUniform(p, a, b)\n    };\n\n    if (max == null) {\n      max = min == null ? 1 : min;\n      min = 0;\n    }\n\n    return dist.min(min).max(max);\n  }\n\n  // Ordinary Least Squares\n  function ols (uX, uY, uXY, uX2) {\n    const delta = uX2 - uX * uX,\n          slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,\n          intercept = uY - slope * uX;\n    return [intercept, slope];\n  }\n\n  function points(data, x, y, sort) {\n    data = data.filter(d => {\n      let u = x(d),\n          v = y(d);\n      return u != null && (u = +u) >= u && v != null && (v = +v) >= v;\n    });\n\n    if (sort) {\n      data.sort((a, b) => x(a) - x(b));\n    }\n\n    const n = data.length,\n          X = new Float64Array(n),\n          Y = new Float64Array(n); // extract values, calculate means\n\n    let i = 0,\n        ux = 0,\n        uy = 0,\n        xv,\n        yv,\n        d;\n\n    for (d of data) {\n      X[i] = xv = +x(d);\n      Y[i] = yv = +y(d);\n      ++i;\n      ux += (xv - ux) / i;\n      uy += (yv - uy) / i;\n    } // mean center the data\n\n\n    for (i = 0; i < n; ++i) {\n      X[i] -= ux;\n      Y[i] -= uy;\n    }\n\n    return [X, Y, ux, uy];\n  }\n  function visitPoints(data, x, y, callback) {\n    let i = -1,\n        u,\n        v;\n\n    for (const d of data) {\n      u = x(d);\n      v = y(d);\n\n      if (u != null && (u = +u) >= u && v != null && (v = +v) >= v) {\n        callback(u, v, ++i);\n      }\n    }\n  }\n\n  // License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\n  function rSquared (data, x, y, uY, predict) {\n    let SSE = 0,\n        SST = 0;\n    visitPoints(data, x, y, (dx, dy) => {\n      const sse = dy - predict(dx),\n            sst = dy - uY;\n      SSE += sse * sse;\n      SST += sst * sst;\n    });\n    return 1 - SSE / SST;\n  }\n\n  // License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\n  function linear (data, x, y) {\n    let X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        n = 0;\n    visitPoints(data, x, y, (dx, dy) => {\n      ++n;\n      X += (dx - X) / n;\n      Y += (dy - Y) / n;\n      XY += (dx * dy - XY) / n;\n      X2 += (dx * dx - X2) / n;\n    });\n\n    const coef = ols(X, Y, XY, X2),\n          predict = x => coef[0] + coef[1] * x;\n\n    return {\n      coef: coef,\n      predict: predict,\n      rSquared: rSquared(data, x, y, Y, predict)\n    };\n  }\n\n  // License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\n  function log (data, x, y) {\n    let X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        n = 0;\n    visitPoints(data, x, y, (dx, dy) => {\n      ++n;\n      dx = Math.log(dx);\n      X += (dx - X) / n;\n      Y += (dy - Y) / n;\n      XY += (dx * dy - XY) / n;\n      X2 += (dx * dx - X2) / n;\n    });\n\n    const coef = ols(X, Y, XY, X2),\n          predict = x => coef[0] + coef[1] * Math.log(x);\n\n    return {\n      coef: coef,\n      predict: predict,\n      rSquared: rSquared(data, x, y, Y, predict)\n    };\n  }\n\n  function exp (data, x, y) {\n    // eslint-disable-next-line no-unused-vars\n    const [xv, yv, ux, uy] = points(data, x, y);\n    let YL = 0,\n        XY = 0,\n        XYL = 0,\n        X2Y = 0,\n        n = 0,\n        dx,\n        ly,\n        xy;\n    visitPoints(data, x, y, (_, dy) => {\n      dx = xv[n++];\n      ly = Math.log(dy);\n      xy = dx * dy;\n      YL += (dy * ly - YL) / n;\n      XY += (xy - XY) / n;\n      XYL += (xy * ly - XYL) / n;\n      X2Y += (dx * xy - X2Y) / n;\n    });\n\n    const [c0, c1] = ols(XY / uy, YL / uy, XYL / uy, X2Y / uy),\n          predict = x => Math.exp(c0 + c1 * (x - ux));\n\n    return {\n      coef: [Math.exp(c0 - c1 * ux), c1],\n      predict: predict,\n      rSquared: rSquared(data, x, y, uy, predict)\n    };\n  }\n\n  // License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\n  function pow (data, x, y) {\n    let X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        YS = 0,\n        n = 0;\n    visitPoints(data, x, y, (dx, dy) => {\n      const lx = Math.log(dx),\n            ly = Math.log(dy);\n      ++n;\n      X += (lx - X) / n;\n      Y += (ly - Y) / n;\n      XY += (lx * ly - XY) / n;\n      X2 += (lx * lx - X2) / n;\n      YS += (dy - YS) / n;\n    });\n\n    const coef = ols(X, Y, XY, X2),\n          predict = x => coef[0] * Math.pow(x, coef[1]);\n\n    coef[0] = Math.exp(coef[0]);\n    return {\n      coef: coef,\n      predict: predict,\n      rSquared: rSquared(data, x, y, YS, predict)\n    };\n  }\n\n  function quad (data, x, y) {\n    const [xv, yv, ux, uy] = points(data, x, y),\n          n = xv.length;\n    let X2 = 0,\n        X3 = 0,\n        X4 = 0,\n        XY = 0,\n        X2Y = 0,\n        i,\n        dx,\n        dy,\n        x2;\n\n    for (i = 0; i < n;) {\n      dx = xv[i];\n      dy = yv[i++];\n      x2 = dx * dx;\n      X2 += (x2 - X2) / i;\n      X3 += (x2 * dx - X3) / i;\n      X4 += (x2 * x2 - X4) / i;\n      XY += (dx * dy - XY) / i;\n      X2Y += (x2 * dy - X2Y) / i;\n    }\n\n    const X2X2 = X4 - X2 * X2,\n          d = X2 * X2X2 - X3 * X3,\n          a = (X2Y * X2 - XY * X3) / d,\n          b = (XY * X2X2 - X2Y * X3) / d,\n          c = -a * X2,\n          predict = x => {\n      x = x - ux;\n      return a * x * x + b * x + c + uy;\n    }; // transform coefficients back from mean-centered space\n\n\n    return {\n      coef: [c - b * ux + a * ux * ux + uy, b - 2 * a * ux, a],\n      predict: predict,\n      rSquared: rSquared(data, x, y, uy, predict)\n    };\n  }\n\n  // License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n  // ... which was adapted from regression-js by Tom Alexander\n  // Source: https://github.com/Tom-Alexander/regression-js/blob/master/src/regression.js#L246\n  // License: https://github.com/Tom-Alexander/regression-js/blob/master/LICENSE\n\n  function poly (data, x, y, order) {\n    // use more efficient methods for lower orders\n    if (order === 1) return linear(data, x, y);\n    if (order === 2) return quad(data, x, y);\n    const [xv, yv, ux, uy] = points(data, x, y),\n          n = xv.length,\n          lhs = [],\n          rhs = [],\n          k = order + 1;\n    let i, j, l, v, c;\n\n    for (i = 0; i < k; ++i) {\n      for (l = 0, v = 0; l < n; ++l) {\n        v += Math.pow(xv[l], i) * yv[l];\n      }\n\n      lhs.push(v);\n      c = new Float64Array(k);\n\n      for (j = 0; j < k; ++j) {\n        for (l = 0, v = 0; l < n; ++l) {\n          v += Math.pow(xv[l], i + j);\n        }\n\n        c[j] = v;\n      }\n\n      rhs.push(c);\n    }\n\n    rhs.push(lhs);\n\n    const coef = gaussianElimination(rhs),\n          predict = x => {\n      x -= ux;\n      let y = uy + coef[0] + coef[1] * x + coef[2] * x * x;\n\n      for (i = 3; i < k; ++i) y += coef[i] * Math.pow(x, i);\n\n      return y;\n    };\n\n    return {\n      coef: uncenter(k, coef, -ux, uy),\n      predict: predict,\n      rSquared: rSquared(data, x, y, uy, predict)\n    };\n  }\n\n  function uncenter(k, a, x, y) {\n    const z = Array(k);\n    let i, j, v, c; // initialize to zero\n\n    for (i = 0; i < k; ++i) z[i] = 0; // polynomial expansion\n\n\n    for (i = k - 1; i >= 0; --i) {\n      v = a[i];\n      c = 1;\n      z[i] += v;\n\n      for (j = 1; j <= i; ++j) {\n        c *= (i + 1 - j) / j; // binomial coefficent\n\n        z[i - j] += v * Math.pow(x, j) * c;\n      }\n    } // bias term\n\n\n    z[0] += y;\n    return z;\n  } // Given an array for a two-dimensional matrix and the polynomial order,\n  // solve A * x = b using Gaussian elimination.\n\n\n  function gaussianElimination(matrix) {\n    const n = matrix.length - 1,\n          coef = [];\n    let i, j, k, r, t;\n\n    for (i = 0; i < n; ++i) {\n      r = i; // max row\n\n      for (j = i + 1; j < n; ++j) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][r])) {\n          r = j;\n        }\n      }\n\n      for (k = i; k < n + 1; ++k) {\n        t = matrix[k][i];\n        matrix[k][i] = matrix[k][r];\n        matrix[k][r] = t;\n      }\n\n      for (j = i + 1; j < n; ++j) {\n        for (k = n; k >= i; k--) {\n          matrix[k][j] -= matrix[k][i] * matrix[i][j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (j = n - 1; j >= 0; --j) {\n      t = 0;\n\n      for (k = j + 1; k < n; ++k) {\n        t += matrix[k][j] * coef[k];\n      }\n\n      coef[j] = (matrix[n][j] - t) / matrix[j][j];\n    }\n\n    return coef;\n  }\n\n  const maxiters = 2,\n        epsilon = 1e-12; // Adapted from science.js by Jason Davies\n  // Source: https://github.com/jasondavies/science.js/blob/master/src/stats/loess.js\n  // License: https://github.com/jasondavies/science.js/blob/master/LICENSE\n\n  function loess (data, x, y, bandwidth) {\n    const [xv, yv, ux, uy] = points(data, x, y, true),\n          n = xv.length,\n          bw = Math.max(2, ~~(bandwidth * n)),\n          // # nearest neighbors\n    yhat = new Float64Array(n),\n          residuals = new Float64Array(n),\n          robustWeights = new Float64Array(n).fill(1);\n\n    for (let iter = -1; ++iter <= maxiters;) {\n      const interval = [0, bw - 1];\n\n      for (let i = 0; i < n; ++i) {\n        const dx = xv[i],\n              i0 = interval[0],\n              i1 = interval[1],\n              edge = dx - xv[i0] > xv[i1] - dx ? i0 : i1;\n        let W = 0,\n            X = 0,\n            Y = 0,\n            XY = 0,\n            X2 = 0;\n        const denom = 1 / Math.abs(xv[edge] - dx || 1); // avoid singularity!\n\n        for (let k = i0; k <= i1; ++k) {\n          const xk = xv[k],\n                yk = yv[k],\n                w = tricube(Math.abs(dx - xk) * denom) * robustWeights[k],\n                xkw = xk * w;\n          W += w;\n          X += xkw;\n          Y += yk * w;\n          XY += yk * xkw;\n          X2 += xk * xkw;\n        } // linear regression fit\n\n\n        const [a, b] = ols(X / W, Y / W, XY / W, X2 / W);\n        yhat[i] = a + b * dx;\n        residuals[i] = Math.abs(yv[i] - yhat[i]);\n        updateInterval(xv, i + 1, interval);\n      }\n\n      if (iter === maxiters) {\n        break;\n      }\n\n      const medianResidual = median(residuals);\n      if (Math.abs(medianResidual) < epsilon) break;\n\n      for (let i = 0, arg, w; i < n; ++i) {\n        arg = residuals[i] / (6 * medianResidual); // default to epsilon (rather than zero) for large deviations\n        // keeping weights tiny but non-zero prevents singularites\n\n        robustWeights[i] = arg >= 1 ? epsilon : (w = 1 - arg * arg) * w;\n      }\n    }\n\n    return output(xv, yhat, ux, uy);\n  } // weighting kernel for local regression\n\n  function tricube(x) {\n    return (x = 1 - x * x * x) * x * x;\n  } // advance sliding window interval of nearest neighbors\n\n\n  function updateInterval(xv, i, interval) {\n    const val = xv[i];\n    let left = interval[0],\n        right = interval[1] + 1;\n    if (right >= xv.length) return; // step right if distance to new right edge is <= distance to old left edge\n    // step when distance is equal to ensure movement over duplicate x values\n\n    while (i > left && xv[right] - val <= val - xv[left]) {\n      interval[0] = ++left;\n      interval[1] = right;\n      ++right;\n    }\n  } // generate smoothed output points\n  // average points with repeated x values\n\n\n  function output(xv, yhat, ux, uy) {\n    const n = xv.length,\n          out = [];\n    let i = 0,\n        cnt = 0,\n        prev = [],\n        v;\n\n    for (; i < n; ++i) {\n      v = xv[i] + ux;\n\n      if (prev[0] === v) {\n        // average output values via online update\n        prev[1] += (yhat[i] - prev[1]) / ++cnt;\n      } else {\n        // add new output point\n        cnt = 0;\n        prev[1] += uy;\n        prev = [v, yhat[i]];\n        out.push(prev);\n      }\n    }\n\n    prev[1] += uy;\n    return out;\n  }\n\n  // subdivide up to accuracy of 0.5 degrees\n  const MIN_RADIANS = 0.5 * Math.PI / 180; // Adaptively sample an interpolated function over a domain extent\n\n  function sampleCurve (f, extent, minSteps, maxSteps) {\n    minSteps = minSteps || 25;\n    maxSteps = Math.max(minSteps, maxSteps || 200);\n\n    const point = x => [x, f(x)],\n          minX = extent[0],\n          maxX = extent[1],\n          span = maxX - minX,\n          stop = span / maxSteps,\n          prev = [point(minX)],\n          next = [];\n\n    if (minSteps === maxSteps) {\n      // no adaptation, sample uniform grid directly and return\n      for (let i = 1; i < maxSteps; ++i) {\n        prev.push(point(minX + i / minSteps * span));\n      }\n\n      prev.push(point(maxX));\n      return prev;\n    } else {\n      // sample minimum points on uniform grid\n      // then move on to perform adaptive refinement\n      next.push(point(maxX));\n\n      for (let i = minSteps; --i > 0;) {\n        next.push(point(minX + i / minSteps * span));\n      }\n    }\n\n    let p0 = prev[0];\n    let p1 = next[next.length - 1];\n    const sx = 1 / span;\n    const sy = scaleY(p0[1], next);\n\n    while (p1) {\n      // midpoint for potential curve subdivision\n      const pm = point((p0[0] + p1[0]) / 2);\n      const dx = pm[0] - p0[0] >= stop;\n\n      if (dx && angleDelta(p0, pm, p1, sx, sy) > MIN_RADIANS) {\n        // maximum resolution has not yet been met, and\n        // subdivision midpoint is sufficiently different from endpoint\n        // save subdivision, push midpoint onto the visitation stack\n        next.push(pm);\n      } else {\n        // subdivision midpoint sufficiently similar to endpoint\n        // skip subdivision, store endpoint, move to next point on the stack\n        p0 = p1;\n        prev.push(p1);\n        next.pop();\n      }\n\n      p1 = next[next.length - 1];\n    }\n\n    return prev;\n  }\n\n  function scaleY(init, points) {\n    let ymin = init;\n    let ymax = init;\n    const n = points.length;\n\n    for (let i = 0; i < n; ++i) {\n      const y = points[i][1];\n      if (y < ymin) ymin = y;\n      if (y > ymax) ymax = y;\n    }\n\n    return 1 / (ymax - ymin);\n  }\n\n  function angleDelta(p, q, r, sx, sy) {\n    const a0 = Math.atan2(sy * (r[1] - p[1]), sx * (r[0] - p[0])),\n          a1 = Math.atan2(sy * (q[1] - p[1]), sx * (q[0] - p[0]));\n    return Math.abs(a0 - a1);\n  }\n\n  exports.bandwidthNRD = estimateBandwidth;\n  exports.bin = bin;\n  exports.bootstrapCI = bootstrapCI;\n  exports.cumulativeLogNormal = cumulativeLogNormal;\n  exports.cumulativeNormal = cumulativeNormal;\n  exports.cumulativeUniform = cumulativeUniform;\n  exports.densityLogNormal = densityLogNormal;\n  exports.densityNormal = densityNormal;\n  exports.densityUniform = densityUniform;\n  exports.dotbin = dotbin;\n  exports.quantileLogNormal = quantileLogNormal;\n  exports.quantileNormal = quantileNormal;\n  exports.quantileUniform = quantileUniform;\n  exports.quantiles = quantiles;\n  exports.quartiles = quartiles;\n  exports.randomInteger = integer;\n  exports.randomKDE = kde;\n  exports.randomLCG = lcg;\n  exports.randomLogNormal = lognormal;\n  exports.randomMixture = mixture;\n  exports.randomNormal = gaussian;\n  exports.randomUniform = uniform;\n  exports.regressionExp = exp;\n  exports.regressionLinear = linear;\n  exports.regressionLoess = loess;\n  exports.regressionLog = log;\n  exports.regressionPoly = poly;\n  exports.regressionPow = pow;\n  exports.regressionQuad = quad;\n  exports.sampleCurve = sampleCurve;\n  exports.sampleLogNormal = sampleLogNormal;\n  exports.sampleNormal = sampleNormal;\n  exports.sampleUniform = sampleUniform;\n  exports.setRandom = setRandom;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","numbers$1","values","valueof","value","index","ascending","a","b","NaN","number","x","numbers","undefined","compareDefined","compare","ascendingDefined","TypeError","max","min","quickselect","array","k","left","right","length","n","m","z","Math","log","s","exp","sd","sqrt","newLeft","floor","newRight","t","i","j","swap","quantile","p","Float64Array","from","i0","value0","subarray","value1","quantileSorted","quantiles","f","sort","map","_","quartiles","estimateBandwidth","count","delta","mean","sum","v","q","d","abs","pow","smoothing","thresh","c","sampleNormal","stdev","y","nextSample","random","rds","densityNormal","SQRT2PI","cumulativeNormal","Z","cd","quantileNormal","w","Number","isFinite","Infinity","SQRT2","gaussian","mu","sigma","dist","arguments","sample","pdf","cdf","icdf","sampleLogNormal","densityLogNormal","cumulativeLogNormal","quantileLogNormal","sampleUniform","densityUniform","cumulativeUniform","quantileUniform","ols","uX","uY","uXY","uX2","slope","points","data","filter","u","X","Y","ux","uy","yv","xv","visitPoints","callback","rSquared","predict","SSE","SST","dx","dy","sse","sst","linear","XY","X2","coef","quad","X3","X4","X2Y","x2","X2X2","uncenter","Array","gaussianElimination","matrix","r","PI","MIN_RADIANS","bandwidthNRD","bin","maxb","maxbins","base","logb","div","divide","extent","minstep","span","step","steps","level","ceil","round","eps","precision","nice","start","stop","bootstrapCI","samples","alpha","dotbin","smooth","randomInteger","integer","randomKDE","kde","support","bandwidth","kernel","Error","randomLCG","lcg","seed","randomLogNormal","lognormal","randomMixture","mixture","dists","weights","distributions","randomNormal","randomUniform","uniform","regressionExp","YL","XYL","ly","xy","c0","c1","regressionLinear","regressionLoess","loess","bw","yhat","residuals","robustWeights","fill","iter","maxiters","interval","i1","W","denom","edge","xk","yk","xkw","val","medianResidual","epsilon","arg","out","cnt","prev","push","regressionLog","regressionPoly","poly","order","lhs","rhs","l","regressionPow","YS","lx","regressionQuad","sampleCurve","minSteps","maxSteps","minX","maxX","next","p0","p1","sx","ymin","ymax","pm","atan2","a0","sy","a1","pop","setRandom","Object","defineProperty"]
}
